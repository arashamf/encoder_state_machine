ARM GAS  /tmp/cc6puPNO.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"OLED.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OLED_ClearBuffer,"ax",%progbits
  18              		.align	1
  19              		.global	OLED_ClearBuffer
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	OLED_ClearBuffer:
  25              	.LVL0:
  26              	.LFB763:
  27              		.file 1 "display/OLED.c"
   1:display/OLED.c **** //Includes ------------------------------------------------------------------//
   2:display/OLED.c **** #include "OLED.h"
   3:display/OLED.c **** #include "gpio.h"
   4:display/OLED.c **** #include "spi.h"
   5:display/OLED.c **** #include "tim.h"
   6:display/OLED.c **** #include <string.h>
   7:display/OLED.c **** #include <stdio.h>
   8:display/OLED.c **** 
   9:display/OLED.c **** //Private defines -----------------------------------------------------------//
  10:display/OLED.c **** #define SWAP(A, B) { A ^= B; B = A ^ B; A ^= B; }
  11:display/OLED.c **** #define ABS(A) (((A) < 0) ? ((-1) * (A)) : (A))
  12:display/OLED.c **** 
  13:display/OLED.c **** static uint8_t oled_start_column = 0;		// Display shift
  14:display/OLED.c **** static uint8_t oled_buffer[OLED_BUFFERSIZE];			// Display buffer
  15:display/OLED.c **** 
  16:display/OLED.c **** //-----------------------------------------------------------------------------//
  17:display/OLED.c **** void OLED_ClearBuffer(uint8_t value)
  18:display/OLED.c **** {
  28              		.loc 1 18 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  33              		.loc 1 19 2 view .LVU1
  34              	.LBB26:
  35              		.loc 1 19 7 view .LVU2
  36              		.loc 1 19 16 is_stmt 0 view .LVU3
  37 0000 0023     		movs	r3, #0
  38              		.loc 1 19 2 view .LVU4
  39 0002 03E0     		b	.L2
ARM GAS  /tmp/cc6puPNO.s 			page 2


  40              	.LVL1:
  41              	.L3:
  20:display/OLED.c **** 	{
  21:display/OLED.c **** 		oled_buffer[i] = value;
  42              		.loc 1 21 3 is_stmt 1 discriminator 3 view .LVU5
  43              		.loc 1 21 18 is_stmt 0 discriminator 3 view .LVU6
  44 0004 034A     		ldr	r2, .L4
  45 0006 D054     		strb	r0, [r2, r3]
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  46              		.loc 1 19 44 is_stmt 1 discriminator 3 view .LVU7
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  47              		.loc 1 19 45 is_stmt 0 discriminator 3 view .LVU8
  48 0008 0133     		adds	r3, r3, #1
  49              	.LVL2:
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  50              		.loc 1 19 45 discriminator 3 view .LVU9
  51 000a 9BB2     		uxth	r3, r3
  52              	.LVL3:
  53              	.L2:
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  54              		.loc 1 19 23 is_stmt 1 discriminator 1 view .LVU10
  19:display/OLED.c **** 	for (uint16_t i = 0; i < OLED_BUFFERSIZE; i++)
  55              		.loc 1 19 2 is_stmt 0 discriminator 1 view .LVU11
  56 000c B3F5806F 		cmp	r3, #1024
  57 0010 F8D3     		bcc	.L3
  58              	.LBE26:
  22:display/OLED.c **** 	}
  23:display/OLED.c **** }
  59              		.loc 1 23 1 view .LVU12
  60 0012 7047     		bx	lr
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 0014 00000000 		.word	.LANCHOR0
  65              		.cfi_endproc
  66              	.LFE763:
  68              		.section	.text.OLED_SendCommand,"ax",%progbits
  69              		.align	1
  70              		.global	OLED_SendCommand
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	OLED_SendCommand:
  76              	.LVL4:
  77              	.LFB764:
  24:display/OLED.c **** 
  25:display/OLED.c **** //-----------------------------------------------------------------------------//
  26:display/OLED.c **** void OLED_SendCommand(uint8_t command)
  27:display/OLED.c **** {
  78              		.loc 1 27 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  28:display/OLED.c **** 	LCD_CS(ON);
  83              		.loc 1 28 2 view .LVU14
  84              	.LBB27:
ARM GAS  /tmp/cc6puPNO.s 			page 3


  85              	.LBI27:
  86              		.file 2 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @file    stm32f1xx_ll_gpio.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifndef STM32F1xx_LL_GPIO_H
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define STM32F1xx_LL_GPIO_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #include "stm32f1xx.h"
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @addtogroup STM32F1xx_LL_Driver
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Constants GPIO Private Constants
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Defines used for Pin Mask Initialization */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_MASK_POS   8U
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_NB         16U
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /tmp/cc6puPNO.s 			page 4


  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** typedef struct
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /tmp/cc6puPNO.s 			page 5


 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_0                    ((GPIO_BSRR_BS0  << GPIO_PIN_MASK_POS) | 0x00000001U)  /*!
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_1                    ((GPIO_BSRR_BS1  << GPIO_PIN_MASK_POS) | 0x00000002U)  /*!
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_2                    ((GPIO_BSRR_BS2  << GPIO_PIN_MASK_POS) | 0x00000004U)  /*!
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_3                    ((GPIO_BSRR_BS3  << GPIO_PIN_MASK_POS) | 0x00000008U)  /*!
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_4                    ((GPIO_BSRR_BS4  << GPIO_PIN_MASK_POS) | 0x00000010U)  /*!
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_5                    ((GPIO_BSRR_BS5  << GPIO_PIN_MASK_POS) | 0x00000020U)  /*!
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_6                    ((GPIO_BSRR_BS6  << GPIO_PIN_MASK_POS) | 0x00000040U)  /*!
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_7                    ((GPIO_BSRR_BS7  << GPIO_PIN_MASK_POS) | 0x00000080U)  /*!
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_8                    ((GPIO_BSRR_BS8  << GPIO_PIN_MASK_POS) | 0x04000001U)  /*!
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_9                    ((GPIO_BSRR_BS9  << GPIO_PIN_MASK_POS) | 0x04000002U)  /*!
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_10                   ((GPIO_BSRR_BS10 << GPIO_PIN_MASK_POS) | 0x04000004U)  /*!
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_11                   ((GPIO_BSRR_BS11 << GPIO_PIN_MASK_POS) | 0x04000008U)  /*!
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_12                   ((GPIO_BSRR_BS12 << GPIO_PIN_MASK_POS) | 0x04000010U)  /*!
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_13                   ((GPIO_BSRR_BS13 << GPIO_PIN_MASK_POS) | 0x04000020U)  /*!
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_14                   ((GPIO_BSRR_BS14 << GPIO_PIN_MASK_POS) | 0x04000040U)  /*!
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_15                   ((GPIO_BSRR_BS15 << GPIO_PIN_MASK_POS) | 0x04000080U)  /*!
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                  (LL_GPIO_PIN_0  | LL_GPIO_PIN_1  | LL_GPIO_PIN_2  | \
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_3  | LL_GPIO_PIN_4  | LL_GPIO_PIN_5  | \
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_6  | LL_GPIO_PIN_7  | LL_GPIO_PIN_8  | \
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_9  | LL_GPIO_PIN_10 | LL_GPIO_PIN_11 | \
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_12 | LL_GPIO_PIN_13 | LL_GPIO_PIN_14 | \
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_15)                                      /*!<
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG              0x00000000U       /*!< Select analog mode */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_FLOATING            GPIO_CRL_CNF0_0   /*!< Select floating mode */
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT               GPIO_CRL_CNF0_1   /*!< Select input mode */
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT              GPIO_CRL_MODE0_0  /*!< Select general purpose output mode 
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE           (GPIO_CRL_CNF0_1 | GPIO_CRL_MODE0_0) /*!< Select alternate
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL          0x00000000U                /*!< Select push-pull as output
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN         GPIO_CRL_CNF0_0            /*!< Select open-drain as outpu
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_10MHz        GPIO_CRL_MODE0_0            /*!< Select Output mode, max s
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_2MHz         GPIO_CRL_MODE0_1            /*!< Select Output mode, max s
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_50MHz        GPIO_CRL_MODE0              /*!< Select Output mode, max s
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/cc6puPNO.s 			page 6


 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW           LL_GPIO_MODE_OUTPUT_2MHz    /*!< Select I/O low output spe
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM        LL_GPIO_MODE_OUTPUT_10MHz   /*!< Select I/O medium output 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH          LL_GPIO_MODE_OUTPUT_50MHz   /*!< Select I/O high output sp
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                0x00000000U    /*!< Select I/O pull down */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                  GPIO_ODR_ODR0  /*!< Select I/O pull up */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PIN EVENTOUT Pin
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_0        AFIO_EVCR_PIN_PX0   /*!< EVENTOUT on pin 0 */
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_1        AFIO_EVCR_PIN_PX1   /*!< EVENTOUT on pin 1 */
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_2        AFIO_EVCR_PIN_PX2   /*!< EVENTOUT on pin 2 */
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_3        AFIO_EVCR_PIN_PX3   /*!< EVENTOUT on pin 3 */
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_4        AFIO_EVCR_PIN_PX4   /*!< EVENTOUT on pin 4 */
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_5        AFIO_EVCR_PIN_PX5   /*!< EVENTOUT on pin 5 */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_6        AFIO_EVCR_PIN_PX6   /*!< EVENTOUT on pin 6 */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_7        AFIO_EVCR_PIN_PX7   /*!< EVENTOUT on pin 7 */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_8        AFIO_EVCR_PIN_PX8   /*!< EVENTOUT on pin 8 */
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_9        AFIO_EVCR_PIN_PX9   /*!< EVENTOUT on pin 9 */
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_10       AFIO_EVCR_PIN_PX10  /*!< EVENTOUT on pin 10 */
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_11       AFIO_EVCR_PIN_PX11  /*!< EVENTOUT on pin 11 */
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_12       AFIO_EVCR_PIN_PX12  /*!< EVENTOUT on pin 12 */
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_13       AFIO_EVCR_PIN_PX13  /*!< EVENTOUT on pin 13 */
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_14       AFIO_EVCR_PIN_PX14  /*!< EVENTOUT on pin 14 */
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_15       AFIO_EVCR_PIN_PX15  /*!< EVENTOUT on pin 15 */
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PORT EVENTOUT Port
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_A       AFIO_EVCR_PORT_PA  /*!< EVENTOUT on port A */
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_B       AFIO_EVCR_PORT_PB  /*!< EVENTOUT on port B */
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_C       AFIO_EVCR_PORT_PC  /*!< EVENTOUT on port C */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_D       AFIO_EVCR_PORT_PD  /*!< EVENTOUT on port D */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_E       AFIO_EVCR_PORT_PE  /*!< EVENTOUT on port E */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_PORT GPIO EXTI PORT
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTA            0U   /*!< EXTI PORT A */
ARM GAS  /tmp/cc6puPNO.s 			page 7


 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTB            1U   /*!< EXTI PORT B */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTC            2U   /*!< EXTI PORT C */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTD            3U   /*!< EXTI PORT D */
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTE            4U   /*!< EXTI PORT E */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTF            5U   /*!< EXTI PORT F */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTG            6U   /*!< EXTI PORT G */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_LINE GPIO EXTI LINE
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE0            (0x000FU << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTICR[0] *
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE1            (0x00F0U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTICR[0] *
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE2            (0x0F00U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTICR[0] *
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE3            (0xF000U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXTICR[0] *
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE4            (0x000FU << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTICR[1] *
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE5            (0x00F0U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTICR[1] *
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE6            (0x0F00U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTICR[1] *
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE7            (0xF000U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXTICR[1] *
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE8            (0x000FU << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTICR[2] *
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE9            (0x00F0U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTICR[2] *
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE10           (0x0F00U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTICR[2] *
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE11           (0xF000U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXTICR[2] *
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE12           (0x000FU << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTICR[3] *
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE13           (0x00F0U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTICR[3] *
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE14           (0x0F00U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTICR[3] *
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE15           (0xF000U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXTICR[3] *
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
ARM GAS  /tmp/cc6puPNO.s 			page 8


 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Register value
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_SetPinMode
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_SetPinMode
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_SetPinMode
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_SetPinMode
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /tmp/cc6puPNO.s 			page 9


 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U)), (Mode << (POSIT
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_GetPinMode
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_GetPinMode
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_GetPinMode
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_GetPinMode
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U))) >> (POSIT
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium or Fast speed.
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_SetPinSpeed
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_SetPinSpeed
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
ARM GAS  /tmp/cc6puPNO.s 			page 10


 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U)),
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 4U)));
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_GetPinSpeed
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_GetPinSpeed
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
ARM GAS  /tmp/cc6puPNO.s 			page 11


 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U)
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy           LL_GPIO_SetPinOutputType
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy           LL_GPIO_SetPinOutputType
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be a combination of the following values:
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t OutputTyp
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U)),
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (OutputType << (POSITION_VAL(Pin) * 4U)));
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy       LL_GPIO_GetPinOutputType
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy       LL_GPIO_GetPinOutputType
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
ARM GAS  /tmp/cc6puPNO.s 			page 12


 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_SetPinPull
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(GPIOx->ODR, (Pin >> GPIO_PIN_MASK_POS), Pull << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/cc6puPNO.s 			page 13


 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_GetPinPull
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (GPIO_ODR_ODR0 << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS)))) >> (POS
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         next reset.
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         (control and alternate function registers).
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  /tmp/cc6puPNO.s 			page 14


 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   __IO uint32_t temp;
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   (void) temp;
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU)) == ((PinMask >> GPI
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/cc6puPNO.s 			page 15


 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Input data register value of port
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_REG(GPIOx->IDR));
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
ARM GAS  /tmp/cc6puPNO.s 			page 16


 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Output data register value of port
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
ARM GAS  /tmp/cc6puPNO.s 			page 17


 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
  87              		.loc 2 803 22 view .LVU15
  88              	.LBB28:
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
  89              		.loc 2 805 3 view .LVU16
  90 0000 084B     		ldr	r3, .L8
  91 0002 1022     		movs	r2, #16
  92 0004 1A61     		str	r2, [r3, #16]
  93              	.LVL5:
  94              		.loc 2 805 3 is_stmt 0 view .LVU17
  95              	.LBE28:
  96              	.LBE27:
  97              		.loc 1 28 12 is_stmt 1 view .LVU18
  29:display/OLED.c **** 	LCD_DC(OFF);
  98              		.loc 1 29 2 view .LVU19
  99              	.LBB29:
 100              	.LBI29:
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 101              		.loc 2 832 22 view .LVU20
 102              	.LBB30:
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 103              		.loc 2 834 3 view .LVU21
 104 0006 0822     		movs	r2, #8
ARM GAS  /tmp/cc6puPNO.s 			page 18


 105 0008 5A61     		str	r2, [r3, #20]
 106              	.LVL6:
 107              	.L7:
 108              		.loc 2 834 3 is_stmt 0 view .LVU22
 109              	.LBE30:
 110              	.LBE29:
  30:display/OLED.c **** 	while ( !LL_SPI_IsActiveFlag_TXE (OLED_SPI)) {}
 111              		.loc 1 30 48 is_stmt 1 discriminator 1 view .LVU23
 112              		.loc 1 30 8 discriminator 1 view .LVU24
 113              	.LBB31:
 114              	.LBI31:
 115              		.file 3 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @file    stm32f1xx_ll_spi.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * All rights reserved.
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * in the root directory of this software component.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   ******************************************************************************
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #ifndef STM32F1xx_LL_SPI_H
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define STM32F1xx_LL_SPI_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #ifdef __cplusplus
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** extern "C" {
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #endif
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #include "stm32f1xx.h"
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @addtogroup STM32F1xx_LL_Driver
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2) || defined (SPI3)
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /tmp/cc6puPNO.s 			page 19


  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  SPI Init structures definition
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** typedef struct
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
ARM GAS  /tmp/cc6puPNO.s 			page 20


 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
ARM GAS  /tmp/cc6puPNO.s 			page 21


 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
ARM GAS  /tmp/cc6puPNO.s 			page 22


 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              0x00000000U                       /*!< Data length for S
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR1_DFF)                     /*!< Data length for S
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Write a value in SPI register
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  __REG__ Register to be written
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Read a value in SPI register
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  __REG__ Register to be read
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Register value
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
ARM GAS  /tmp/cc6puPNO.s 			page 23


 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE)) ? 1UL : 0UL);
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
ARM GAS  /tmp/cc6puPNO.s 			page 24


 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set clock phase
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get clock phase
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set clock polarity
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
ARM GAS  /tmp/cc6puPNO.s 			page 25


 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get clock polarity
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
ARM GAS  /tmp/cc6puPNO.s 			page 26


 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set transfer bit order
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get transfer bit order
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set transfer direction mode
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get transfer direction mode
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
ARM GAS  /tmp/cc6puPNO.s 			page 27


 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set frame data width
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          DFF           LL_SPI_SetDataWidth
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_DFF, DataWidth);
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get frame data width
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          DFF           LL_SPI_GetDataWidth
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_DFF));
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable CRC
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
ARM GAS  /tmp/cc6puPNO.s 			page 28


 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable CRC
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN)) ? 1UL : 0UL);
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
ARM GAS  /tmp/cc6puPNO.s 			page 29


 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get Rx CRC
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get Tx CRC
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Set NSS mode
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get NSS mode
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
ARM GAS  /tmp/cc6puPNO.s 			page 30


 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (Ssm | Ssoe);
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_FLAG_Management FLAG Management
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if Rx buffer is not empty
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           RXNE          LL_SPI_IsActiveFlag_RXNE
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_RXNE(SPI_TypeDef *SPIx)
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_RXNE) == (SPI_SR_RXNE)) ? 1UL : 0UL);
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if Tx buffer is empty
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           TXE           LL_SPI_IsActiveFlag_TXE
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_TXE(SPI_TypeDef *SPIx)
 116              		.loc 3 707 26 discriminator 1 view .LVU25
 117              	.LBB32:
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_TXE) == (SPI_SR_TXE)) ? 1UL : 0UL);
 118              		.loc 3 709 3 discriminator 1 view .LVU26
 119              		.loc 3 709 12 is_stmt 0 discriminator 1 view .LVU27
 120 000a 074B     		ldr	r3, .L8+4
 121 000c 9B68     		ldr	r3, [r3, #8]
 122              		.loc 3 709 66 discriminator 1 view .LVU28
 123 000e 13F0020F 		tst	r3, #2
 124 0012 FAD0     		beq	.L7
 125              	.LVL7:
 126              		.loc 3 709 66 discriminator 1 view .LVU29
 127              	.LBE32:
 128              	.LBE31:
  31:display/OLED.c **** 	LL_SPI_TransmitData8(OLED_SPI, command);
 129              		.loc 1 31 2 is_stmt 1 view .LVU30
 130              	.LBB33:
 131              	.LBI33:
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
ARM GAS  /tmp/cc6puPNO.s 			page 31


 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get CRC error flag
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_IsActiveFlag_CRCERR
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_CRCERR(SPI_TypeDef *SPIx)
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_CRCERR) == (SPI_SR_CRCERR)) ? 1UL : 0UL);
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get mode fault error flag
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_IsActiveFlag_MODF
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_MODF(SPI_TypeDef *SPIx)
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_MODF) == (SPI_SR_MODF)) ? 1UL : 0UL);
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get overrun error flag
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_IsActiveFlag_OVR
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_OVR(SPI_TypeDef *SPIx)
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_OVR) == (SPI_SR_OVR)) ? 1UL : 0UL);
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get busy flag
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   The BSY flag is cleared under any one of the following conditions:
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * -When the SPI is correctly disabled
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * -When a fault is detected in Master mode (MODF bit set to 1)
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * -In Master mode, when it finishes a data transmission and no new data is ready to be
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * sent
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * -In Slave mode, when the BSY flag is set to '0' for at least one SPI clock cycle between
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * each data transfer.
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           BSY           LL_SPI_IsActiveFlag_BSY
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsActiveFlag_BSY(SPI_TypeDef *SPIx)
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->SR, SPI_SR_BSY) == (SPI_SR_BSY)) ? 1UL : 0UL);
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Clear CRC error flag
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           CRCERR        LL_SPI_ClearFlag_CRCERR
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
ARM GAS  /tmp/cc6puPNO.s 			page 32


 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_CRCERR(SPI_TypeDef *SPIx)
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->SR, SPI_SR_CRCERR);
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Clear mode fault error flag
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_SR
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         register followed by a write access to the SPIx_CR1 register
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           MODF          LL_SPI_ClearFlag_MODF
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_MODF(SPI_TypeDef *SPIx)
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   __IO uint32_t tmpreg_sr;
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   tmpreg_sr = SPIx->SR;
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   (void) tmpreg_sr;
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Clear overrun error flag
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   Clearing this flag is done by a read access to the SPIx_DR
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *         register followed by a read access to the SPIx_SR register
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           OVR           LL_SPI_ClearFlag_OVR
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_OVR(SPI_TypeDef *SPIx)
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   __IO uint32_t tmpreg;
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   tmpreg = SPIx->DR;
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   (void) tmpreg;
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   tmpreg = SPIx->SR;
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   (void) tmpreg;
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Clear frame format error flag
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   Clearing this flag is done by reading SPIx_SR register
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll SR           FRE           LL_SPI_ClearFlag_FRE
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_ClearFlag_FRE(SPI_TypeDef *SPIx)
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   __IO uint32_t tmpreg;
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   tmpreg = SPIx->SR;
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   (void) tmpreg;
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_IT_Management Interrupt Management
ARM GAS  /tmp/cc6puPNO.s 			page 33


 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable error interrupt
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_EnableIT_ERR
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_ERR(SPI_TypeDef *SPIx)
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_ERRIE);
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable Rx buffer not empty interrupt
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_EnableIT_RXNE
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_RXNE(SPI_TypeDef *SPIx)
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable Tx buffer empty interrupt
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_EnableIT_TXE
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableIT_TXE(SPI_TypeDef *SPIx)
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXEIE);
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable error interrupt
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @note   This bit controls the generation of an interrupt when an error condition occurs (CRCERR
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_DisableIT_ERR
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_ERR(SPI_TypeDef *SPIx)
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_ERRIE);
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable Rx buffer not empty interrupt
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_DisableIT_RXNE
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_RXNE(SPI_TypeDef *SPIx)
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
ARM GAS  /tmp/cc6puPNO.s 			page 34


 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXNEIE);
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable Tx buffer empty interrupt
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_DisableIT_TXE
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableIT_TXE(SPI_TypeDef *SPIx)
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXEIE);
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if error interrupt is enabled
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          ERRIE         LL_SPI_IsEnabledIT_ERR
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_ERR(SPI_TypeDef *SPIx)
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_ERRIE) == (SPI_CR2_ERRIE)) ? 1UL : 0UL);
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if Rx buffer not empty interrupt is enabled
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXNEIE        LL_SPI_IsEnabledIT_RXNE
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_RXNE(SPI_TypeDef *SPIx)
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXNEIE) == (SPI_CR2_RXNEIE)) ? 1UL : 0UL);
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if Tx buffer empty interrupt
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXEIE         LL_SPI_IsEnabledIT_TXE
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledIT_TXE(SPI_TypeDef *SPIx)
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXEIE) == (SPI_CR2_TXEIE)) ? 1UL : 0UL);
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DMA_Management DMA Management
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable DMA Rx
ARM GAS  /tmp/cc6puPNO.s 			page 35


 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_EnableDMAReq_RX
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_RX(SPI_TypeDef *SPIx)
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable DMA Rx
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_DisableDMAReq_RX
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_RX(SPI_TypeDef *SPIx)
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_RXDMAEN);
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if DMA Rx is enabled
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          RXDMAEN       LL_SPI_IsEnabledDMAReq_RX
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_RX(SPI_TypeDef *SPIx)
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_RXDMAEN) == (SPI_CR2_RXDMAEN)) ? 1UL : 0UL);
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Enable DMA Tx
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_EnableDMAReq_TX
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableDMAReq_TX(SPI_TypeDef *SPIx)
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Disable DMA Tx
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_DisableDMAReq_TX
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableDMAReq_TX(SPI_TypeDef *SPIx)
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_TXDMAEN);
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Check if DMA Tx is enabled
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll CR2          TXDMAEN       LL_SPI_IsEnabledDMAReq_TX
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  /tmp/cc6puPNO.s 			page 36


 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledDMAReq_TX(SPI_TypeDef *SPIx)
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return ((READ_BIT(SPIx->CR2, SPI_CR2_TXDMAEN) == (SPI_CR2_TXDMAEN)) ? 1UL : 0UL);
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Get the data register address used for DMA transfer
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_DMA_GetRegAddr
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval Address of data register
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_DMA_GetRegAddr(SPI_TypeDef *SPIx)
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint32_t) &(SPIx->DR);
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @}
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /** @defgroup SPI_LL_EF_DATA_Management DATA Management
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @{
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Read 8-Bits in the data register
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData8
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFF
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint8_t LL_SPI_ReceiveData8(SPI_TypeDef *SPIx)
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (*((__IO uint8_t *)&SPIx->DR));
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Read 16-Bits in the data register
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_ReceiveData16
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval RxData Value between Min_Data=0x00 and Max_Data=0xFFFF
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE uint16_t LL_SPI_ReceiveData16(SPI_TypeDef *SPIx)
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   return (uint16_t)(READ_REG(SPIx->DR));
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** 
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** /**
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @brief  Write 8-Bits in the data register
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @rmtoll DR           DR            LL_SPI_TransmitData8
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  SPIx SPI Instance
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   * @retval None
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   */
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
 132              		.loc 3 1053 22 view .LVU31
ARM GAS  /tmp/cc6puPNO.s 			page 37


 133              	.LBB34:
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** #if defined (__GNUC__)
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   __IO uint8_t *spidr = ((__IO uint8_t *)&SPIx->DR);
 134              		.loc 3 1056 3 view .LVU32
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *spidr = TxData;
 135              		.loc 3 1057 3 view .LVU33
 136              		.loc 3 1057 10 is_stmt 0 view .LVU34
 137 0014 044B     		ldr	r3, .L8+4
 138 0016 1873     		strb	r0, [r3, #12]
 139              	.LVL8:
 140              		.loc 3 1057 10 view .LVU35
 141              	.LBE34:
 142              	.LBE33:
  32:display/OLED.c **** 	LCD_CS(OFF);
 143              		.loc 1 32 2 is_stmt 1 view .LVU36
 144              	.LBB35:
 145              	.LBI35:
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 146              		.loc 2 832 22 view .LVU37
 147              	.LBB36:
 148              		.loc 2 834 3 view .LVU38
 149 0018 A3F52053 		sub	r3, r3, #10240
 150 001c 1022     		movs	r2, #16
 151 001e 5A61     		str	r2, [r3, #20]
 152              	.LVL9:
 153              		.loc 2 834 3 is_stmt 0 view .LVU39
 154              	.LBE36:
 155              	.LBE35:
 156              		.loc 1 32 13 is_stmt 1 view .LVU40
  33:display/OLED.c **** }
 157              		.loc 1 33 1 is_stmt 0 view .LVU41
 158 0020 7047     		bx	lr
 159              	.L9:
 160 0022 00BF     		.align	2
 161              	.L8:
 162 0024 00080140 		.word	1073809408
 163 0028 00300140 		.word	1073819648
 164              		.cfi_endproc
 165              	.LFE764:
 167              		.section	.text.OLED_SendData,"ax",%progbits
 168              		.align	1
 169              		.global	OLED_SendData
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 174              	OLED_SendData:
 175              	.LVL10:
 176              	.LFB765:
  34:display/OLED.c **** 
  35:display/OLED.c **** //-----------------------------------------------------------------------------//
  36:display/OLED.c **** void OLED_SendData(uint8_t data)
  37:display/OLED.c **** {
 177              		.loc 1 37 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6puPNO.s 			page 38


 181              		@ link register save eliminated.
  38:display/OLED.c **** 	LCD_CS(ON);
 182              		.loc 1 38 2 view .LVU43
 183              	.LBB37:
 184              	.LBI37:
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 185              		.loc 2 803 22 view .LVU44
 186              	.LBB38:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 187              		.loc 2 805 3 view .LVU45
 188 0000 084B     		ldr	r3, .L12
 189 0002 1022     		movs	r2, #16
 190 0004 1A61     		str	r2, [r3, #16]
 191              	.LVL11:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 192              		.loc 2 805 3 is_stmt 0 view .LVU46
 193              	.LBE38:
 194              	.LBE37:
 195              		.loc 1 38 12 is_stmt 1 view .LVU47
  39:display/OLED.c **** 	LCD_DC(ON);
 196              		.loc 1 39 2 view .LVU48
 197              	.LBB39:
 198              	.LBI39:
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 199              		.loc 2 803 22 view .LVU49
 200              	.LBB40:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 201              		.loc 2 805 3 view .LVU50
 202 0006 0822     		movs	r2, #8
 203 0008 1A61     		str	r2, [r3, #16]
 204              	.LVL12:
 205              	.L11:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 206              		.loc 2 805 3 is_stmt 0 view .LVU51
 207              	.LBE40:
 208              	.LBE39:
  40:display/OLED.c **** 	while ( !LL_SPI_IsActiveFlag_TXE (OLED_SPI)) {}
 209              		.loc 1 40 48 is_stmt 1 discriminator 1 view .LVU52
 210              		.loc 1 40 8 discriminator 1 view .LVU53
 211              	.LBB41:
 212              	.LBI41:
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 213              		.loc 3 707 26 discriminator 1 view .LVU54
 214              	.LBB42:
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 215              		.loc 3 709 3 discriminator 1 view .LVU55
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 216              		.loc 3 709 12 is_stmt 0 discriminator 1 view .LVU56
 217 000a 074B     		ldr	r3, .L12+4
 218 000c 9B68     		ldr	r3, [r3, #8]
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 219              		.loc 3 709 66 discriminator 1 view .LVU57
 220 000e 13F0020F 		tst	r3, #2
 221 0012 FAD0     		beq	.L11
 222              	.LVL13:
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** }
 223              		.loc 3 709 66 discriminator 1 view .LVU58
ARM GAS  /tmp/cc6puPNO.s 			page 39


 224              	.LBE42:
 225              	.LBE41:
  41:display/OLED.c **** 	LL_SPI_TransmitData8(OLED_SPI, data);
 226              		.loc 1 41 2 is_stmt 1 view .LVU59
 227              	.LBB43:
 228              	.LBI43:
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h **** {
 229              		.loc 3 1053 22 view .LVU60
 230              	.LBB44:
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h ****   *spidr = TxData;
 231              		.loc 3 1056 3 view .LVU61
 232              		.loc 3 1057 3 view .LVU62
 233              		.loc 3 1057 10 is_stmt 0 view .LVU63
 234 0014 044B     		ldr	r3, .L12+4
 235 0016 1873     		strb	r0, [r3, #12]
 236              	.LVL14:
 237              		.loc 3 1057 10 view .LVU64
 238              	.LBE44:
 239              	.LBE43:
  42:display/OLED.c **** 	LCD_CS(OFF);
 240              		.loc 1 42 2 is_stmt 1 view .LVU65
 241              	.LBB45:
 242              	.LBI45:
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 243              		.loc 2 832 22 view .LVU66
 244              	.LBB46:
 245              		.loc 2 834 3 view .LVU67
 246 0018 A3F52053 		sub	r3, r3, #10240
 247 001c 1022     		movs	r2, #16
 248 001e 5A61     		str	r2, [r3, #20]
 249              	.LVL15:
 250              		.loc 2 834 3 is_stmt 0 view .LVU68
 251              	.LBE46:
 252              	.LBE45:
 253              		.loc 1 42 13 is_stmt 1 view .LVU69
  43:display/OLED.c **** }
 254              		.loc 1 43 1 is_stmt 0 view .LVU70
 255 0020 7047     		bx	lr
 256              	.L13:
 257 0022 00BF     		.align	2
 258              	.L12:
 259 0024 00080140 		.word	1073809408
 260 0028 00300140 		.word	1073819648
 261              		.cfi_endproc
 262              	.LFE765:
 264              		.section	.text.OLED_Clear,"ax",%progbits
 265              		.align	1
 266              		.global	OLED_Clear
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	OLED_Clear:
 272              	.LVL16:
 273              	.LFB767:
  44:display/OLED.c **** 
  45:display/OLED.c **** //-----------------------------------------------------------------------------//
  46:display/OLED.c **** uint8_t OLED_init(void)
ARM GAS  /tmp/cc6puPNO.s 			page 40


  47:display/OLED.c **** {
  48:display/OLED.c **** 	LCD_RST(OFF);
  49:display/OLED.c **** 	delay_us (3);	
  50:display/OLED.c ****   	LCD_RST(ON);
  51:display/OLED.c ****   	delay_us (3);	
  52:display/OLED.c **** 	
  53:display/OLED.c **** 	OLED_SendCommand(OLED_DISPLAY_OFF); // Display Off
  54:display/OLED.c **** 	OLED_SendCommand(OLED_SET_DISPLAY_CLOCK_DIV_RATIO);
  55:display/OLED.c **** 	OLED_SendCommand(0x80);
  56:display/OLED.c **** 	
  57:display/OLED.c **** 	OLED_SendCommand(OLED_SET_MULTIPLEX_RATIO);
  58:display/OLED.c **** 	OLED_SendCommand(0x3F);
  59:display/OLED.c **** 	
  60:display/OLED.c **** 	OLED_SendCommand(OLED_SET_DISPLAY_OFFSET);
  61:display/OLED.c **** 	OLED_SendCommand(0x0);
  62:display/OLED.c **** 	
  63:display/OLED.c **** 	OLED_SendCommand(OLED_SET_START_LINE | 0x0);
  64:display/OLED.c **** 	
  65:display/OLED.c **** 	OLED_SendCommand(OLED_CHARGE_PUMP); //set pump voltage value
  66:display/OLED.c **** 	OLED_SendCommand(0x14);
  67:display/OLED.c **** 	
  68:display/OLED.c **** 	OLED_SendCommand(OLED_MEMORY_ADDR_MODE);
  69:display/OLED.c **** 	OLED_SendCommand(0x00);
  70:display/OLED.c **** 	
  71:display/OLED.c **** 	OLED_SendCommand(OLED_SET_SEGMENT_REMAP | 0x0); //0x1 - left rotation, 0x0 - right rotation
  72:display/OLED.c **** 	OLED_SendCommand(OLED_COM_SCAN_DIR_DEC);
  73:display/OLED.c **** 	OLED_SendCommand(OLED_SET_COM_PINS);
  74:display/OLED.c **** 	OLED_SendCommand(0x12);
  75:display/OLED.c **** 	
  76:display/OLED.c **** 	OLED_SendCommand(OLED_SET_CONTRAST_CONTROL);
  77:display/OLED.c **** 	OLED_SendCommand(0xFF);
  78:display/OLED.c **** 	
  79:display/OLED.c **** 	OLED_SendCommand(OLED_SET_PRECHARGE_PERIOD);
  80:display/OLED.c **** 	OLED_SendCommand(0xF1);
  81:display/OLED.c **** 	
  82:display/OLED.c **** 	OLED_SendCommand(OLED_SET_VCOM_DESELECT);
  83:display/OLED.c **** 	OLED_SendCommand(0x40);
  84:display/OLED.c **** 	
  85:display/OLED.c **** 	OLED_SendCommand(OLED_DISPLAY_ALL_ON_RESUME);
  86:display/OLED.c **** 	OLED_SendCommand(OLED_NORMAL_DISPLAY);
  87:display/OLED.c **** 	OLED_SendCommand(OLED_DISPLAY_ON);  // Display On
  88:display/OLED.c **** 
  89:display/OLED.c **** 	OLED_Invert(NONE_INVERTED); //инвертированный экран - белый фон
  90:display/OLED.c **** 	OLED_Clear(NONE_INVERTED);
  91:display/OLED.c **** 	OLED_UpdateScreen();
  92:display/OLED.c **** 	return 1;
  93:display/OLED.c **** }
  94:display/OLED.c **** 
  95:display/OLED.c **** //-----------------------------------------------------------------------------//
  96:display/OLED.c **** void OLED_Clear(uint8_t mode)
  97:display/OLED.c **** {
 274              		.loc 1 97 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		.loc 1 97 1 is_stmt 0 view .LVU72
 279 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc6puPNO.s 			page 41


 280              	.LCFI0:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
  98:display/OLED.c **** 	if (mode) 
 284              		.loc 1 98 2 is_stmt 1 view .LVU73
 285              		.loc 1 98 5 is_stmt 0 view .LVU74
 286 0002 18B1     		cbz	r0, .L15
  99:display/OLED.c **** 		OLED_ClearBuffer(0xFF);
 287              		.loc 1 99 3 is_stmt 1 view .LVU75
 288 0004 FF20     		movs	r0, #255
 289              	.LVL17:
 290              		.loc 1 99 3 is_stmt 0 view .LVU76
 291 0006 FFF7FEFF 		bl	OLED_ClearBuffer
 292              	.LVL18:
 293              	.L14:
 100:display/OLED.c **** 	else      
 101:display/OLED.c **** 		OLED_ClearBuffer(0x00); 
 102:display/OLED.c **** }
 294              		.loc 1 102 1 view .LVU77
 295 000a 08BD     		pop	{r3, pc}
 296              	.LVL19:
 297              	.L15:
 101:display/OLED.c **** }
 298              		.loc 1 101 3 is_stmt 1 view .LVU78
 299 000c 0020     		movs	r0, #0
 300              	.LVL20:
 101:display/OLED.c **** }
 301              		.loc 1 101 3 is_stmt 0 view .LVU79
 302 000e FFF7FEFF 		bl	OLED_ClearBuffer
 303              	.LVL21:
 304              		.loc 1 102 1 view .LVU80
 305 0012 FAE7     		b	.L14
 306              		.cfi_endproc
 307              	.LFE767:
 309              		.section	.text.OLED_Invert,"ax",%progbits
 310              		.align	1
 311              		.global	OLED_Invert
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	OLED_Invert:
 317              	.LVL22:
 318              	.LFB768:
 103:display/OLED.c **** 
 104:display/OLED.c **** //-----------------------------------------------------------------------------//
 105:display/OLED.c **** void OLED_Invert(uint8_t inverted)
 106:display/OLED.c **** {
 319              		.loc 1 106 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 106 1 is_stmt 0 view .LVU82
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI1:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
ARM GAS  /tmp/cc6puPNO.s 			page 42


 328              		.cfi_offset 14, -4
 107:display/OLED.c **** 	if (inverted)	
 329              		.loc 1 107 2 is_stmt 1 view .LVU83
 330              		.loc 1 107 5 is_stmt 0 view .LVU84
 331 0002 18B1     		cbz	r0, .L19
 108:display/OLED.c **** 		OLED_SendCommand(OLED_INVERT_DISPLAY); 
 332              		.loc 1 108 3 is_stmt 1 view .LVU85
 333 0004 A720     		movs	r0, #167
 334              	.LVL23:
 335              		.loc 1 108 3 is_stmt 0 view .LVU86
 336 0006 FFF7FEFF 		bl	OLED_SendCommand
 337              	.LVL24:
 338              	.L18:
 109:display/OLED.c **** 	else			
 110:display/OLED.c **** 		OLED_SendCommand(OLED_NORMAL_DISPLAY);
 111:display/OLED.c **** }
 339              		.loc 1 111 1 view .LVU87
 340 000a 08BD     		pop	{r3, pc}
 341              	.LVL25:
 342              	.L19:
 110:display/OLED.c **** }
 343              		.loc 1 110 3 is_stmt 1 view .LVU88
 344 000c A620     		movs	r0, #166
 345              	.LVL26:
 110:display/OLED.c **** }
 346              		.loc 1 110 3 is_stmt 0 view .LVU89
 347 000e FFF7FEFF 		bl	OLED_SendCommand
 348              	.LVL27:
 349              		.loc 1 111 1 view .LVU90
 350 0012 FAE7     		b	.L18
 351              		.cfi_endproc
 352              	.LFE768:
 354              		.section	.text.OLED_SetContrast,"ax",%progbits
 355              		.align	1
 356              		.global	OLED_SetContrast
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	OLED_SetContrast:
 362              	.LVL28:
 363              	.LFB769:
 112:display/OLED.c **** 
 113:display/OLED.c **** //-----------------------------------------------------------------------------//
 114:display/OLED.c **** void OLED_SetContrast(uint8_t contrast)
 115:display/OLED.c **** {
 364              		.loc 1 115 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		.loc 1 115 1 is_stmt 0 view .LVU92
 369 0000 10B5     		push	{r4, lr}
 370              	.LCFI2:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 374 0002 0446     		mov	r4, r0
 116:display/OLED.c **** 	OLED_SendCommand(OLED_SET_CONTRAST_CONTROL);
ARM GAS  /tmp/cc6puPNO.s 			page 43


 375              		.loc 1 116 2 is_stmt 1 view .LVU93
 376 0004 8120     		movs	r0, #129
 377              	.LVL29:
 378              		.loc 1 116 2 is_stmt 0 view .LVU94
 379 0006 FFF7FEFF 		bl	OLED_SendCommand
 380              	.LVL30:
 117:display/OLED.c **** 	OLED_SendCommand(contrast);
 381              		.loc 1 117 2 is_stmt 1 view .LVU95
 382 000a 2046     		mov	r0, r4
 383 000c FFF7FEFF 		bl	OLED_SendCommand
 384              	.LVL31:
 118:display/OLED.c **** }
 385              		.loc 1 118 1 is_stmt 0 view .LVU96
 386 0010 10BD     		pop	{r4, pc}
 387              		.cfi_endproc
 388              	.LFE769:
 390              		.section	.text.OLED_GetWidthStr,"ax",%progbits
 391              		.align	1
 392              		.global	OLED_GetWidthStr
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	OLED_GetWidthStr:
 398              	.LVL32:
 399              	.LFB770:
 119:display/OLED.c **** 
 120:display/OLED.c **** //---------------------------------------------------------------------//
 121:display/OLED.c **** uint8_t OLED_GetWidthStr(const char* str)
 122:display/OLED.c **** {
 400              		.loc 1 122 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		.loc 1 122 1 is_stmt 0 view .LVU98
 405 0000 38B5     		push	{r3, r4, r5, lr}
 406              	.LCFI3:
 407              		.cfi_def_cfa_offset 16
 408              		.cfi_offset 3, -16
 409              		.cfi_offset 4, -12
 410              		.cfi_offset 5, -8
 411              		.cfi_offset 14, -4
 412 0002 0446     		mov	r4, r0
 123:display/OLED.c **** 	uint8_t stl = strlen(str);
 413              		.loc 1 123 2 is_stmt 1 view .LVU99
 414              		.loc 1 123 16 is_stmt 0 view .LVU100
 415 0004 FFF7FEFF 		bl	strlen
 416              	.LVL33:
 417              		.loc 1 123 10 view .LVU101
 418 0008 5FFA80FE 		uxtb	lr, r0
 419              	.LVL34:
 124:display/OLED.c **** 	uint8_t len = 0;
 420              		.loc 1 124 2 is_stmt 1 view .LVU102
 125:display/OLED.c **** 
 126:display/OLED.c **** 	for (uint8_t i = 0; i < stl; i++, *str++)
 421              		.loc 1 126 2 view .LVU103
 422              	.LBB47:
 423              		.loc 1 126 7 view .LVU104
ARM GAS  /tmp/cc6puPNO.s 			page 44


 424              		.loc 1 126 15 is_stmt 0 view .LVU105
 425 000c 0023     		movs	r3, #0
 426              	.LBE47:
 124:display/OLED.c **** 	uint8_t len = 0;
 427              		.loc 1 124 10 view .LVU106
 428 000e 1846     		mov	r0, r3
 429              	.LBB48:
 430              		.loc 1 126 2 view .LVU107
 431 0010 0FE0     		b	.L25
 432              	.LVL35:
 433              	.L26:
 127:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 434              		.loc 1 127 4 is_stmt 1 discriminator 3 view .LVU108
 435              		.loc 1 127 11 is_stmt 0 discriminator 3 view .LVU109
 436 0012 094D     		ldr	r5, .L28
 437 0014 2A68     		ldr	r2, [r5]
 438 0016 B5F90AC0 		ldrsh	ip, [r5, #10]
 439 001a 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 440              	.LVL36:
 441              		.loc 1 127 11 discriminator 3 view .LVU110
 442 001e B5F90850 		ldrsh	r5, [r5, #8]
 443 0022 491B     		subs	r1, r1, r5
 444 0024 01FB0C22 		mla	r2, r1, ip, r2
 445 0028 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 446              		.loc 1 127 8 discriminator 3 view .LVU111
 447 002a 1044     		add	r0, r0, r2
 448              	.LVL37:
 449              		.loc 1 127 8 discriminator 3 view .LVU112
 450 002c C0B2     		uxtb	r0, r0
 451              	.LVL38:
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 452              		.loc 1 126 31 is_stmt 1 discriminator 3 view .LVU113
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 453              		.loc 1 126 32 is_stmt 0 discriminator 3 view .LVU114
 454 002e 0133     		adds	r3, r3, #1
 455              	.LVL39:
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 456              		.loc 1 126 32 discriminator 3 view .LVU115
 457 0030 DBB2     		uxtb	r3, r3
 458              	.LVL40:
 459              	.L25:
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 460              		.loc 1 126 22 is_stmt 1 discriminator 1 view .LVU116
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 461              		.loc 1 126 2 is_stmt 0 discriminator 1 view .LVU117
 462 0032 7345     		cmp	r3, lr
 463 0034 EDD3     		bcc	.L26
 126:display/OLED.c **** 	{	len += fontbyte(Font.numchars * (*str - Font.offset) + 4);	}
 464              		.loc 1 126 2 discriminator 1 view .LVU118
 465              	.LBE48:
 128:display/OLED.c **** 
 129:display/OLED.c **** 	return len;
 466              		.loc 1 129 2 is_stmt 1 view .LVU119
 130:display/OLED.c **** }
 467              		.loc 1 130 1 is_stmt 0 view .LVU120
 468 0036 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL41:
ARM GAS  /tmp/cc6puPNO.s 			page 45


 470              	.L29:
 471              		.loc 1 130 1 view .LVU121
 472              		.align	2
 473              	.L28:
 474 0038 00000000 		.word	Font
 475              		.cfi_endproc
 476              	.LFE770:
 478              		.section	.rodata.OLED_GetWidthNum.str1.4,"aMS",%progbits,1
 479              		.align	2
 480              	.LC0:
 481 0000 256400   		.ascii	"%d\000"
 482              		.section	.text.OLED_GetWidthNum,"ax",%progbits
 483              		.align	1
 484              		.global	OLED_GetWidthNum
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	OLED_GetWidthNum:
 490              	.LVL42:
 491              	.LFB771:
 131:display/OLED.c **** 
 132:display/OLED.c **** //---------------------------------------------------------------------//
 133:display/OLED.c **** uint8_t OLED_GetWidthNum(int16_t num)
 134:display/OLED.c **** {
 492              		.loc 1 134 1 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 16
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 134 1 is_stmt 0 view .LVU123
 497 0000 00B5     		push	{lr}
 498              	.LCFI4:
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 14, -4
 501 0002 85B0     		sub	sp, sp, #20
 502              	.LCFI5:
 503              		.cfi_def_cfa_offset 24
 504 0004 0246     		mov	r2, r0
 135:display/OLED.c **** 	char buf[15];
 505              		.loc 1 135 2 is_stmt 1 view .LVU124
 136:display/OLED.c **** 	sprintf(buf, "%d", num);
 506              		.loc 1 136 2 view .LVU125
 507 0006 0549     		ldr	r1, .L32
 508 0008 6846     		mov	r0, sp
 509              	.LVL43:
 510              		.loc 1 136 2 is_stmt 0 view .LVU126
 511 000a FFF7FEFF 		bl	sprintf
 512              	.LVL44:
 137:display/OLED.c **** 
 138:display/OLED.c **** 	return OLED_GetWidthStr(buf);
 513              		.loc 1 138 2 is_stmt 1 view .LVU127
 514              		.loc 1 138 9 is_stmt 0 view .LVU128
 515 000e 6846     		mov	r0, sp
 516 0010 FFF7FEFF 		bl	OLED_GetWidthStr
 517              	.LVL45:
 139:display/OLED.c **** }
 518              		.loc 1 139 1 view .LVU129
 519 0014 05B0     		add	sp, sp, #20
ARM GAS  /tmp/cc6puPNO.s 			page 46


 520              	.LCFI6:
 521              		.cfi_def_cfa_offset 4
 522              		@ sp needed
 523 0016 5DF804FB 		ldr	pc, [sp], #4
 524              	.L33:
 525 001a 00BF     		.align	2
 526              	.L32:
 527 001c 00000000 		.word	.LC0
 528              		.cfi_endproc
 529              	.LFE771:
 531              		.section	.text.OLED_DrawPixelStatus,"ax",%progbits
 532              		.align	1
 533              		.global	OLED_DrawPixelStatus
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	OLED_DrawPixelStatus:
 539              	.LVL46:
 540              	.LFB779:
 140:display/OLED.c **** 
 141:display/OLED.c **** /*********************************************************************************/
 142:display/OLED.c **** //                            D R A W    S C R E E N                             //
 143:display/OLED.c **** /*******************************************************************************/
 144:display/OLED.c **** 
 145:display/OLED.c **** //---------------------------------------------------------------------//
 146:display/OLED.c **** void OLED_DrawNumSetMode(int16_t num, uint8_t x, uint8_t y, uint8_t mode)
 147:display/OLED.c **** {
 148:display/OLED.c **** 	char buf[15];
 149:display/OLED.c **** 	sprintf(buf, "%d", num);
 150:display/OLED.c **** 
 151:display/OLED.c **** 	OLED_DrawStrSetMode (buf, x, y, mode);
 152:display/OLED.c **** }
 153:display/OLED.c **** 
 154:display/OLED.c **** //---------------------------------------------------------------------//
 155:display/OLED.c **** void OLED_DrawNum(int16_t num, uint8_t x, uint8_t y)
 156:display/OLED.c **** {
 157:display/OLED.c **** 	char buf[15];
 158:display/OLED.c **** 	sprintf(buf, "%d", num);
 159:display/OLED.c **** 
 160:display/OLED.c **** 	OLED_DrawStr (buf, x, y);
 161:display/OLED.c **** }
 162:display/OLED.c **** 
 163:display/OLED.c **** //---------------------------------------------------------------------//
 164:display/OLED.c **** void OLED_DrawStrSetMode(const char *str, uint8_t x, uint8_t y, uint8_t mode)
 165:display/OLED.c **** {
 166:display/OLED.c **** 	uint8_t stl = strlen(str);
 167:display/OLED.c **** 	uint8_t pos = x;
 168:display/OLED.c **** 
 169:display/OLED.c **** 	if (pos == RIGHT) 
 170:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 171:display/OLED.c **** 	if (pos == CENTER) 
 172:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 173:display/OLED.c **** 	if (y == CENTER) 
 174:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 175:display/OLED.c **** 
 176:display/OLED.c **** 	for (uint8_t cnt = 0; cnt < stl; cnt++, *str++)
 177:display/OLED.c **** 	{
ARM GAS  /tmp/cc6puPNO.s 			page 47


 178:display/OLED.c **** 		OLED_DrawCharSetMode(*str, pos, y, mode);
 179:display/OLED.c **** 		pos += fontbyte(Font.numchars * (*str - Font.offset) + 4);
 180:display/OLED.c **** 	}
 181:display/OLED.c **** }
 182:display/OLED.c **** 
 183:display/OLED.c **** //---------------------------------------------------------------------//
 184:display/OLED.c **** void OLED_DrawCharSetMode(char c, uint8_t ix, uint8_t iy, uint8_t mode)
 185:display/OLED.c **** {
 186:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 187:display/OLED.c **** 
 188:display/OLED.c **** 	for (uint8_t x = 0; x < symbol[0]; x++)
 189:display/OLED.c **** 	{
 190:display/OLED.c **** 		for (uint8_t y = 0; y < Font.height; y++)
 191:display/OLED.c **** 		{
 192:display/OLED.c **** 			
 193:display/OLED.c **** 			if (symbol[1 + y / 8 + x * (Font.numchars - 1) / Font.width] & (0x01 << (y % 8)))
 194:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 195:display/OLED.c **** 			else
 196:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 0 : 1); }
 197:display/OLED.c **** 		}
 198:display/OLED.c **** 	}
 199:display/OLED.c **** }
 200:display/OLED.c **** 
 201:display/OLED.c **** //---------------------------------------------------------------------//
 202:display/OLED.c **** void OLED_DrawStr(const char *str, uint8_t x, uint8_t y)
 203:display/OLED.c **** {
 204:display/OLED.c **** 	uint8_t stl = strlen(str);
 205:display/OLED.c **** 	uint8_t pos = x;
 206:display/OLED.c **** 
 207:display/OLED.c **** 	if (pos == RIGHT) 
 208:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 209:display/OLED.c **** 	if (pos == CENTER) 
 210:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 211:display/OLED.c **** 	if (y == CENTER) 
 212:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 213:display/OLED.c **** 
 214:display/OLED.c **** 	for (uint8_t cnt = 0; cnt < stl; cnt++, *str++)
 215:display/OLED.c **** 	{
 216:display/OLED.c **** 		OLED_DrawChar(*str, pos, y);
 217:display/OLED.c **** 		pos += fontbyte(Font.numchars * (*str - Font.offset) + 4);
 218:display/OLED.c **** 	}
 219:display/OLED.c **** }
 220:display/OLED.c **** 
 221:display/OLED.c **** //---------------------------------------------------------------------//
 222:display/OLED.c **** void OLED_DrawChar(char c, uint8_t ix, uint8_t iy)
 223:display/OLED.c **** {
 224:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 225:display/OLED.c **** 
 226:display/OLED.c **** 	for (uint8_t x = 0; x < symbol[0]; x++)
 227:display/OLED.c **** 	{
 228:display/OLED.c **** 		for (uint8_t y = 0; y < Font.height; y++)
 229:display/OLED.c **** 		{
 230:display/OLED.c **** 			
 231:display/OLED.c **** 			if (symbol[1 + y / 8 + x * (Font.numchars - 1) / Font.width] & (0x01 << (y % 8)))
 232:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 233:display/OLED.c **** 			else
 234:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 0);	}
ARM GAS  /tmp/cc6puPNO.s 			page 48


 235:display/OLED.c **** 		}
 236:display/OLED.c **** 	}
 237:display/OLED.c **** }
 238:display/OLED.c **** 
 239:display/OLED.c **** //---------------------------------------------------------------------//
 240:display/OLED.c **** void OLED_DrawBuffer(const uint8_t *progmem_buffer)
 241:display/OLED.c **** {
 242:display/OLED.c **** 	uint8_t current_byte;
 243:display/OLED.c **** 
 244:display/OLED.c **** 	for (uint8_t y_pos = 0; y_pos < OLED_HEIGHT; y_pos++)
 245:display/OLED.c **** 	{
 246:display/OLED.c **** 		for (uint8_t x_pos = 0; x_pos < OLED_WIDTH; x_pos++)
 247:display/OLED.c **** 		{
 248:display/OLED.c **** 			current_byte = progmem_buffer[y_pos * 16 + x_pos / 8];
 249:display/OLED.c **** 
 250:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (x_pos & 7)))	
 251:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 1); }
 252:display/OLED.c **** 			else											
 253:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 0); }
 254:display/OLED.c **** 		}
 255:display/OLED.c **** 	}
 256:display/OLED.c **** }
 257:display/OLED.c **** 
 258:display/OLED.c **** //---------------------------------------------------------------------//
 259:display/OLED.c **** void OLED_DrawPixelStatus(uint8_t pos_x, uint8_t pos_y, uint8_t mode)
 260:display/OLED.c **** {
 541              		.loc 1 260 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 261:display/OLED.c **** 	if (pos_x >= OLED_WIDTH || pos_y >= OLED_HEIGHT) 
 546              		.loc 1 261 2 view .LVU131
 547              		.loc 1 261 5 is_stmt 0 view .LVU132
 548 0000 10F0800F 		tst	r0, #128
 549 0004 1AD1     		bne	.L34
 550              		.loc 1 261 26 discriminator 1 view .LVU133
 551 0006 3F29     		cmp	r1, #63
 552 0008 18D8     		bhi	.L34
 262:display/OLED.c **** 		return;
 263:display/OLED.c **** 	
 264:display/OLED.c **** 	if (mode)	
 553              		.loc 1 264 2 is_stmt 1 view .LVU134
 554              		.loc 1 264 5 is_stmt 0 view .LVU135
 555 000a 5AB1     		cbz	r2, .L36
 265:display/OLED.c **** 	{	oled_buffer[pos_x + (pos_y / 8) * OLED_WIDTH] |= (1 << (pos_y & 7)); }
 556              		.loc 1 265 4 is_stmt 1 view .LVU136
 557              		.loc 1 265 50 is_stmt 0 view .LVU137
 558 000c CB08     		lsrs	r3, r1, #3
 559 000e 00EBC310 		add	r0, r0, r3, lsl #7
 560              	.LVL47:
 561              		.loc 1 265 66 view .LVU138
 562 0012 01F00701 		and	r1, r1, #7
 563              	.LVL48:
 564              		.loc 1 265 56 view .LVU139
 565 0016 0123     		movs	r3, #1
 566 0018 8B40     		lsls	r3, r3, r1
ARM GAS  /tmp/cc6puPNO.s 			page 49


 567              		.loc 1 265 50 view .LVU140
 568 001a 094A     		ldr	r2, .L37
 569              	.LVL49:
 570              		.loc 1 265 50 view .LVU141
 571 001c 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 572 001e 1943     		orrs	r1, r1, r3
 573 0020 1154     		strb	r1, [r2, r0]
 574 0022 7047     		bx	lr
 575              	.LVL50:
 576              	.L36:
 266:display/OLED.c **** 	else		
 267:display/OLED.c **** 	{	oled_buffer[pos_x + (pos_y / 8) * OLED_WIDTH] &= ~(1 << (pos_y & 7)); }
 577              		.loc 1 267 4 is_stmt 1 view .LVU142
 578              		.loc 1 267 50 is_stmt 0 view .LVU143
 579 0024 CB08     		lsrs	r3, r1, #3
 580 0026 00EBC310 		add	r0, r0, r3, lsl #7
 581              	.LVL51:
 582              		.loc 1 267 67 view .LVU144
 583 002a 01F00701 		and	r1, r1, #7
 584              	.LVL52:
 585              		.loc 1 267 57 view .LVU145
 586 002e 0123     		movs	r3, #1
 587 0030 8B40     		lsls	r3, r3, r1
 588              		.loc 1 267 50 view .LVU146
 589 0032 034A     		ldr	r2, .L37
 590              	.LVL53:
 591              		.loc 1 267 50 view .LVU147
 592 0034 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 593 0036 21EA0301 		bic	r1, r1, r3
 594 003a 1154     		strb	r1, [r2, r0]
 595              	.L34:
 268:display/OLED.c **** }
 596              		.loc 1 268 1 view .LVU148
 597 003c 7047     		bx	lr
 598              	.L38:
 599 003e 00BF     		.align	2
 600              	.L37:
 601 0040 00000000 		.word	.LANCHOR0
 602              		.cfi_endproc
 603              	.LFE779:
 605              		.section	.text.OLED_DrawCharSetMode,"ax",%progbits
 606              		.align	1
 607              		.global	OLED_DrawCharSetMode
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 612              	OLED_DrawCharSetMode:
 613              	.LVL54:
 614              	.LFB775:
 185:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 615              		.loc 1 185 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 185:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 619              		.loc 1 185 1 is_stmt 0 view .LVU150
 620 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/cc6puPNO.s 			page 50


 621              	.LCFI7:
 622              		.cfi_def_cfa_offset 32
 623              		.cfi_offset 3, -32
 624              		.cfi_offset 4, -28
 625              		.cfi_offset 5, -24
 626              		.cfi_offset 6, -20
 627              		.cfi_offset 7, -16
 628              		.cfi_offset 8, -12
 629              		.cfi_offset 9, -8
 630              		.cfi_offset 14, -4
 631 0004 8946     		mov	r9, r1
 632 0006 9046     		mov	r8, r2
 633 0008 1F46     		mov	r7, r3
 186:display/OLED.c **** 
 634              		.loc 1 186 2 is_stmt 1 view .LVU151
 186:display/OLED.c **** 
 635              		.loc 1 186 27 is_stmt 0 view .LVU152
 636 000a 244A     		ldr	r2, .L49
 637              	.LVL55:
 186:display/OLED.c **** 
 638              		.loc 1 186 27 view .LVU153
 639 000c 1668     		ldr	r6, [r2]
 640 000e B2F90A30 		ldrsh	r3, [r2, #10]
 641              	.LVL56:
 186:display/OLED.c **** 
 642              		.loc 1 186 27 view .LVU154
 643 0012 B2F90820 		ldrsh	r2, [r2, #8]
 644 0016 801A     		subs	r0, r0, r2
 645              	.LVL57:
 186:display/OLED.c **** 
 646              		.loc 1 186 27 view .LVU155
 647 0018 00FB03F3 		mul	r3, r0, r3
 648 001c 0433     		adds	r3, r3, #4
 186:display/OLED.c **** 
 649              		.loc 1 186 17 view .LVU156
 650 001e 1E44     		add	r6, r6, r3
 651              	.LVL58:
 188:display/OLED.c **** 	{
 652              		.loc 1 188 2 is_stmt 1 view .LVU157
 653              	.LBB49:
 188:display/OLED.c **** 	{
 654              		.loc 1 188 7 view .LVU158
 188:display/OLED.c **** 	{
 655              		.loc 1 188 15 is_stmt 0 view .LVU159
 656 0020 0025     		movs	r5, #0
 188:display/OLED.c **** 	{
 657              		.loc 1 188 2 view .LVU160
 658 0022 33E0     		b	.L40
 659              	.LVL59:
 660              	.L41:
 661              	.LBB50:
 196:display/OLED.c **** 		}
 662              		.loc 1 196 6 is_stmt 1 view .LVU161
 663 0024 04EB0801 		add	r1, r4, r8
 664 0028 05EB0900 		add	r0, r5, r9
 665 002c B7FA87F2 		clz	r2, r7
 666 0030 5209     		lsrs	r2, r2, #5
ARM GAS  /tmp/cc6puPNO.s 			page 51


 667 0032 C9B2     		uxtb	r1, r1
 668 0034 C0B2     		uxtb	r0, r0
 669 0036 FFF7FEFF 		bl	OLED_DrawPixelStatus
 670              	.LVL60:
 671              	.L42:
 190:display/OLED.c **** 		{
 672              		.loc 1 190 40 discriminator 2 view .LVU162
 190:display/OLED.c **** 		{
 673              		.loc 1 190 41 is_stmt 0 discriminator 2 view .LVU163
 674 003a 0134     		adds	r4, r4, #1
 675              	.LVL61:
 190:display/OLED.c **** 		{
 676              		.loc 1 190 41 discriminator 2 view .LVU164
 677 003c E4B2     		uxtb	r4, r4
 678              	.LVL62:
 679              	.L44:
 190:display/OLED.c **** 		{
 680              		.loc 1 190 23 is_stmt 1 discriminator 1 view .LVU165
 190:display/OLED.c **** 		{
 681              		.loc 1 190 31 is_stmt 0 discriminator 1 view .LVU166
 682 003e 174B     		ldr	r3, .L49
 683 0040 B3F90630 		ldrsh	r3, [r3, #6]
 190:display/OLED.c **** 		{
 684              		.loc 1 190 3 discriminator 1 view .LVU167
 685 0044 9C42     		cmp	r4, r3
 686 0046 1FDA     		bge	.L47
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 687              		.loc 1 193 4 is_stmt 1 view .LVU168
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 688              		.loc 1 193 21 is_stmt 0 view .LVU169
 689 0048 E008     		lsrs	r0, r4, #3
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 690              		.loc 1 193 17 view .LVU170
 691 004a 431C     		adds	r3, r0, #1
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 692              		.loc 1 193 36 view .LVU171
 693 004c 134A     		ldr	r2, .L49
 694 004e B2F90A00 		ldrsh	r0, [r2, #10]
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 695              		.loc 1 193 46 view .LVU172
 696 0052 0138     		subs	r0, r0, #1
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 697              		.loc 1 193 29 view .LVU173
 698 0054 05FB00F0 		mul	r0, r5, r0
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 699              		.loc 1 193 57 view .LVU174
 700 0058 B2F90420 		ldrsh	r2, [r2, #4]
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 701              		.loc 1 193 51 view .LVU175
 702 005c 90FBF2F0 		sdiv	r0, r0, r2
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 703              		.loc 1 193 25 view .LVU176
 704 0060 1844     		add	r0, r0, r3
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 705              		.loc 1 193 14 view .LVU177
 706 0062 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
ARM GAS  /tmp/cc6puPNO.s 			page 52


 707              		.loc 1 193 79 view .LVU178
 708 0064 04F00702 		and	r2, r4, #7
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 709              		.loc 1 193 8 view .LVU179
 710 0068 1341     		asrs	r3, r3, r2
 193:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, (mode) ? 1 : 0); }
 711              		.loc 1 193 7 view .LVU180
 712 006a 13F0010F 		tst	r3, #1
 713 006e D9D0     		beq	.L41
 194:display/OLED.c **** 			else
 714              		.loc 1 194 6 is_stmt 1 view .LVU181
 715 0070 04EB0801 		add	r1, r4, r8
 716 0074 05EB0900 		add	r0, r5, r9
 717 0078 3A1E     		subs	r2, r7, #0
 718 007a 18BF     		it	ne
 719 007c 0122     		movne	r2, #1
 720 007e C9B2     		uxtb	r1, r1
 721 0080 C0B2     		uxtb	r0, r0
 722 0082 FFF7FEFF 		bl	OLED_DrawPixelStatus
 723              	.LVL63:
 724 0086 D8E7     		b	.L42
 725              	.L47:
 194:display/OLED.c **** 			else
 726              		.loc 1 194 6 is_stmt 0 view .LVU182
 727              	.LBE50:
 188:display/OLED.c **** 	{
 728              		.loc 1 188 37 is_stmt 1 discriminator 2 view .LVU183
 188:display/OLED.c **** 	{
 729              		.loc 1 188 38 is_stmt 0 discriminator 2 view .LVU184
 730 0088 0135     		adds	r5, r5, #1
 731              	.LVL64:
 188:display/OLED.c **** 	{
 732              		.loc 1 188 38 discriminator 2 view .LVU185
 733 008a EDB2     		uxtb	r5, r5
 734              	.LVL65:
 735              	.L40:
 188:display/OLED.c **** 	{
 736              		.loc 1 188 22 is_stmt 1 discriminator 1 view .LVU186
 188:display/OLED.c **** 	{
 737              		.loc 1 188 32 is_stmt 0 discriminator 1 view .LVU187
 738 008c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 188:display/OLED.c **** 	{
 739              		.loc 1 188 2 discriminator 1 view .LVU188
 740 008e AB42     		cmp	r3, r5
 741 0090 01D9     		bls	.L48
 742              	.LBB51:
 190:display/OLED.c **** 		{
 743              		.loc 1 190 16 view .LVU189
 744 0092 0024     		movs	r4, #0
 745 0094 D3E7     		b	.L44
 746              	.L48:
 747              	.LBE51:
 748              	.LBE49:
 199:display/OLED.c **** 
 749              		.loc 1 199 1 view .LVU190
 750 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 751              	.LVL66:
ARM GAS  /tmp/cc6puPNO.s 			page 53


 752              	.L50:
 199:display/OLED.c **** 
 753              		.loc 1 199 1 view .LVU191
 754 009a 00BF     		.align	2
 755              	.L49:
 756 009c 00000000 		.word	Font
 757              		.cfi_endproc
 758              	.LFE775:
 760              		.section	.text.OLED_DrawStrSetMode,"ax",%progbits
 761              		.align	1
 762              		.global	OLED_DrawStrSetMode
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	OLED_DrawStrSetMode:
 768              	.LVL67:
 769              	.LFB774:
 165:display/OLED.c **** 	uint8_t stl = strlen(str);
 770              		.loc 1 165 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 165:display/OLED.c **** 	uint8_t stl = strlen(str);
 774              		.loc 1 165 1 is_stmt 0 view .LVU193
 775 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 776              	.LCFI8:
 777              		.cfi_def_cfa_offset 32
 778              		.cfi_offset 3, -32
 779              		.cfi_offset 4, -28
 780              		.cfi_offset 5, -24
 781              		.cfi_offset 6, -20
 782              		.cfi_offset 7, -16
 783              		.cfi_offset 8, -12
 784              		.cfi_offset 9, -8
 785              		.cfi_offset 14, -4
 786 0004 0646     		mov	r6, r0
 787 0006 0D46     		mov	r5, r1
 788 0008 1746     		mov	r7, r2
 789 000a 9946     		mov	r9, r3
 166:display/OLED.c **** 	uint8_t pos = x;
 790              		.loc 1 166 2 is_stmt 1 view .LVU194
 166:display/OLED.c **** 	uint8_t pos = x;
 791              		.loc 1 166 16 is_stmt 0 view .LVU195
 792 000c FFF7FEFF 		bl	strlen
 793              	.LVL68:
 166:display/OLED.c **** 	uint8_t pos = x;
 794              		.loc 1 166 10 view .LVU196
 795 0010 5FFA80F8 		uxtb	r8, r0
 796              	.LVL69:
 167:display/OLED.c **** 
 797              		.loc 1 167 2 is_stmt 1 view .LVU197
 169:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 798              		.loc 1 169 2 view .LVU198
 169:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 799              		.loc 1 169 5 is_stmt 0 view .LVU199
 800 0014 FE2D     		cmp	r5, #254
 801 0016 05D0     		beq	.L58
ARM GAS  /tmp/cc6puPNO.s 			page 54


 802              	.L52:
 171:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 803              		.loc 1 171 2 is_stmt 1 view .LVU200
 171:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 804              		.loc 1 171 5 is_stmt 0 view .LVU201
 805 0018 FF2D     		cmp	r5, #255
 806 001a 0AD0     		beq	.L59
 807              	.L53:
 173:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 808              		.loc 1 173 2 is_stmt 1 view .LVU202
 173:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 809              		.loc 1 173 5 is_stmt 0 view .LVU203
 810 001c FF2F     		cmp	r7, #255
 811 001e 12D0     		beq	.L60
 812              	.LVL70:
 813              	.L54:
 176:display/OLED.c **** 	{
 814              		.loc 1 176 2 is_stmt 1 view .LVU204
 815              	.LBB52:
 176:display/OLED.c **** 	{
 816              		.loc 1 176 7 view .LVU205
 176:display/OLED.c **** 	{
 817              		.loc 1 176 15 is_stmt 0 view .LVU206
 818 0020 0024     		movs	r4, #0
 176:display/OLED.c **** 	{
 819              		.loc 1 176 2 view .LVU207
 820 0022 30E0     		b	.L55
 821              	.LVL71:
 822              	.L58:
 176:display/OLED.c **** 	{
 823              		.loc 1 176 2 view .LVU208
 824              	.LBE52:
 170:display/OLED.c **** 	if (pos == CENTER) 
 825              		.loc 1 170 4 is_stmt 1 view .LVU209
 170:display/OLED.c **** 	if (pos == CENTER) 
 826              		.loc 1 170 23 is_stmt 0 view .LVU210
 827 0024 3046     		mov	r0, r6
 828 0026 FFF7FEFF 		bl	OLED_GetWidthStr
 829              	.LVL72:
 170:display/OLED.c **** 	if (pos == CENTER) 
 830              		.loc 1 170 8 view .LVU211
 831 002a C0F17F05 		rsb	r5, r0, #127
 832              	.LVL73:
 170:display/OLED.c **** 	if (pos == CENTER) 
 833              		.loc 1 170 8 view .LVU212
 834 002e EDB2     		uxtb	r5, r5
 835              	.LVL74:
 170:display/OLED.c **** 	if (pos == CENTER) 
 836              		.loc 1 170 8 view .LVU213
 837 0030 F2E7     		b	.L52
 838              	.L59:
 172:display/OLED.c **** 	if (y == CENTER) 
 839              		.loc 1 172 4 is_stmt 1 view .LVU214
 172:display/OLED.c **** 	if (y == CENTER) 
 840              		.loc 1 172 24 is_stmt 0 view .LVU215
 841 0032 3046     		mov	r0, r6
 842 0034 FFF7FEFF 		bl	OLED_GetWidthStr
ARM GAS  /tmp/cc6puPNO.s 			page 55


 843              	.LVL75:
 172:display/OLED.c **** 	if (y == CENTER) 
 844              		.loc 1 172 46 view .LVU216
 845 0038 C0F17F00 		rsb	r0, r0, #127
 172:display/OLED.c **** 	if (y == CENTER) 
 846              		.loc 1 172 51 view .LVU217
 847 003c 00EBD070 		add	r0, r0, r0, lsr #31
 172:display/OLED.c **** 	if (y == CENTER) 
 848              		.loc 1 172 8 view .LVU218
 849 0040 C0F34705 		ubfx	r5, r0, #1, #8
 850              	.LVL76:
 172:display/OLED.c **** 	if (y == CENTER) 
 851              		.loc 1 172 8 view .LVU219
 852 0044 EAE7     		b	.L53
 853              	.L60:
 174:display/OLED.c **** 
 854              		.loc 1 174 4 is_stmt 1 view .LVU220
 174:display/OLED.c **** 
 855              		.loc 1 174 27 is_stmt 0 view .LVU221
 856 0046 124B     		ldr	r3, .L61
 857 0048 B3F90670 		ldrsh	r7, [r3, #6]
 174:display/OLED.c **** 
 858              		.loc 1 174 21 view .LVU222
 859 004c C7F14007 		rsb	r7, r7, #64
 174:display/OLED.c **** 
 860              		.loc 1 174 36 view .LVU223
 861 0050 07EBD777 		add	r7, r7, r7, lsr #31
 174:display/OLED.c **** 
 862              		.loc 1 174 6 view .LVU224
 863 0054 C7F34707 		ubfx	r7, r7, #1, #8
 864              	.LVL77:
 174:display/OLED.c **** 
 865              		.loc 1 174 6 view .LVU225
 866 0058 E2E7     		b	.L54
 867              	.LVL78:
 868              	.L56:
 869              	.LBB53:
 178:display/OLED.c **** 		pos += fontbyte(Font.numchars * (*str - Font.offset) + 4);
 870              		.loc 1 178 3 is_stmt 1 discriminator 3 view .LVU226
 871 005a 4B46     		mov	r3, r9
 872 005c 3A46     		mov	r2, r7
 873 005e 2946     		mov	r1, r5
 874 0060 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 875 0062 FFF7FEFF 		bl	OLED_DrawCharSetMode
 876              	.LVL79:
 179:display/OLED.c **** 	}
 877              		.loc 1 179 3 discriminator 3 view .LVU227
 179:display/OLED.c **** 	}
 878              		.loc 1 179 10 is_stmt 0 discriminator 3 view .LVU228
 879 0066 0A49     		ldr	r1, .L61
 880 0068 0B68     		ldr	r3, [r1]
 881 006a B1F90A00 		ldrsh	r0, [r1, #10]
 882 006e 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 883              	.LVL80:
 179:display/OLED.c **** 	}
 884              		.loc 1 179 10 discriminator 3 view .LVU229
 885 0072 B1F90810 		ldrsh	r1, [r1, #8]
ARM GAS  /tmp/cc6puPNO.s 			page 56


 886 0076 521A     		subs	r2, r2, r1
 887 0078 02FB0033 		mla	r3, r2, r0, r3
 888 007c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 179:display/OLED.c **** 	}
 889              		.loc 1 179 7 discriminator 3 view .LVU230
 890 007e 0D44     		add	r5, r5, r1
 891              	.LVL81:
 179:display/OLED.c **** 	}
 892              		.loc 1 179 7 discriminator 3 view .LVU231
 893 0080 EDB2     		uxtb	r5, r5
 894              	.LVL82:
 176:display/OLED.c **** 	{
 895              		.loc 1 176 35 is_stmt 1 discriminator 3 view .LVU232
 176:display/OLED.c **** 	{
 896              		.loc 1 176 38 is_stmt 0 discriminator 3 view .LVU233
 897 0082 0134     		adds	r4, r4, #1
 898              	.LVL83:
 176:display/OLED.c **** 	{
 899              		.loc 1 176 38 discriminator 3 view .LVU234
 900 0084 E4B2     		uxtb	r4, r4
 901              	.LVL84:
 902              	.L55:
 176:display/OLED.c **** 	{
 903              		.loc 1 176 24 is_stmt 1 discriminator 1 view .LVU235
 176:display/OLED.c **** 	{
 904              		.loc 1 176 2 is_stmt 0 discriminator 1 view .LVU236
 905 0086 4445     		cmp	r4, r8
 906 0088 E7D3     		bcc	.L56
 176:display/OLED.c **** 	{
 907              		.loc 1 176 2 discriminator 1 view .LVU237
 908              	.LBE53:
 181:display/OLED.c **** 
 909              		.loc 1 181 1 view .LVU238
 910 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 911              	.LVL85:
 912              	.L62:
 181:display/OLED.c **** 
 913              		.loc 1 181 1 view .LVU239
 914 008e 00BF     		.align	2
 915              	.L61:
 916 0090 00000000 		.word	Font
 917              		.cfi_endproc
 918              	.LFE774:
 920              		.section	.text.OLED_DrawNumSetMode,"ax",%progbits
 921              		.align	1
 922              		.global	OLED_DrawNumSetMode
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	OLED_DrawNumSetMode:
 928              	.LVL86:
 929              	.LFB772:
 147:display/OLED.c **** 	char buf[15];
 930              		.loc 1 147 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6puPNO.s 			page 57


 147:display/OLED.c **** 	char buf[15];
 934              		.loc 1 147 1 is_stmt 0 view .LVU241
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              	.LCFI9:
 937              		.cfi_def_cfa_offset 16
 938              		.cfi_offset 4, -16
 939              		.cfi_offset 5, -12
 940              		.cfi_offset 6, -8
 941              		.cfi_offset 14, -4
 942 0002 84B0     		sub	sp, sp, #16
 943              	.LCFI10:
 944              		.cfi_def_cfa_offset 32
 945 0004 0C46     		mov	r4, r1
 946 0006 1546     		mov	r5, r2
 947 0008 1E46     		mov	r6, r3
 148:display/OLED.c **** 	sprintf(buf, "%d", num);
 948              		.loc 1 148 2 is_stmt 1 view .LVU242
 149:display/OLED.c **** 
 949              		.loc 1 149 2 view .LVU243
 950 000a 0246     		mov	r2, r0
 951              	.LVL87:
 149:display/OLED.c **** 
 952              		.loc 1 149 2 is_stmt 0 view .LVU244
 953 000c 0549     		ldr	r1, .L65
 954              	.LVL88:
 149:display/OLED.c **** 
 955              		.loc 1 149 2 view .LVU245
 956 000e 6846     		mov	r0, sp
 957              	.LVL89:
 149:display/OLED.c **** 
 958              		.loc 1 149 2 view .LVU246
 959 0010 FFF7FEFF 		bl	sprintf
 960              	.LVL90:
 151:display/OLED.c **** }
 961              		.loc 1 151 2 is_stmt 1 view .LVU247
 962 0014 3346     		mov	r3, r6
 963 0016 2A46     		mov	r2, r5
 964 0018 2146     		mov	r1, r4
 965 001a 6846     		mov	r0, sp
 966 001c FFF7FEFF 		bl	OLED_DrawStrSetMode
 967              	.LVL91:
 152:display/OLED.c **** 
 968              		.loc 1 152 1 is_stmt 0 view .LVU248
 969 0020 04B0     		add	sp, sp, #16
 970              	.LCFI11:
 971              		.cfi_def_cfa_offset 16
 972              		@ sp needed
 973 0022 70BD     		pop	{r4, r5, r6, pc}
 974              	.L66:
 975              		.align	2
 976              	.L65:
 977 0024 00000000 		.word	.LC0
 978              		.cfi_endproc
 979              	.LFE772:
 981              		.section	.text.OLED_DrawChar,"ax",%progbits
 982              		.align	1
 983              		.global	OLED_DrawChar
ARM GAS  /tmp/cc6puPNO.s 			page 58


 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 988              	OLED_DrawChar:
 989              	.LVL92:
 990              	.LFB777:
 223:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 991              		.loc 1 223 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 223:display/OLED.c **** 	const uint8_t* symbol = &fontbyte(Font.numchars*(c-Font.offset) + 4);
 995              		.loc 1 223 1 is_stmt 0 view .LVU250
 996 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 997              	.LCFI12:
 998              		.cfi_def_cfa_offset 24
 999              		.cfi_offset 4, -24
 1000              		.cfi_offset 5, -20
 1001              		.cfi_offset 6, -16
 1002              		.cfi_offset 7, -12
 1003              		.cfi_offset 8, -8
 1004              		.cfi_offset 14, -4
 1005 0004 8846     		mov	r8, r1
 1006 0006 1746     		mov	r7, r2
 224:display/OLED.c **** 
 1007              		.loc 1 224 2 is_stmt 1 view .LVU251
 224:display/OLED.c **** 
 1008              		.loc 1 224 27 is_stmt 0 view .LVU252
 1009 0008 204A     		ldr	r2, .L77
 1010              	.LVL93:
 224:display/OLED.c **** 
 1011              		.loc 1 224 27 view .LVU253
 1012 000a 1668     		ldr	r6, [r2]
 1013 000c B2F90A30 		ldrsh	r3, [r2, #10]
 1014 0010 B2F90820 		ldrsh	r2, [r2, #8]
 1015 0014 801A     		subs	r0, r0, r2
 1016              	.LVL94:
 224:display/OLED.c **** 
 1017              		.loc 1 224 27 view .LVU254
 1018 0016 00FB03F3 		mul	r3, r0, r3
 1019 001a 0433     		adds	r3, r3, #4
 224:display/OLED.c **** 
 1020              		.loc 1 224 17 view .LVU255
 1021 001c 1E44     		add	r6, r6, r3
 1022              	.LVL95:
 226:display/OLED.c **** 	{
 1023              		.loc 1 226 2 is_stmt 1 view .LVU256
 1024              	.LBB54:
 226:display/OLED.c **** 	{
 1025              		.loc 1 226 7 view .LVU257
 226:display/OLED.c **** 	{
 1026              		.loc 1 226 15 is_stmt 0 view .LVU258
 1027 001e 0025     		movs	r5, #0
 226:display/OLED.c **** 	{
 1028              		.loc 1 226 2 view .LVU259
 1029 0020 2DE0     		b	.L68
 1030              	.LVL96:
ARM GAS  /tmp/cc6puPNO.s 			page 59


 1031              	.L69:
 1032              	.LBB55:
 234:display/OLED.c **** 		}
 1033              		.loc 1 234 6 is_stmt 1 view .LVU260
 1034 0022 E119     		adds	r1, r4, r7
 1035 0024 05EB0800 		add	r0, r5, r8
 1036 0028 0022     		movs	r2, #0
 1037 002a C9B2     		uxtb	r1, r1
 1038 002c C0B2     		uxtb	r0, r0
 1039 002e FFF7FEFF 		bl	OLED_DrawPixelStatus
 1040              	.LVL97:
 1041              	.L70:
 228:display/OLED.c **** 		{
 1042              		.loc 1 228 40 discriminator 2 view .LVU261
 228:display/OLED.c **** 		{
 1043              		.loc 1 228 41 is_stmt 0 discriminator 2 view .LVU262
 1044 0032 0134     		adds	r4, r4, #1
 1045              	.LVL98:
 228:display/OLED.c **** 		{
 1046              		.loc 1 228 41 discriminator 2 view .LVU263
 1047 0034 E4B2     		uxtb	r4, r4
 1048              	.LVL99:
 1049              	.L72:
 228:display/OLED.c **** 		{
 1050              		.loc 1 228 23 is_stmt 1 discriminator 1 view .LVU264
 228:display/OLED.c **** 		{
 1051              		.loc 1 228 31 is_stmt 0 discriminator 1 view .LVU265
 1052 0036 154B     		ldr	r3, .L77
 1053 0038 B3F90630 		ldrsh	r3, [r3, #6]
 228:display/OLED.c **** 		{
 1054              		.loc 1 228 3 discriminator 1 view .LVU266
 1055 003c 9C42     		cmp	r4, r3
 1056 003e 1CDA     		bge	.L75
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1057              		.loc 1 231 4 is_stmt 1 view .LVU267
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1058              		.loc 1 231 21 is_stmt 0 view .LVU268
 1059 0040 E308     		lsrs	r3, r4, #3
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1060              		.loc 1 231 17 view .LVU269
 1061 0042 5A1C     		adds	r2, r3, #1
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1062              		.loc 1 231 36 view .LVU270
 1063 0044 1149     		ldr	r1, .L77
 1064 0046 B1F90A30 		ldrsh	r3, [r1, #10]
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1065              		.loc 1 231 46 view .LVU271
 1066 004a 013B     		subs	r3, r3, #1
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1067              		.loc 1 231 29 view .LVU272
 1068 004c 05FB03F3 		mul	r3, r5, r3
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1069              		.loc 1 231 57 view .LVU273
 1070 0050 B1F90410 		ldrsh	r1, [r1, #4]
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1071              		.loc 1 231 51 view .LVU274
 1072 0054 93FBF1F3 		sdiv	r3, r3, r1
ARM GAS  /tmp/cc6puPNO.s 			page 60


 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1073              		.loc 1 231 25 view .LVU275
 1074 0058 1344     		add	r3, r3, r2
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1075              		.loc 1 231 14 view .LVU276
 1076 005a F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1077              		.loc 1 231 79 view .LVU277
 1078 005c 04F00702 		and	r2, r4, #7
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1079              		.loc 1 231 8 view .LVU278
 1080 0060 1341     		asrs	r3, r3, r2
 231:display/OLED.c **** 			{	OLED_DrawPixelStatus(ix + x, iy + y, 1); } 
 1081              		.loc 1 231 7 view .LVU279
 1082 0062 13F0010F 		tst	r3, #1
 1083 0066 DCD0     		beq	.L69
 232:display/OLED.c **** 			else
 1084              		.loc 1 232 6 is_stmt 1 view .LVU280
 1085 0068 E119     		adds	r1, r4, r7
 1086 006a 05EB0800 		add	r0, r5, r8
 1087 006e 0122     		movs	r2, #1
 1088 0070 C9B2     		uxtb	r1, r1
 1089 0072 C0B2     		uxtb	r0, r0
 1090 0074 FFF7FEFF 		bl	OLED_DrawPixelStatus
 1091              	.LVL100:
 1092 0078 DBE7     		b	.L70
 1093              	.L75:
 232:display/OLED.c **** 			else
 1094              		.loc 1 232 6 is_stmt 0 view .LVU281
 1095              	.LBE55:
 226:display/OLED.c **** 	{
 1096              		.loc 1 226 37 is_stmt 1 discriminator 2 view .LVU282
 226:display/OLED.c **** 	{
 1097              		.loc 1 226 38 is_stmt 0 discriminator 2 view .LVU283
 1098 007a 0135     		adds	r5, r5, #1
 1099              	.LVL101:
 226:display/OLED.c **** 	{
 1100              		.loc 1 226 38 discriminator 2 view .LVU284
 1101 007c EDB2     		uxtb	r5, r5
 1102              	.LVL102:
 1103              	.L68:
 226:display/OLED.c **** 	{
 1104              		.loc 1 226 22 is_stmt 1 discriminator 1 view .LVU285
 226:display/OLED.c **** 	{
 1105              		.loc 1 226 32 is_stmt 0 discriminator 1 view .LVU286
 1106 007e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 226:display/OLED.c **** 	{
 1107              		.loc 1 226 2 discriminator 1 view .LVU287
 1108 0080 AB42     		cmp	r3, r5
 1109 0082 01D9     		bls	.L76
 1110              	.LBB56:
 228:display/OLED.c **** 		{
 1111              		.loc 1 228 16 view .LVU288
 1112 0084 0024     		movs	r4, #0
 1113 0086 D6E7     		b	.L72
 1114              	.L76:
 1115              	.LBE56:
ARM GAS  /tmp/cc6puPNO.s 			page 61


 1116              	.LBE54:
 237:display/OLED.c **** 
 1117              		.loc 1 237 1 view .LVU289
 1118 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1119              	.LVL103:
 1120              	.L78:
 237:display/OLED.c **** 
 1121              		.loc 1 237 1 view .LVU290
 1122              		.align	2
 1123              	.L77:
 1124 008c 00000000 		.word	Font
 1125              		.cfi_endproc
 1126              	.LFE777:
 1128              		.section	.text.OLED_DrawStr,"ax",%progbits
 1129              		.align	1
 1130              		.global	OLED_DrawStr
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1135              	OLED_DrawStr:
 1136              	.LVL104:
 1137              	.LFB776:
 203:display/OLED.c **** 	uint8_t stl = strlen(str);
 1138              		.loc 1 203 1 is_stmt 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 203:display/OLED.c **** 	uint8_t stl = strlen(str);
 1142              		.loc 1 203 1 is_stmt 0 view .LVU292
 1143 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1144              	.LCFI13:
 1145              		.cfi_def_cfa_offset 24
 1146              		.cfi_offset 4, -24
 1147              		.cfi_offset 5, -20
 1148              		.cfi_offset 6, -16
 1149              		.cfi_offset 7, -12
 1150              		.cfi_offset 8, -8
 1151              		.cfi_offset 14, -4
 1152 0004 0646     		mov	r6, r0
 1153 0006 0D46     		mov	r5, r1
 1154 0008 1746     		mov	r7, r2
 204:display/OLED.c **** 	uint8_t pos = x;
 1155              		.loc 1 204 2 is_stmt 1 view .LVU293
 204:display/OLED.c **** 	uint8_t pos = x;
 1156              		.loc 1 204 16 is_stmt 0 view .LVU294
 1157 000a FFF7FEFF 		bl	strlen
 1158              	.LVL105:
 204:display/OLED.c **** 	uint8_t pos = x;
 1159              		.loc 1 204 10 view .LVU295
 1160 000e 5FFA80F8 		uxtb	r8, r0
 1161              	.LVL106:
 205:display/OLED.c **** 
 1162              		.loc 1 205 2 is_stmt 1 view .LVU296
 207:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 1163              		.loc 1 207 2 view .LVU297
 207:display/OLED.c **** 	{	pos = OLED_WIDTH - OLED_GetWidthStr(str) - 1; }
 1164              		.loc 1 207 5 is_stmt 0 view .LVU298
ARM GAS  /tmp/cc6puPNO.s 			page 62


 1165 0012 FE2D     		cmp	r5, #254
 1166 0014 05D0     		beq	.L86
 1167              	.L80:
 209:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 1168              		.loc 1 209 2 is_stmt 1 view .LVU299
 209:display/OLED.c **** 	{	pos = (OLED_WIDTH - OLED_GetWidthStr(str) - 1) / 2; }
 1169              		.loc 1 209 5 is_stmt 0 view .LVU300
 1170 0016 FF2D     		cmp	r5, #255
 1171 0018 0AD0     		beq	.L87
 1172              	.L81:
 211:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 1173              		.loc 1 211 2 is_stmt 1 view .LVU301
 211:display/OLED.c **** 	{	y = (OLED_HEIGHT - Font.height) / 2;	}
 1174              		.loc 1 211 5 is_stmt 0 view .LVU302
 1175 001a FF2F     		cmp	r7, #255
 1176 001c 12D0     		beq	.L88
 1177              	.LVL107:
 1178              	.L82:
 214:display/OLED.c **** 	{
 1179              		.loc 1 214 2 is_stmt 1 view .LVU303
 1180              	.LBB57:
 214:display/OLED.c **** 	{
 1181              		.loc 1 214 7 view .LVU304
 214:display/OLED.c **** 	{
 1182              		.loc 1 214 15 is_stmt 0 view .LVU305
 1183 001e 0024     		movs	r4, #0
 214:display/OLED.c **** 	{
 1184              		.loc 1 214 2 view .LVU306
 1185 0020 2FE0     		b	.L83
 1186              	.LVL108:
 1187              	.L86:
 214:display/OLED.c **** 	{
 1188              		.loc 1 214 2 view .LVU307
 1189              	.LBE57:
 208:display/OLED.c **** 	if (pos == CENTER) 
 1190              		.loc 1 208 4 is_stmt 1 view .LVU308
 208:display/OLED.c **** 	if (pos == CENTER) 
 1191              		.loc 1 208 23 is_stmt 0 view .LVU309
 1192 0022 3046     		mov	r0, r6
 1193 0024 FFF7FEFF 		bl	OLED_GetWidthStr
 1194              	.LVL109:
 208:display/OLED.c **** 	if (pos == CENTER) 
 1195              		.loc 1 208 8 view .LVU310
 1196 0028 C0F17F05 		rsb	r5, r0, #127
 1197              	.LVL110:
 208:display/OLED.c **** 	if (pos == CENTER) 
 1198              		.loc 1 208 8 view .LVU311
 1199 002c EDB2     		uxtb	r5, r5
 1200              	.LVL111:
 208:display/OLED.c **** 	if (pos == CENTER) 
 1201              		.loc 1 208 8 view .LVU312
 1202 002e F2E7     		b	.L80
 1203              	.L87:
 210:display/OLED.c **** 	if (y == CENTER) 
 1204              		.loc 1 210 4 is_stmt 1 view .LVU313
 210:display/OLED.c **** 	if (y == CENTER) 
 1205              		.loc 1 210 24 is_stmt 0 view .LVU314
ARM GAS  /tmp/cc6puPNO.s 			page 63


 1206 0030 3046     		mov	r0, r6
 1207 0032 FFF7FEFF 		bl	OLED_GetWidthStr
 1208              	.LVL112:
 210:display/OLED.c **** 	if (y == CENTER) 
 1209              		.loc 1 210 46 view .LVU315
 1210 0036 C0F17F00 		rsb	r0, r0, #127
 210:display/OLED.c **** 	if (y == CENTER) 
 1211              		.loc 1 210 51 view .LVU316
 1212 003a 00EBD070 		add	r0, r0, r0, lsr #31
 210:display/OLED.c **** 	if (y == CENTER) 
 1213              		.loc 1 210 8 view .LVU317
 1214 003e C0F34705 		ubfx	r5, r0, #1, #8
 1215              	.LVL113:
 210:display/OLED.c **** 	if (y == CENTER) 
 1216              		.loc 1 210 8 view .LVU318
 1217 0042 EAE7     		b	.L81
 1218              	.L88:
 212:display/OLED.c **** 
 1219              		.loc 1 212 4 is_stmt 1 view .LVU319
 212:display/OLED.c **** 
 1220              		.loc 1 212 27 is_stmt 0 view .LVU320
 1221 0044 114B     		ldr	r3, .L89
 1222 0046 B3F90670 		ldrsh	r7, [r3, #6]
 212:display/OLED.c **** 
 1223              		.loc 1 212 21 view .LVU321
 1224 004a C7F14007 		rsb	r7, r7, #64
 212:display/OLED.c **** 
 1225              		.loc 1 212 36 view .LVU322
 1226 004e 07EBD777 		add	r7, r7, r7, lsr #31
 212:display/OLED.c **** 
 1227              		.loc 1 212 6 view .LVU323
 1228 0052 C7F34707 		ubfx	r7, r7, #1, #8
 1229              	.LVL114:
 212:display/OLED.c **** 
 1230              		.loc 1 212 6 view .LVU324
 1231 0056 E2E7     		b	.L82
 1232              	.LVL115:
 1233              	.L84:
 1234              	.LBB58:
 216:display/OLED.c **** 		pos += fontbyte(Font.numchars * (*str - Font.offset) + 4);
 1235              		.loc 1 216 3 is_stmt 1 discriminator 3 view .LVU325
 1236 0058 3A46     		mov	r2, r7
 1237 005a 2946     		mov	r1, r5
 1238 005c 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1239 005e FFF7FEFF 		bl	OLED_DrawChar
 1240              	.LVL116:
 217:display/OLED.c **** 	}
 1241              		.loc 1 217 3 discriminator 3 view .LVU326
 217:display/OLED.c **** 	}
 1242              		.loc 1 217 10 is_stmt 0 discriminator 3 view .LVU327
 1243 0062 0A49     		ldr	r1, .L89
 1244 0064 0B68     		ldr	r3, [r1]
 1245 0066 B1F90A00 		ldrsh	r0, [r1, #10]
 1246 006a 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 1247              	.LVL117:
 217:display/OLED.c **** 	}
 1248              		.loc 1 217 10 discriminator 3 view .LVU328
ARM GAS  /tmp/cc6puPNO.s 			page 64


 1249 006e B1F90810 		ldrsh	r1, [r1, #8]
 1250 0072 521A     		subs	r2, r2, r1
 1251 0074 02FB0033 		mla	r3, r2, r0, r3
 1252 0078 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 217:display/OLED.c **** 	}
 1253              		.loc 1 217 7 discriminator 3 view .LVU329
 1254 007a 0D44     		add	r5, r5, r1
 1255              	.LVL118:
 217:display/OLED.c **** 	}
 1256              		.loc 1 217 7 discriminator 3 view .LVU330
 1257 007c EDB2     		uxtb	r5, r5
 1258              	.LVL119:
 214:display/OLED.c **** 	{
 1259              		.loc 1 214 35 is_stmt 1 discriminator 3 view .LVU331
 214:display/OLED.c **** 	{
 1260              		.loc 1 214 38 is_stmt 0 discriminator 3 view .LVU332
 1261 007e 0134     		adds	r4, r4, #1
 1262              	.LVL120:
 214:display/OLED.c **** 	{
 1263              		.loc 1 214 38 discriminator 3 view .LVU333
 1264 0080 E4B2     		uxtb	r4, r4
 1265              	.LVL121:
 1266              	.L83:
 214:display/OLED.c **** 	{
 1267              		.loc 1 214 24 is_stmt 1 discriminator 1 view .LVU334
 214:display/OLED.c **** 	{
 1268              		.loc 1 214 2 is_stmt 0 discriminator 1 view .LVU335
 1269 0082 4445     		cmp	r4, r8
 1270 0084 E8D3     		bcc	.L84
 214:display/OLED.c **** 	{
 1271              		.loc 1 214 2 discriminator 1 view .LVU336
 1272              	.LBE58:
 219:display/OLED.c **** 
 1273              		.loc 1 219 1 view .LVU337
 1274 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1275              	.LVL122:
 1276              	.L90:
 219:display/OLED.c **** 
 1277              		.loc 1 219 1 view .LVU338
 1278 008a 00BF     		.align	2
 1279              	.L89:
 1280 008c 00000000 		.word	Font
 1281              		.cfi_endproc
 1282              	.LFE776:
 1284              		.section	.text.OLED_DrawNum,"ax",%progbits
 1285              		.align	1
 1286              		.global	OLED_DrawNum
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1291              	OLED_DrawNum:
 1292              	.LVL123:
 1293              	.LFB773:
 156:display/OLED.c **** 	char buf[15];
 1294              		.loc 1 156 1 is_stmt 1 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc6puPNO.s 			page 65


 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 156:display/OLED.c **** 	char buf[15];
 1298              		.loc 1 156 1 is_stmt 0 view .LVU340
 1299 0000 30B5     		push	{r4, r5, lr}
 1300              	.LCFI14:
 1301              		.cfi_def_cfa_offset 12
 1302              		.cfi_offset 4, -12
 1303              		.cfi_offset 5, -8
 1304              		.cfi_offset 14, -4
 1305 0002 85B0     		sub	sp, sp, #20
 1306              	.LCFI15:
 1307              		.cfi_def_cfa_offset 32
 1308 0004 0C46     		mov	r4, r1
 1309 0006 1546     		mov	r5, r2
 157:display/OLED.c **** 	sprintf(buf, "%d", num);
 1310              		.loc 1 157 2 is_stmt 1 view .LVU341
 158:display/OLED.c **** 
 1311              		.loc 1 158 2 view .LVU342
 1312 0008 0246     		mov	r2, r0
 1313              	.LVL124:
 158:display/OLED.c **** 
 1314              		.loc 1 158 2 is_stmt 0 view .LVU343
 1315 000a 0549     		ldr	r1, .L93
 1316              	.LVL125:
 158:display/OLED.c **** 
 1317              		.loc 1 158 2 view .LVU344
 1318 000c 6846     		mov	r0, sp
 1319              	.LVL126:
 158:display/OLED.c **** 
 1320              		.loc 1 158 2 view .LVU345
 1321 000e FFF7FEFF 		bl	sprintf
 1322              	.LVL127:
 160:display/OLED.c **** }
 1323              		.loc 1 160 2 is_stmt 1 view .LVU346
 1324 0012 2A46     		mov	r2, r5
 1325 0014 2146     		mov	r1, r4
 1326 0016 6846     		mov	r0, sp
 1327 0018 FFF7FEFF 		bl	OLED_DrawStr
 1328              	.LVL128:
 161:display/OLED.c **** 
 1329              		.loc 1 161 1 is_stmt 0 view .LVU347
 1330 001c 05B0     		add	sp, sp, #20
 1331              	.LCFI16:
 1332              		.cfi_def_cfa_offset 12
 1333              		@ sp needed
 1334 001e 30BD     		pop	{r4, r5, pc}
 1335              	.L94:
 1336              		.align	2
 1337              	.L93:
 1338 0020 00000000 		.word	.LC0
 1339              		.cfi_endproc
 1340              	.LFE773:
 1342              		.section	.text.OLED_DrawBuffer,"ax",%progbits
 1343              		.align	1
 1344              		.global	OLED_DrawBuffer
 1345              		.syntax unified
 1346              		.thumb
ARM GAS  /tmp/cc6puPNO.s 			page 66


 1347              		.thumb_func
 1349              	OLED_DrawBuffer:
 1350              	.LVL129:
 1351              	.LFB778:
 241:display/OLED.c **** 	uint8_t current_byte;
 1352              		.loc 1 241 1 is_stmt 1 view -0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 241:display/OLED.c **** 	uint8_t current_byte;
 1356              		.loc 1 241 1 is_stmt 0 view .LVU349
 1357 0000 70B5     		push	{r4, r5, r6, lr}
 1358              	.LCFI17:
 1359              		.cfi_def_cfa_offset 16
 1360              		.cfi_offset 4, -16
 1361              		.cfi_offset 5, -12
 1362              		.cfi_offset 6, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0646     		mov	r6, r0
 242:display/OLED.c **** 
 1365              		.loc 1 242 2 is_stmt 1 view .LVU350
 244:display/OLED.c **** 	{
 1366              		.loc 1 244 2 view .LVU351
 1367              	.LBB59:
 244:display/OLED.c **** 	{
 1368              		.loc 1 244 7 view .LVU352
 1369              	.LVL130:
 244:display/OLED.c **** 	{
 1370              		.loc 1 244 15 is_stmt 0 view .LVU353
 1371 0004 0025     		movs	r5, #0
 244:display/OLED.c **** 	{
 1372              		.loc 1 244 2 view .LVU354
 1373 0006 1BE0     		b	.L96
 1374              	.LVL131:
 1375              	.L97:
 1376              	.LBB60:
 253:display/OLED.c **** 		}
 1377              		.loc 1 253 6 is_stmt 1 view .LVU355
 1378 0008 0022     		movs	r2, #0
 1379              	.LVL132:
 253:display/OLED.c **** 		}
 1380              		.loc 1 253 6 is_stmt 0 view .LVU356
 1381 000a 2946     		mov	r1, r5
 1382 000c 2046     		mov	r0, r4
 1383 000e FFF7FEFF 		bl	OLED_DrawPixelStatus
 1384              	.LVL133:
 1385              	.L98:
 246:display/OLED.c **** 		{
 1386              		.loc 1 246 47 is_stmt 1 discriminator 2 view .LVU357
 246:display/OLED.c **** 		{
 1387              		.loc 1 246 52 is_stmt 0 discriminator 2 view .LVU358
 1388 0012 0134     		adds	r4, r4, #1
 1389              	.LVL134:
 246:display/OLED.c **** 		{
 1390              		.loc 1 246 52 discriminator 2 view .LVU359
 1391 0014 E4B2     		uxtb	r4, r4
 1392              	.LVL135:
ARM GAS  /tmp/cc6puPNO.s 			page 67


 1393              	.L100:
 246:display/OLED.c **** 		{
 1394              		.loc 1 246 27 is_stmt 1 discriminator 1 view .LVU360
 246:display/OLED.c **** 		{
 1395              		.loc 1 246 3 is_stmt 0 discriminator 1 view .LVU361
 1396 0016 14F0800F 		tst	r4, #128
 1397 001a 0FD1     		bne	.L103
 248:display/OLED.c **** 
 1398              		.loc 1 248 4 is_stmt 1 view .LVU362
 248:display/OLED.c **** 
 1399              		.loc 1 248 53 is_stmt 0 view .LVU363
 1400 001c E308     		lsrs	r3, r4, #3
 248:display/OLED.c **** 
 1401              		.loc 1 248 45 view .LVU364
 1402 001e 03EB0513 		add	r3, r3, r5, lsl #4
 248:display/OLED.c **** 
 1403              		.loc 1 248 17 view .LVU365
 1404 0022 F25C     		ldrb	r2, [r6, r3]	@ zero_extendqisi2
 1405              	.LVL136:
 250:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 1); }
 1406              		.loc 1 250 4 is_stmt 1 view .LVU366
 250:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 1); }
 1407              		.loc 1 250 45 is_stmt 0 view .LVU367
 1408 0024 04F00701 		and	r1, r4, #7
 250:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 1); }
 1409              		.loc 1 250 35 view .LVU368
 1410 0028 8023     		movs	r3, #128
 1411 002a 0B41     		asrs	r3, r3, r1
 250:display/OLED.c **** 			{	OLED_DrawPixelStatus(x_pos, y_pos, 1); }
 1412              		.loc 1 250 7 view .LVU369
 1413 002c 1A42     		tst	r2, r3
 1414 002e EBD0     		beq	.L97
 251:display/OLED.c **** 			else											
 1415              		.loc 1 251 6 is_stmt 1 view .LVU370
 1416 0030 0122     		movs	r2, #1
 1417              	.LVL137:
 251:display/OLED.c **** 			else											
 1418              		.loc 1 251 6 is_stmt 0 view .LVU371
 1419 0032 2946     		mov	r1, r5
 1420 0034 2046     		mov	r0, r4
 1421 0036 FFF7FEFF 		bl	OLED_DrawPixelStatus
 1422              	.LVL138:
 251:display/OLED.c **** 			else											
 1423              		.loc 1 251 6 view .LVU372
 1424 003a EAE7     		b	.L98
 1425              	.L103:
 251:display/OLED.c **** 			else											
 1426              		.loc 1 251 6 view .LVU373
 1427              	.LBE60:
 244:display/OLED.c **** 	{
 1428              		.loc 1 244 47 is_stmt 1 discriminator 2 view .LVU374
 244:display/OLED.c **** 	{
 1429              		.loc 1 244 52 is_stmt 0 discriminator 2 view .LVU375
 1430 003c 0135     		adds	r5, r5, #1
 1431              	.LVL139:
 244:display/OLED.c **** 	{
 1432              		.loc 1 244 52 discriminator 2 view .LVU376
ARM GAS  /tmp/cc6puPNO.s 			page 68


 1433 003e EDB2     		uxtb	r5, r5
 1434              	.LVL140:
 1435              	.L96:
 244:display/OLED.c **** 	{
 1436              		.loc 1 244 26 is_stmt 1 discriminator 1 view .LVU377
 244:display/OLED.c **** 	{
 1437              		.loc 1 244 2 is_stmt 0 discriminator 1 view .LVU378
 1438 0040 3F2D     		cmp	r5, #63
 1439 0042 01D8     		bhi	.L104
 1440              	.LBB61:
 246:display/OLED.c **** 		{
 1441              		.loc 1 246 16 view .LVU379
 1442 0044 0024     		movs	r4, #0
 1443 0046 E6E7     		b	.L100
 1444              	.L104:
 1445              	.LBE61:
 1446              	.LBE59:
 256:display/OLED.c **** 
 1447              		.loc 1 256 1 view .LVU380
 1448 0048 70BD     		pop	{r4, r5, r6, pc}
 256:display/OLED.c **** 
 1449              		.loc 1 256 1 view .LVU381
 1450              		.cfi_endproc
 1451              	.LFE778:
 1453              		.section	.text.OLED_DrawPixel,"ax",%progbits
 1454              		.align	1
 1455              		.global	OLED_DrawPixel
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1460              	OLED_DrawPixel:
 1461              	.LVL141:
 1462              	.LFB780:
 269:display/OLED.c **** 
 270:display/OLED.c **** //---------------------------------------------------------------------//
 271:display/OLED.c **** void OLED_DrawPixel(uint8_t pos_x, uint8_t pos_y)
 272:display/OLED.c **** {
 1463              		.loc 1 272 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 273:display/OLED.c **** 	if (pos_x >= OLED_WIDTH || pos_y >= OLED_HEIGHT) 
 1468              		.loc 1 273 2 view .LVU383
 1469              		.loc 1 273 5 is_stmt 0 view .LVU384
 1470 0000 10F0800F 		tst	r0, #128
 1471 0004 0CD1     		bne	.L105
 1472              		.loc 1 273 26 discriminator 1 view .LVU385
 1473 0006 3F29     		cmp	r1, #63
 1474 0008 0AD8     		bhi	.L105
 274:display/OLED.c **** 		return;
 275:display/OLED.c **** 	
 276:display/OLED.c **** 	oled_buffer[pos_x + (pos_y / 8) * OLED_WIDTH] |= (1 << (pos_y & 7));
 1475              		.loc 1 276 2 is_stmt 1 view .LVU386
 1476              		.loc 1 276 48 is_stmt 0 view .LVU387
 1477 000a CB08     		lsrs	r3, r1, #3
 1478 000c 00EBC310 		add	r0, r0, r3, lsl #7
ARM GAS  /tmp/cc6puPNO.s 			page 69


 1479              	.LVL142:
 1480              		.loc 1 276 64 view .LVU388
 1481 0010 01F00701 		and	r1, r1, #7
 1482              	.LVL143:
 1483              		.loc 1 276 54 view .LVU389
 1484 0014 0123     		movs	r3, #1
 1485 0016 8B40     		lsls	r3, r3, r1
 1486              		.loc 1 276 48 view .LVU390
 1487 0018 024A     		ldr	r2, .L107
 1488 001a 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1489 001c 1943     		orrs	r1, r1, r3
 1490 001e 1154     		strb	r1, [r2, r0]
 1491              	.L105:
 277:display/OLED.c **** }
 1492              		.loc 1 277 1 view .LVU391
 1493 0020 7047     		bx	lr
 1494              	.L108:
 1495 0022 00BF     		.align	2
 1496              	.L107:
 1497 0024 00000000 		.word	.LANCHOR0
 1498              		.cfi_endproc
 1499              	.LFE780:
 1501              		.section	.text.OLED_DrawBitmap,"ax",%progbits
 1502              		.align	1
 1503              		.global	OLED_DrawBitmap
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1508              	OLED_DrawBitmap:
 1509              	.LVL144:
 1510              	.LFB781:
 278:display/OLED.c **** 
 279:display/OLED.c **** //--------------------------------------------------------------------------------//
 280:display/OLED.c **** void OLED_DrawBitmap(const uint8_t *progmem_bitmap, uint8_t height, uint8_t width, uint8_t pos_x, u
 281:display/OLED.c **** {
 1511              		.loc 1 281 1 is_stmt 1 view -0
 1512              		.cfi_startproc
 1513              		@ args = 4, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              		.loc 1 281 1 is_stmt 0 view .LVU393
 1516 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1517              	.LCFI18:
 1518              		.cfi_def_cfa_offset 40
 1519              		.cfi_offset 3, -40
 1520              		.cfi_offset 4, -36
 1521              		.cfi_offset 5, -32
 1522              		.cfi_offset 6, -28
 1523              		.cfi_offset 7, -24
 1524              		.cfi_offset 8, -20
 1525              		.cfi_offset 9, -16
 1526              		.cfi_offset 10, -12
 1527              		.cfi_offset 11, -8
 1528              		.cfi_offset 14, -4
 1529 0004 8246     		mov	r10, r0
 1530 0006 8B46     		mov	fp, r1
 1531 0008 9046     		mov	r8, r2
 1532 000a 1E46     		mov	r6, r3
ARM GAS  /tmp/cc6puPNO.s 			page 70


 1533 000c 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
 282:display/OLED.c **** 	uint8_t current_byte;
 1534              		.loc 1 282 2 is_stmt 1 view .LVU394
 283:display/OLED.c **** 	uint8_t byte_width = (width + 7) / 8;
 1535              		.loc 1 283 2 view .LVU395
 1536              		.loc 1 283 35 is_stmt 0 view .LVU396
 1537 0010 02F10709 		add	r9, r2, #7
 1538 0014 4FEAE909 		asr	r9, r9, #3
 1539              	.LVL145:
 284:display/OLED.c **** 
 285:display/OLED.c **** 	for (uint8_t current_y = 0; current_y < height; current_y++)
 1540              		.loc 1 285 2 is_stmt 1 view .LVU397
 1541              	.LBB62:
 1542              		.loc 1 285 7 view .LVU398
 1543              		.loc 1 285 15 is_stmt 0 view .LVU399
 1544 0018 0025     		movs	r5, #0
 1545              		.loc 1 285 2 view .LVU400
 1546 001a 1FE0     		b	.L111
 1547              	.LVL146:
 1548              	.L112:
 1549              	.LBB63:
 286:display/OLED.c **** 	{
 287:display/OLED.c **** 		for (uint8_t current_x = 0; current_x < width; current_x++)
 288:display/OLED.c **** 		{
 289:display/OLED.c **** 			current_byte = progmem_bitmap[current_y * byte_width + current_x / 8];
 290:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (current_x & 7)))	
 291:display/OLED.c **** 			{	OLED_DrawPixelStatus(current_x + pos_x, current_y + pos_y, 1);	}										OLED_DrawPixelStatus
 1550              		.loc 1 291 80 is_stmt 1 discriminator 1 view .LVU401
 1551 001c E919     		adds	r1, r5, r7
 1552 001e A019     		adds	r0, r4, r6
 1553 0020 0022     		movs	r2, #0
 1554 0022 C9B2     		uxtb	r1, r1
 1555 0024 C0B2     		uxtb	r0, r0
 1556 0026 FFF7FEFF 		bl	OLED_DrawPixelStatus
 1557              	.LVL147:
 287:display/OLED.c **** 		{
 1558              		.loc 1 287 50 discriminator 1 view .LVU402
 287:display/OLED.c **** 		{
 1559              		.loc 1 287 59 is_stmt 0 discriminator 1 view .LVU403
 1560 002a 0134     		adds	r4, r4, #1
 1561              	.LVL148:
 287:display/OLED.c **** 		{
 1562              		.loc 1 287 59 discriminator 1 view .LVU404
 1563 002c E4B2     		uxtb	r4, r4
 1564              	.LVL149:
 1565              	.L114:
 287:display/OLED.c **** 		{
 1566              		.loc 1 287 31 is_stmt 1 discriminator 2 view .LVU405
 287:display/OLED.c **** 		{
 1567              		.loc 1 287 3 is_stmt 0 discriminator 2 view .LVU406
 1568 002e 4445     		cmp	r4, r8
 1569 0030 12D2     		bcs	.L117
 289:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (current_x & 7)))	
 1570              		.loc 1 289 4 is_stmt 1 view .LVU407
 289:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (current_x & 7)))	
 1571              		.loc 1 289 69 is_stmt 0 view .LVU408
 1572 0032 E308     		lsrs	r3, r4, #3
ARM GAS  /tmp/cc6puPNO.s 			page 71


 289:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (current_x & 7)))	
 1573              		.loc 1 289 57 view .LVU409
 1574 0034 09FB0533 		mla	r3, r9, r5, r3
 289:display/OLED.c **** 			if (current_byte & (OLED_WIDTH >> (current_x & 7)))	
 1575              		.loc 1 289 17 view .LVU410
 1576 0038 1AF80320 		ldrb	r2, [r10, r3]	@ zero_extendqisi2
 1577              	.LVL150:
 290:display/OLED.c **** 			{	OLED_DrawPixelStatus(current_x + pos_x, current_y + pos_y, 1);	}										OLED_DrawPixelStatus
 1578              		.loc 1 290 4 is_stmt 1 view .LVU411
 290:display/OLED.c **** 			{	OLED_DrawPixelStatus(current_x + pos_x, current_y + pos_y, 1);	}										OLED_DrawPixelStatus
 1579              		.loc 1 290 49 is_stmt 0 view .LVU412
 1580 003c 04F00701 		and	r1, r4, #7
 290:display/OLED.c **** 			{	OLED_DrawPixelStatus(current_x + pos_x, current_y + pos_y, 1);	}										OLED_DrawPixelStatus
 1581              		.loc 1 290 35 view .LVU413
 1582 0040 8023     		movs	r3, #128
 1583 0042 0B41     		asrs	r3, r3, r1
 290:display/OLED.c **** 			{	OLED_DrawPixelStatus(current_x + pos_x, current_y + pos_y, 1);	}										OLED_DrawPixelStatus
 1584              		.loc 1 290 7 view .LVU414
 1585 0044 1A42     		tst	r2, r3
 1586 0046 E9D0     		beq	.L112
 1587              		.loc 1 291 6 is_stmt 1 view .LVU415
 1588 0048 E919     		adds	r1, r5, r7
 1589 004a A019     		adds	r0, r4, r6
 1590 004c 0122     		movs	r2, #1
 1591              	.LVL151:
 1592              		.loc 1 291 6 is_stmt 0 view .LVU416
 1593 004e C9B2     		uxtb	r1, r1
 1594 0050 C0B2     		uxtb	r0, r0
 1595 0052 FFF7FEFF 		bl	OLED_DrawPixelStatus
 1596              	.LVL152:
 1597              		.loc 1 291 6 view .LVU417
 1598 0056 E1E7     		b	.L112
 1599              	.L117:
 1600              		.loc 1 291 6 view .LVU418
 1601              	.LBE63:
 285:display/OLED.c **** 	{
 1602              		.loc 1 285 50 is_stmt 1 discriminator 2 view .LVU419
 285:display/OLED.c **** 	{
 1603              		.loc 1 285 59 is_stmt 0 discriminator 2 view .LVU420
 1604 0058 0135     		adds	r5, r5, #1
 1605              	.LVL153:
 285:display/OLED.c **** 	{
 1606              		.loc 1 285 59 discriminator 2 view .LVU421
 1607 005a EDB2     		uxtb	r5, r5
 1608              	.LVL154:
 1609              	.L111:
 285:display/OLED.c **** 	{
 1610              		.loc 1 285 30 is_stmt 1 discriminator 1 view .LVU422
 285:display/OLED.c **** 	{
 1611              		.loc 1 285 2 is_stmt 0 discriminator 1 view .LVU423
 1612 005c 5D45     		cmp	r5, fp
 1613 005e 01D2     		bcs	.L118
 1614              	.LBB64:
 287:display/OLED.c **** 		{
 1615              		.loc 1 287 16 view .LVU424
 1616 0060 0024     		movs	r4, #0
 1617 0062 E4E7     		b	.L114
ARM GAS  /tmp/cc6puPNO.s 			page 72


 1618              	.L118:
 1619              	.LBE64:
 1620              	.LBE62:
 292:display/OLED.c **** 		}
 293:display/OLED.c **** 	}
 294:display/OLED.c **** }
 1621              		.loc 1 294 1 view .LVU425
 1622 0064 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1623              		.loc 1 294 1 view .LVU426
 1624              		.cfi_endproc
 1625              	.LFE781:
 1627              		.section	.text.OLED_DrawXBM,"ax",%progbits
 1628              		.align	1
 1629              		.global	OLED_DrawXBM
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1634              	OLED_DrawXBM:
 1635              	.LVL155:
 1636              	.LFB782:
 295:display/OLED.c **** 
 296:display/OLED.c **** //---------------------------------------------------------------------//
 297:display/OLED.c **** void OLED_DrawXBM(int16_t xMove, int16_t yMove, const uint8_t *xbm)
 298:display/OLED.c **** {
 1637              		.loc 1 298 1 is_stmt 1 view -0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              		.loc 1 298 1 is_stmt 0 view .LVU428
 1642 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1643              	.LCFI19:
 1644              		.cfi_def_cfa_offset 36
 1645              		.cfi_offset 4, -36
 1646              		.cfi_offset 5, -32
 1647              		.cfi_offset 6, -28
 1648              		.cfi_offset 7, -24
 1649              		.cfi_offset 8, -20
 1650              		.cfi_offset 9, -16
 1651              		.cfi_offset 10, -12
 1652              		.cfi_offset 11, -8
 1653              		.cfi_offset 14, -4
 1654 0004 83B0     		sub	sp, sp, #12
 1655              	.LCFI20:
 1656              		.cfi_def_cfa_offset 48
 1657 0006 8346     		mov	fp, r0
 1658 0008 8A46     		mov	r10, r1
 1659 000a 9146     		mov	r9, r2
 299:display/OLED.c **** 	int16_t width = xbm[0];
 1660              		.loc 1 299 2 is_stmt 1 view .LVU429
 1661              		.loc 1 299 21 is_stmt 0 view .LVU430
 1662 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1663              		.loc 1 299 10 view .LVU431
 1664 000e 1FB2     		sxth	r7, r3
 1665              	.LVL156:
 300:display/OLED.c **** 	int16_t height = xbm[1];
 1666              		.loc 1 300 2 is_stmt 1 view .LVU432
 1667              		.loc 1 300 10 is_stmt 0 view .LVU433
ARM GAS  /tmp/cc6puPNO.s 			page 73


 1668 0010 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1669              	.LVL157:
 1670              		.loc 1 300 10 view .LVU434
 1671 0012 0192     		str	r2, [sp, #4]
 1672              	.LVL158:
 301:display/OLED.c **** 	int16_t widthInXbm = (width + 7) / 8;
 1673              		.loc 1 301 2 is_stmt 1 view .LVU435
 1674              		.loc 1 301 35 is_stmt 0 view .LVU436
 1675 0014 0733     		adds	r3, r3, #7
 1676              		.loc 1 301 10 view .LVU437
 1677 0016 4FEAD308 		lsr	r8, r3, #3
 1678              	.LVL159:
 302:display/OLED.c **** 	uint8_t data = 0;
 1679              		.loc 1 302 2 is_stmt 1 view .LVU438
 303:display/OLED.c **** 	
 304:display/OLED.c **** 	for (int16_t y = 0; y < height; y++)
 1680              		.loc 1 304 2 view .LVU439
 1681              	.LBB65:
 1682              		.loc 1 304 7 view .LVU440
 1683              		.loc 1 304 15 is_stmt 0 view .LVU441
 1684 001a 0026     		movs	r6, #0
 1685              	.LBE65:
 302:display/OLED.c **** 	uint8_t data = 0;
 1686              		.loc 1 302 10 view .LVU442
 1687 001c 3546     		mov	r5, r6
 1688              	.LBB68:
 1689              		.loc 1 304 2 view .LVU443
 1690 001e 22E0     		b	.L121
 1691              	.LVL160:
 1692              	.L122:
 1693              	.LBB66:
 305:display/OLED.c **** 	{
 306:display/OLED.c **** 		for (int16_t x = 0; x < width; x++ )
 307:display/OLED.c **** 		{
 308:display/OLED.c **** 			if (x & 0x7)	
 309:display/OLED.c **** 			{	data >>= 1;	}			// Move a bit
 310:display/OLED.c **** 			else			
 311:display/OLED.c **** 			{	data = xbm[(x / 8) + y * widthInXbm + 2]; }// Read new data every 8 bit
 1694              		.loc 1 311 6 is_stmt 1 view .LVU444
 1695              		.loc 1 311 20 is_stmt 0 view .LVU445
 1696 0020 0346     		mov	r3, r0
 1697 0022 0028     		cmp	r0, #0
 1698 0024 13DB     		blt	.L130
 1699              	.L124:
 1700 0026 43F3CF03 		sbfx	r3, r3, #3, #16
 1701              		.loc 1 311 25 view .LVU446
 1702 002a 08FB0633 		mla	r3, r8, r6, r3
 1703              		.loc 1 311 16 view .LVU447
 1704 002e 0233     		adds	r3, r3, #2
 1705              		.loc 1 311 11 view .LVU448
 1706 0030 19F80350 		ldrb	r5, [r9, r3]	@ zero_extendqisi2
 1707              	.LVL161:
 1708              	.L123:
 312:display/OLED.c **** 			if (data & 0x01)
 1709              		.loc 1 312 4 is_stmt 1 view .LVU449
 1710              		.loc 1 312 7 is_stmt 0 view .LVU450
 1711 0034 15F0010F 		tst	r5, #1
ARM GAS  /tmp/cc6puPNO.s 			page 74


 1712 0038 0BD1     		bne	.L131
 1713              	.LVL162:
 1714              	.L125:
 306:display/OLED.c **** 		{
 1715              		.loc 1 306 34 is_stmt 1 discriminator 2 view .LVU451
 306:display/OLED.c **** 		{
 1716              		.loc 1 306 35 is_stmt 0 discriminator 2 view .LVU452
 1717 003a 601C     		adds	r0, r4, #1
 1718 003c 00B2     		sxth	r0, r0
 1719              	.LVL163:
 1720              	.L127:
 306:display/OLED.c **** 		{
 1721              		.loc 1 306 23 is_stmt 1 discriminator 1 view .LVU453
 306:display/OLED.c **** 		{
 1722              		.loc 1 306 3 is_stmt 0 discriminator 1 view .LVU454
 1723 003e B842     		cmp	r0, r7
 1724 0040 0FDA     		bge	.L132
 308:display/OLED.c **** 			{	data >>= 1;	}			// Move a bit
 1725              		.loc 1 308 4 is_stmt 1 view .LVU455
 308:display/OLED.c **** 			{	data >>= 1;	}			// Move a bit
 1726              		.loc 1 308 10 is_stmt 0 view .LVU456
 1727 0042 84B2     		uxth	r4, r0
 308:display/OLED.c **** 			{	data >>= 1;	}			// Move a bit
 1728              		.loc 1 308 7 view .LVU457
 1729 0044 10F0070F 		tst	r0, #7
 1730 0048 EAD0     		beq	.L122
 309:display/OLED.c **** 			else			
 1731              		.loc 1 309 6 is_stmt 1 view .LVU458
 309:display/OLED.c **** 			else			
 1732              		.loc 1 309 11 is_stmt 0 view .LVU459
 1733 004a 6D08     		lsrs	r5, r5, #1
 1734              	.LVL164:
 309:display/OLED.c **** 			else			
 1735              		.loc 1 309 11 view .LVU460
 1736 004c F2E7     		b	.L123
 1737              	.L130:
 311:display/OLED.c **** 			if (data & 0x01)
 1738              		.loc 1 311 20 view .LVU461
 1739 004e C31D     		adds	r3, r0, #7
 1740 0050 E9E7     		b	.L124
 1741              	.L131:
 313:display/OLED.c **** 			{	OLED_DrawPixel(xMove + x, yMove + y);	}	//if there is a bit draw it
 1742              		.loc 1 313 6 is_stmt 1 view .LVU462
 1743 0052 0AEB0601 		add	r1, r10, r6
 1744 0056 5844     		add	r0, r0, fp
 1745              	.LVL165:
 1746              		.loc 1 313 6 is_stmt 0 view .LVU463
 1747 0058 C9B2     		uxtb	r1, r1
 1748 005a C0B2     		uxtb	r0, r0
 1749 005c FFF7FEFF 		bl	OLED_DrawPixel
 1750              	.LVL166:
 1751 0060 EBE7     		b	.L125
 1752              	.LVL167:
 1753              	.L132:
 1754              		.loc 1 313 6 view .LVU464
 1755              	.LBE66:
 304:display/OLED.c **** 	{
ARM GAS  /tmp/cc6puPNO.s 			page 75


 1756              		.loc 1 304 34 is_stmt 1 discriminator 2 view .LVU465
 304:display/OLED.c **** 	{
 1757              		.loc 1 304 35 is_stmt 0 discriminator 2 view .LVU466
 1758 0062 0136     		adds	r6, r6, #1
 1759              	.LVL168:
 304:display/OLED.c **** 	{
 1760              		.loc 1 304 35 discriminator 2 view .LVU467
 1761 0064 36B2     		sxth	r6, r6
 1762              	.LVL169:
 1763              	.L121:
 304:display/OLED.c **** 	{
 1764              		.loc 1 304 22 is_stmt 1 discriminator 1 view .LVU468
 304:display/OLED.c **** 	{
 1765              		.loc 1 304 2 is_stmt 0 discriminator 1 view .LVU469
 1766 0066 019B     		ldr	r3, [sp, #4]
 1767 0068 9E42     		cmp	r6, r3
 1768 006a 01DA     		bge	.L133
 1769              	.LBB67:
 306:display/OLED.c **** 		{
 1770              		.loc 1 306 16 view .LVU470
 1771 006c 0020     		movs	r0, #0
 1772 006e E6E7     		b	.L127
 1773              	.L133:
 1774              	.LBE67:
 1775              	.LBE68:
 314:display/OLED.c **** 		}
 315:display/OLED.c **** 	}
 316:display/OLED.c **** }
 1776              		.loc 1 316 1 view .LVU471
 1777 0070 03B0     		add	sp, sp, #12
 1778              	.LCFI21:
 1779              		.cfi_def_cfa_offset 36
 1780              		@ sp needed
 1781 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1782              		.loc 1 316 1 view .LVU472
 1783              		.cfi_endproc
 1784              	.LFE782:
 1786              		.section	.text.OLED_DrawVLine,"ax",%progbits
 1787              		.align	1
 1788              		.global	OLED_DrawVLine
 1789              		.syntax unified
 1790              		.thumb
 1791              		.thumb_func
 1793              	OLED_DrawVLine:
 1794              	.LVL170:
 1795              	.LFB783:
 317:display/OLED.c **** 
 318:display/OLED.c **** //---------------------------------------------------------------------//
 319:display/OLED.c **** void OLED_DrawVLine(uint8_t x, uint8_t y, uint8_t length)
 320:display/OLED.c **** {
 1796              		.loc 1 320 1 is_stmt 1 view -0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              		.loc 1 320 1 is_stmt 0 view .LVU474
 1801 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1802              	.LCFI22:
ARM GAS  /tmp/cc6puPNO.s 			page 76


 1803              		.cfi_def_cfa_offset 24
 1804              		.cfi_offset 3, -24
 1805              		.cfi_offset 4, -20
 1806              		.cfi_offset 5, -16
 1807              		.cfi_offset 6, -12
 1808              		.cfi_offset 7, -8
 1809              		.cfi_offset 14, -4
 1810 0002 0746     		mov	r7, r0
 1811 0004 0E46     		mov	r6, r1
 1812 0006 1546     		mov	r5, r2
 321:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1813              		.loc 1 321 2 is_stmt 1 view .LVU475
 1814              	.LBB69:
 1815              		.loc 1 321 7 view .LVU476
 1816              	.LVL171:
 1817              		.loc 1 321 15 is_stmt 0 view .LVU477
 1818 0008 0024     		movs	r4, #0
 1819              		.loc 1 321 2 view .LVU478
 1820 000a 06E0     		b	.L135
 1821              	.LVL172:
 1822              	.L136:
 322:display/OLED.c **** 	{	OLED_DrawPixel(x, i + y);	}
 1823              		.loc 1 322 4 is_stmt 1 discriminator 3 view .LVU479
 1824 000c A119     		adds	r1, r4, r6
 1825 000e C9B2     		uxtb	r1, r1
 1826 0010 3846     		mov	r0, r7
 1827 0012 FFF7FEFF 		bl	OLED_DrawPixel
 1828              	.LVL173:
 321:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1829              		.loc 1 321 34 discriminator 3 view .LVU480
 1830 0016 0134     		adds	r4, r4, #1
 1831              	.LVL174:
 321:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1832              		.loc 1 321 34 is_stmt 0 discriminator 3 view .LVU481
 1833 0018 E4B2     		uxtb	r4, r4
 1834              	.LVL175:
 1835              	.L135:
 321:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1836              		.loc 1 321 22 is_stmt 1 discriminator 1 view .LVU482
 321:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1837              		.loc 1 321 2 is_stmt 0 discriminator 1 view .LVU483
 1838 001a AC42     		cmp	r4, r5
 1839 001c F6D3     		bcc	.L136
 1840              	.LBE69:
 323:display/OLED.c **** }
 1841              		.loc 1 323 1 view .LVU484
 1842 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1843              		.loc 1 323 1 view .LVU485
 1844              		.cfi_endproc
 1845              	.LFE783:
 1847              		.section	.text.OLED_DrawHLine,"ax",%progbits
 1848              		.align	1
 1849              		.global	OLED_DrawHLine
 1850              		.syntax unified
 1851              		.thumb
 1852              		.thumb_func
 1854              	OLED_DrawHLine:
ARM GAS  /tmp/cc6puPNO.s 			page 77


 1855              	.LVL176:
 1856              	.LFB784:
 324:display/OLED.c **** 
 325:display/OLED.c **** //---------------------------------------------------------------------//
 326:display/OLED.c **** void OLED_DrawHLine(uint8_t x, uint8_t y, uint8_t length, uint8_t mode)
 327:display/OLED.c **** {
 1857              		.loc 1 327 1 is_stmt 1 view -0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		.loc 1 327 1 is_stmt 0 view .LVU487
 1862 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1863              	.LCFI23:
 1864              		.cfi_def_cfa_offset 24
 1865              		.cfi_offset 4, -24
 1866              		.cfi_offset 5, -20
 1867              		.cfi_offset 6, -16
 1868              		.cfi_offset 7, -12
 1869              		.cfi_offset 8, -8
 1870              		.cfi_offset 14, -4
 1871 0004 8046     		mov	r8, r0
 1872 0006 0F46     		mov	r7, r1
 1873 0008 1546     		mov	r5, r2
 1874 000a 1E46     		mov	r6, r3
 328:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1875              		.loc 1 328 2 is_stmt 1 view .LVU488
 1876              	.LBB70:
 1877              		.loc 1 328 7 view .LVU489
 1878              	.LVL177:
 1879              		.loc 1 328 15 is_stmt 0 view .LVU490
 1880 000c 0024     		movs	r4, #0
 1881              		.loc 1 328 2 view .LVU491
 1882 000e 08E0     		b	.L139
 1883              	.LVL178:
 1884              	.L140:
 329:display/OLED.c **** 	{	OLED_DrawPixelStatus(i + x, y, mode);	}
 1885              		.loc 1 329 4 is_stmt 1 discriminator 3 view .LVU492
 1886 0010 04EB0800 		add	r0, r4, r8
 1887 0014 3246     		mov	r2, r6
 1888 0016 3946     		mov	r1, r7
 1889 0018 C0B2     		uxtb	r0, r0
 1890 001a FFF7FEFF 		bl	OLED_DrawPixelStatus
 1891              	.LVL179:
 328:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1892              		.loc 1 328 34 discriminator 3 view .LVU493
 1893 001e 0134     		adds	r4, r4, #1
 1894              	.LVL180:
 328:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1895              		.loc 1 328 34 is_stmt 0 discriminator 3 view .LVU494
 1896 0020 E4B2     		uxtb	r4, r4
 1897              	.LVL181:
 1898              	.L139:
 328:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1899              		.loc 1 328 22 is_stmt 1 discriminator 1 view .LVU495
 328:display/OLED.c **** 	for (uint8_t i = 0; i < length; ++i)
 1900              		.loc 1 328 2 is_stmt 0 discriminator 1 view .LVU496
 1901 0022 AC42     		cmp	r4, r5
ARM GAS  /tmp/cc6puPNO.s 			page 78


 1902 0024 F4D3     		bcc	.L140
 1903              	.LBE70:
 330:display/OLED.c **** }
 1904              		.loc 1 330 1 view .LVU497
 1905 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1906              		.loc 1 330 1 view .LVU498
 1907              		.cfi_endproc
 1908              	.LFE784:
 1910              		.section	.text.OLED_DrawRectangle,"ax",%progbits
 1911              		.align	1
 1912              		.global	OLED_DrawRectangle
 1913              		.syntax unified
 1914              		.thumb
 1915              		.thumb_func
 1917              	OLED_DrawRectangle:
 1918              	.LVL182:
 1919              	.LFB785:
 331:display/OLED.c **** 
 332:display/OLED.c **** //---------------------------------------------------------------------//
 333:display/OLED.c **** void OLED_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2)
 334:display/OLED.c **** {
 1920              		.loc 1 334 1 is_stmt 1 view -0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              		.loc 1 334 1 is_stmt 0 view .LVU500
 1925 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1926              	.LCFI24:
 1927              		.cfi_def_cfa_offset 32
 1928              		.cfi_offset 3, -32
 1929              		.cfi_offset 4, -28
 1930              		.cfi_offset 5, -24
 1931              		.cfi_offset 6, -20
 1932              		.cfi_offset 7, -16
 1933              		.cfi_offset 8, -12
 1934              		.cfi_offset 9, -8
 1935              		.cfi_offset 14, -4
 1936 0004 0646     		mov	r6, r0
 1937 0006 0D46     		mov	r5, r1
 1938 0008 1746     		mov	r7, r2
 1939 000a 9846     		mov	r8, r3
 335:display/OLED.c **** 	uint8_t length = x2 - x1 + 1;
 1940              		.loc 1 335 2 is_stmt 1 view .LVU501
 1941              		.loc 1 335 22 is_stmt 0 view .LVU502
 1942 000c 141A     		subs	r4, r2, r0
 1943 000e E4B2     		uxtb	r4, r4
 1944              		.loc 1 335 10 view .LVU503
 1945 0010 0134     		adds	r4, r4, #1
 1946 0012 E4B2     		uxtb	r4, r4
 1947              	.LVL183:
 336:display/OLED.c **** 	uint8_t height = y2 - y1;
 1948              		.loc 1 336 2 is_stmt 1 view .LVU504
 1949              		.loc 1 336 10 is_stmt 0 view .LVU505
 1950 0014 A3EB0109 		sub	r9, r3, r1
 1951 0018 5FFA89F9 		uxtb	r9, r9
 1952              	.LVL184:
 337:display/OLED.c **** 
ARM GAS  /tmp/cc6puPNO.s 			page 79


 338:display/OLED.c **** 	OLED_DrawHLine(x1, y1, length, 1);
 1953              		.loc 1 338 2 is_stmt 1 view .LVU506
 1954 001c 0123     		movs	r3, #1
 1955              	.LVL185:
 1956              		.loc 1 338 2 is_stmt 0 view .LVU507
 1957 001e 2246     		mov	r2, r4
 1958              	.LVL186:
 1959              		.loc 1 338 2 view .LVU508
 1960 0020 FFF7FEFF 		bl	OLED_DrawHLine
 1961              	.LVL187:
 339:display/OLED.c **** 	OLED_DrawHLine(x1, y2, length, 1);
 1962              		.loc 1 339 2 is_stmt 1 view .LVU509
 1963 0024 0123     		movs	r3, #1
 1964 0026 2246     		mov	r2, r4
 1965 0028 4146     		mov	r1, r8
 1966 002a 3046     		mov	r0, r6
 1967 002c FFF7FEFF 		bl	OLED_DrawHLine
 1968              	.LVL188:
 340:display/OLED.c **** 	OLED_DrawVLine(x1, y1, height);
 1969              		.loc 1 340 2 view .LVU510
 1970 0030 4A46     		mov	r2, r9
 1971 0032 2946     		mov	r1, r5
 1972 0034 3046     		mov	r0, r6
 1973 0036 FFF7FEFF 		bl	OLED_DrawVLine
 1974              	.LVL189:
 341:display/OLED.c **** 	OLED_DrawVLine(x2, y1, height);
 1975              		.loc 1 341 2 view .LVU511
 1976 003a 4A46     		mov	r2, r9
 1977 003c 2946     		mov	r1, r5
 1978 003e 3846     		mov	r0, r7
 1979 0040 FFF7FEFF 		bl	OLED_DrawVLine
 1980              	.LVL190:
 342:display/OLED.c **** }
 1981              		.loc 1 342 1 is_stmt 0 view .LVU512
 1982 0044 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1983              		.loc 1 342 1 view .LVU513
 1984              		.cfi_endproc
 1985              	.LFE785:
 1987              		.section	.text.OLED_DrawRectangleFill,"ax",%progbits
 1988              		.align	1
 1989              		.global	OLED_DrawRectangleFill
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1994              	OLED_DrawRectangleFill:
 1995              	.LVL191:
 1996              	.LFB786:
 343:display/OLED.c **** 
 344:display/OLED.c **** //---------------------------------------------------------------------//
 345:display/OLED.c **** void OLED_DrawRectangleFill(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, uint8_t mode)
 346:display/OLED.c **** {
 1997              		.loc 1 346 1 is_stmt 1 view -0
 1998              		.cfi_startproc
 1999              		@ args = 4, pretend = 0, frame = 0
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001              		.loc 1 346 1 is_stmt 0 view .LVU515
 2002 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  /tmp/cc6puPNO.s 			page 80


 2003              	.LCFI25:
 2004              		.cfi_def_cfa_offset 32
 2005              		.cfi_offset 4, -32
 2006              		.cfi_offset 5, -28
 2007              		.cfi_offset 6, -24
 2008              		.cfi_offset 7, -20
 2009              		.cfi_offset 8, -16
 2010              		.cfi_offset 9, -12
 2011              		.cfi_offset 10, -8
 2012              		.cfi_offset 14, -4
 2013 0004 8046     		mov	r8, r0
 2014 0006 0F46     		mov	r7, r1
 2015 0008 9DF82090 		ldrb	r9, [sp, #32]	@ zero_extendqisi2
 347:display/OLED.c **** 	uint8_t length = x2 - x1 + 1;
 2016              		.loc 1 347 2 is_stmt 1 view .LVU516
 2017              		.loc 1 347 22 is_stmt 0 view .LVU517
 2018 000c A2EB000A 		sub	r10, r2, r0
 2019 0010 5FFA8AFA 		uxtb	r10, r10
 2020              		.loc 1 347 10 view .LVU518
 2021 0014 0AF1010A 		add	r10, r10, #1
 2022 0018 5FFA8AFA 		uxtb	r10, r10
 2023              	.LVL192:
 348:display/OLED.c **** 	uint8_t height = y2 - y1;
 2024              		.loc 1 348 2 is_stmt 1 view .LVU519
 2025              		.loc 1 348 10 is_stmt 0 view .LVU520
 2026 001c 5B1A     		subs	r3, r3, r1
 2027              	.LVL193:
 2028              		.loc 1 348 10 view .LVU521
 2029 001e DEB2     		uxtb	r6, r3
 2030              	.LVL194:
 349:display/OLED.c **** 
 350:display/OLED.c **** 	for (int16_t x = 0; x < length; ++x)
 2031              		.loc 1 350 2 is_stmt 1 view .LVU522
 2032              	.LBB71:
 2033              		.loc 1 350 7 view .LVU523
 2034              		.loc 1 350 15 is_stmt 0 view .LVU524
 2035 0020 0025     		movs	r5, #0
 2036              		.loc 1 350 2 view .LVU525
 2037 0022 0DE0     		b	.L145
 2038              	.LVL195:
 2039              	.L146:
 2040              	.LBB72:
 351:display/OLED.c **** 	{
 352:display/OLED.c **** 		for (int16_t y = 0; y <= height; ++y)
 353:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2041              		.loc 1 353 5 is_stmt 1 discriminator 3 view .LVU526
 2042 0024 3919     		adds	r1, r7, r4
 2043 0026 08EB0500 		add	r0, r8, r5
 2044 002a 4A46     		mov	r2, r9
 2045 002c C9B2     		uxtb	r1, r1
 2046 002e C0B2     		uxtb	r0, r0
 2047 0030 FFF7FEFF 		bl	OLED_DrawPixelStatus
 2048              	.LVL196:
 352:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2049              		.loc 1 352 36 discriminator 3 view .LVU527
 2050 0034 0134     		adds	r4, r4, #1
 2051              	.LVL197:
ARM GAS  /tmp/cc6puPNO.s 			page 81


 352:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2052              		.loc 1 352 36 is_stmt 0 discriminator 3 view .LVU528
 2053 0036 24B2     		sxth	r4, r4
 2054              	.LVL198:
 2055              	.L147:
 352:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2056              		.loc 1 352 23 is_stmt 1 discriminator 1 view .LVU529
 352:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2057              		.loc 1 352 3 is_stmt 0 discriminator 1 view .LVU530
 2058 0038 B442     		cmp	r4, r6
 2059 003a F3DD     		ble	.L146
 2060              	.LBE72:
 350:display/OLED.c **** 	{
 2061              		.loc 1 350 34 is_stmt 1 discriminator 2 view .LVU531
 2062 003c 0135     		adds	r5, r5, #1
 2063              	.LVL199:
 350:display/OLED.c **** 	{
 2064              		.loc 1 350 34 is_stmt 0 discriminator 2 view .LVU532
 2065 003e 2DB2     		sxth	r5, r5
 2066              	.LVL200:
 2067              	.L145:
 350:display/OLED.c **** 	{
 2068              		.loc 1 350 22 is_stmt 1 discriminator 1 view .LVU533
 350:display/OLED.c **** 	{
 2069              		.loc 1 350 2 is_stmt 0 discriminator 1 view .LVU534
 2070 0040 5545     		cmp	r5, r10
 2071 0042 01DA     		bge	.L150
 2072              	.LBB73:
 352:display/OLED.c **** 		{	OLED_DrawPixelStatus(x1 + x, y + y1, mode);	}
 2073              		.loc 1 352 16 view .LVU535
 2074 0044 0024     		movs	r4, #0
 2075 0046 F7E7     		b	.L147
 2076              	.L150:
 2077              	.LBE73:
 2078              	.LBE71:
 354:display/OLED.c **** 	}
 355:display/OLED.c **** }
 2079              		.loc 1 355 1 view .LVU536
 2080 0048 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2081              		.loc 1 355 1 view .LVU537
 2082              		.cfi_endproc
 2083              	.LFE786:
 2085              		.section	.text.OLED_DrawCircle,"ax",%progbits
 2086              		.align	1
 2087              		.global	OLED_DrawCircle
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2092              	OLED_DrawCircle:
 2093              	.LVL201:
 2094              	.LFB789:
 356:display/OLED.c **** 
 357:display/OLED.c **** //---------------------------------------------------------------------//
 358:display/OLED.c **** void OLED_DrawTriangle(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) 
 359:display/OLED.c **** {
 360:display/OLED.c **** 	OLED_DrawLine(x1, y1, x2, y2);
 361:display/OLED.c **** 	OLED_DrawLine(x2, y2, x3, y3);
ARM GAS  /tmp/cc6puPNO.s 			page 82


 362:display/OLED.c **** 	OLED_DrawLine(x3, y3, x1, y1);
 363:display/OLED.c **** }
 364:display/OLED.c **** 
 365:display/OLED.c **** //---------------------------------------------------------------------//
 366:display/OLED.c **** void OLED_DrawTriangleFill(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) 
 367:display/OLED.c **** {
 368:display/OLED.c **** 	int16_t delta_x = 0, delta_y = 0;
 369:display/OLED.c **** 	int16_t	x = 0, y = 0, x_inc_1 = 0, x_inc_2 = 0, y_inc_1 = 0, y_inc_2 = 0;
 370:display/OLED.c **** 	int16_t	den = 0, num = 0, num_add = 0, num_pixels = 0;
 371:display/OLED.c **** 
 372:display/OLED.c **** 	delta_x = ABS(x2 - x1);
 373:display/OLED.c **** 	delta_y = ABS(y2 - y1);
 374:display/OLED.c **** 	x = x1;
 375:display/OLED.c **** 	y = y1;
 376:display/OLED.c **** 
 377:display/OLED.c **** 	if (x2 >= x1)	
 378:display/OLED.c **** 	{	
 379:display/OLED.c **** 		x_inc_1 = 1;	
 380:display/OLED.c **** 		x_inc_2 = 1;	
 381:display/OLED.c **** 	}
 382:display/OLED.c **** 	else 			
 383:display/OLED.c **** 	{	
 384:display/OLED.c **** 		x_inc_1 = -1;	
 385:display/OLED.c **** 		x_inc_2 = -1;	
 386:display/OLED.c **** 	}
 387:display/OLED.c **** 
 388:display/OLED.c **** 	if (y2 >= y1) 	
 389:display/OLED.c **** 	{	
 390:display/OLED.c **** 		y_inc_1 = 1;	
 391:display/OLED.c **** 		y_inc_2 = 1;	
 392:display/OLED.c **** 	}
 393:display/OLED.c **** 	else 			
 394:display/OLED.c **** 	{	
 395:display/OLED.c **** 		y_inc_1 = -1;	
 396:display/OLED.c **** 		y_inc_2 = -1;	
 397:display/OLED.c **** 	}
 398:display/OLED.c **** 
 399:display/OLED.c **** 	if (delta_x >= delta_y)
 400:display/OLED.c **** 	{
 401:display/OLED.c **** 		x_inc_1 = 0;
 402:display/OLED.c **** 		y_inc_2 = 0;
 403:display/OLED.c **** 		den = delta_x;
 404:display/OLED.c **** 		num = delta_x / 2;
 405:display/OLED.c **** 		num_add = delta_y;
 406:display/OLED.c **** 		num_pixels = delta_x;
 407:display/OLED.c **** 	}
 408:display/OLED.c **** 	else
 409:display/OLED.c **** 	{
 410:display/OLED.c **** 		x_inc_2 = 0;
 411:display/OLED.c **** 		y_inc_1 = 0;
 412:display/OLED.c **** 		den = delta_y;
 413:display/OLED.c **** 		num = delta_y / 2;
 414:display/OLED.c **** 		num_add = delta_x;
 415:display/OLED.c **** 		num_pixels = delta_y;
 416:display/OLED.c **** 	}
 417:display/OLED.c **** 
 418:display/OLED.c **** 	for (int16_t cur_pixel = 0; cur_pixel <= num_pixels; cur_pixel++)
ARM GAS  /tmp/cc6puPNO.s 			page 83


 419:display/OLED.c **** 	{
 420:display/OLED.c **** 		OLED_DrawLine(x, y, x3, y3);
 421:display/OLED.c **** 		num += num_add;
 422:display/OLED.c **** 		if (num >= den)
 423:display/OLED.c **** 		{
 424:display/OLED.c **** 			num -= den;
 425:display/OLED.c **** 			x += x_inc_1;
 426:display/OLED.c **** 			y += y_inc_1;
 427:display/OLED.c **** 		}
 428:display/OLED.c **** 		x += x_inc_2;
 429:display/OLED.c **** 		y += y_inc_2;
 430:display/OLED.c **** 	}
 431:display/OLED.c **** }
 432:display/OLED.c **** 
 433:display/OLED.c **** //---------------------------------------------------------------------//
 434:display/OLED.c **** void OLED_DrawCircle(int16_t x0, int16_t y0, uint8_t r)
 435:display/OLED.c **** {
 2095              		.loc 1 435 1 is_stmt 1 view -0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 16
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              		.loc 1 435 1 is_stmt 0 view .LVU539
 2100 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2101              	.LCFI26:
 2102              		.cfi_def_cfa_offset 36
 2103              		.cfi_offset 4, -36
 2104              		.cfi_offset 5, -32
 2105              		.cfi_offset 6, -28
 2106              		.cfi_offset 7, -24
 2107              		.cfi_offset 8, -20
 2108              		.cfi_offset 9, -16
 2109              		.cfi_offset 10, -12
 2110              		.cfi_offset 11, -8
 2111              		.cfi_offset 14, -4
 2112 0004 85B0     		sub	sp, sp, #20
 2113              	.LCFI27:
 2114              		.cfi_def_cfa_offset 56
 2115 0006 1446     		mov	r4, r2
 436:display/OLED.c **** 	int16_t x = 0;
 2116              		.loc 1 436 2 is_stmt 1 view .LVU540
 2117              	.LVL202:
 437:display/OLED.c **** 	int16_t y = r;
 2118              		.loc 1 437 2 view .LVU541
 2119              		.loc 1 437 10 is_stmt 0 view .LVU542
 2120 0008 13B2     		sxth	r3, r2
 2121 000a 0093     		str	r3, [sp]
 2122              	.LVL203:
 438:display/OLED.c **** 	int16_t ddF_y = - (r << 1);
 2123              		.loc 1 438 2 is_stmt 1 view .LVU543
 2124              		.loc 1 438 23 is_stmt 0 view .LVU544
 2125 000c 5300     		lsls	r3, r2, #1
 2126              		.loc 1 438 10 view .LVU545
 2127 000e 5B42     		rsbs	r3, r3, #0
 2128 0010 1BB2     		sxth	r3, r3
 2129 0012 0393     		str	r3, [sp, #12]
 2130              	.LVL204:
 439:display/OLED.c **** 	int16_t ddF_x = 1;
ARM GAS  /tmp/cc6puPNO.s 			page 84


 2131              		.loc 1 439 2 is_stmt 1 view .LVU546
 440:display/OLED.c **** 	int16_t f = 1 - r;
 2132              		.loc 1 440 2 view .LVU547
 2133              		.loc 1 440 10 is_stmt 0 view .LVU548
 2134 0014 C2F10105 		rsb	r5, r2, #1
 2135              	.LVL205:
 441:display/OLED.c **** 
 442:display/OLED.c **** 	OLED_DrawPixel(x0, y0 + r);
 2136              		.loc 1 442 2 is_stmt 1 view .LVU549
 2137 0018 5FFA80FB 		uxtb	fp, r0
 2138 001c 5FFA81FA 		uxtb	r10, r1
 2139 0020 0AEB0201 		add	r1, r10, r2
 2140              	.LVL206:
 2141              		.loc 1 442 2 is_stmt 0 view .LVU550
 2142 0024 C9B2     		uxtb	r1, r1
 2143 0026 5846     		mov	r0, fp
 2144              	.LVL207:
 2145              		.loc 1 442 2 view .LVU551
 2146 0028 FFF7FEFF 		bl	OLED_DrawPixel
 2147              	.LVL208:
 443:display/OLED.c **** 	OLED_DrawPixel(x0, y0 - r);
 2148              		.loc 1 443 2 is_stmt 1 view .LVU552
 2149 002c AAEB0401 		sub	r1, r10, r4
 2150 0030 C9B2     		uxtb	r1, r1
 2151 0032 5846     		mov	r0, fp
 2152 0034 FFF7FEFF 		bl	OLED_DrawPixel
 2153              	.LVL209:
 444:display/OLED.c **** 	OLED_DrawPixel(x0 + r, y0);
 2154              		.loc 1 444 2 view .LVU553
 2155 0038 0BEB0400 		add	r0, fp, r4
 2156 003c 5146     		mov	r1, r10
 2157 003e C0B2     		uxtb	r0, r0
 2158 0040 FFF7FEFF 		bl	OLED_DrawPixel
 2159              	.LVL210:
 445:display/OLED.c **** 	OLED_DrawPixel(x0 - r, y0);
 2160              		.loc 1 445 2 view .LVU554
 2161 0044 ABEB0400 		sub	r0, fp, r4
 2162 0048 5146     		mov	r1, r10
 2163 004a C0B2     		uxtb	r0, r0
 2164 004c FFF7FEFF 		bl	OLED_DrawPixel
 2165              	.LVL211:
 446:display/OLED.c **** 
 447:display/OLED.c **** 	while(x < y)
 2166              		.loc 1 447 2 view .LVU555
 439:display/OLED.c **** 	int16_t f = 1 - r;
 2167              		.loc 1 439 10 is_stmt 0 view .LVU556
 2168 0050 0123     		movs	r3, #1
 2169 0052 0293     		str	r3, [sp, #8]
 436:display/OLED.c **** 	int16_t y = r;
 2170              		.loc 1 436 10 view .LVU557
 2171 0054 0023     		movs	r3, #0
 2172 0056 0193     		str	r3, [sp, #4]
 2173              		.loc 1 447 7 view .LVU558
 2174 0058 54E0     		b	.L152
 2175              	.LVL212:
 2176              	.L157:
 448:display/OLED.c **** 	{
ARM GAS  /tmp/cc6puPNO.s 			page 85


 449:display/OLED.c **** 		if (f >= 0)
 450:display/OLED.c **** 		{
 451:display/OLED.c **** 			y--;
 2177              		.loc 1 451 4 is_stmt 1 view .LVU559
 2178              		.loc 1 451 5 is_stmt 0 view .LVU560
 2179 005a 009B     		ldr	r3, [sp]
 2180 005c 013B     		subs	r3, r3, #1
 2181 005e 1BB2     		sxth	r3, r3
 2182 0060 0093     		str	r3, [sp]
 2183              	.LVL213:
 452:display/OLED.c **** 			ddF_y += 2;
 2184              		.loc 1 452 4 is_stmt 1 view .LVU561
 2185              		.loc 1 452 10 is_stmt 0 view .LVU562
 2186 0062 039A     		ldr	r2, [sp, #12]
 2187 0064 0232     		adds	r2, r2, #2
 2188 0066 93B2     		uxth	r3, r2
 2189 0068 12B2     		sxth	r2, r2
 2190 006a 0392     		str	r2, [sp, #12]
 2191              	.LVL214:
 453:display/OLED.c **** 			f += ddF_y;
 2192              		.loc 1 453 4 is_stmt 1 view .LVU563
 2193              		.loc 1 453 6 is_stmt 0 view .LVU564
 2194 006c 1D44     		add	r5, r5, r3
 2195              	.LVL215:
 2196              		.loc 1 453 6 view .LVU565
 2197 006e 2DB2     		sxth	r5, r5
 2198              	.LVL216:
 2199              	.L153:
 454:display/OLED.c **** 		}
 455:display/OLED.c **** 
 456:display/OLED.c **** 		x++;
 2200              		.loc 1 456 3 is_stmt 1 view .LVU566
 2201              		.loc 1 456 4 is_stmt 0 view .LVU567
 2202 0070 019C     		ldr	r4, [sp, #4]
 2203 0072 0134     		adds	r4, r4, #1
 2204 0074 23B2     		sxth	r3, r4
 2205 0076 0193     		str	r3, [sp, #4]
 2206              	.LVL217:
 457:display/OLED.c **** 		ddF_x += 2;
 2207              		.loc 1 457 3 is_stmt 1 view .LVU568
 2208              		.loc 1 457 9 is_stmt 0 view .LVU569
 2209 0078 029A     		ldr	r2, [sp, #8]
 2210 007a 0232     		adds	r2, r2, #2
 2211 007c 93B2     		uxth	r3, r2
 2212 007e 12B2     		sxth	r2, r2
 2213 0080 0292     		str	r2, [sp, #8]
 2214              	.LVL218:
 458:display/OLED.c **** 		f += ddF_x;
 2215              		.loc 1 458 3 is_stmt 1 view .LVU570
 2216              		.loc 1 458 5 is_stmt 0 view .LVU571
 2217 0082 1D44     		add	r5, r5, r3
 2218              	.LVL219:
 2219              		.loc 1 458 5 view .LVU572
 2220 0084 2DB2     		sxth	r5, r5
 2221              	.LVL220:
 459:display/OLED.c **** 
 460:display/OLED.c **** 		OLED_DrawPixel(x0 + x, y0 + y);
ARM GAS  /tmp/cc6puPNO.s 			page 86


 2222              		.loc 1 460 3 is_stmt 1 view .LVU573
 2223 0086 E4B2     		uxtb	r4, r4
 2224 0088 0BEB0409 		add	r9, fp, r4
 2225 008c 5FFA89F9 		uxtb	r9, r9
 2226 0090 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 2227 0094 0AEB0608 		add	r8, r10, r6
 2228 0098 5FFA88F8 		uxtb	r8, r8
 2229 009c 4146     		mov	r1, r8
 2230 009e 4846     		mov	r0, r9
 2231 00a0 FFF7FEFF 		bl	OLED_DrawPixel
 2232              	.LVL221:
 461:display/OLED.c **** 		OLED_DrawPixel(x0 - x, y0 + y);
 2233              		.loc 1 461 3 view .LVU574
 2234 00a4 ABEB0407 		sub	r7, fp, r4
 2235 00a8 FFB2     		uxtb	r7, r7
 2236 00aa 4146     		mov	r1, r8
 2237 00ac 3846     		mov	r0, r7
 2238 00ae FFF7FEFF 		bl	OLED_DrawPixel
 2239              	.LVL222:
 462:display/OLED.c **** 		OLED_DrawPixel(x0 + x, y0 - y);
 2240              		.loc 1 462 3 view .LVU575
 2241 00b2 AAEB0608 		sub	r8, r10, r6
 2242 00b6 5FFA88F8 		uxtb	r8, r8
 2243 00ba 4146     		mov	r1, r8
 2244 00bc 4846     		mov	r0, r9
 2245 00be FFF7FEFF 		bl	OLED_DrawPixel
 2246              	.LVL223:
 463:display/OLED.c **** 		OLED_DrawPixel(x0 - x, y0 - y);
 2247              		.loc 1 463 3 view .LVU576
 2248 00c2 4146     		mov	r1, r8
 2249 00c4 3846     		mov	r0, r7
 2250 00c6 FFF7FEFF 		bl	OLED_DrawPixel
 2251              	.LVL224:
 464:display/OLED.c **** 		OLED_DrawPixel(x0 + y, y0 + x);
 2252              		.loc 1 464 3 view .LVU577
 2253 00ca 0BEB0607 		add	r7, fp, r6
 2254 00ce FFB2     		uxtb	r7, r7
 2255 00d0 0AEB0408 		add	r8, r10, r4
 2256 00d4 5FFA88F8 		uxtb	r8, r8
 2257 00d8 4146     		mov	r1, r8
 2258 00da 3846     		mov	r0, r7
 2259 00dc FFF7FEFF 		bl	OLED_DrawPixel
 2260              	.LVL225:
 465:display/OLED.c **** 		OLED_DrawPixel(x0 - y, y0 + x);
 2261              		.loc 1 465 3 view .LVU578
 2262 00e0 ABEB0606 		sub	r6, fp, r6
 2263 00e4 F6B2     		uxtb	r6, r6
 2264 00e6 4146     		mov	r1, r8
 2265 00e8 3046     		mov	r0, r6
 2266 00ea FFF7FEFF 		bl	OLED_DrawPixel
 2267              	.LVL226:
 466:display/OLED.c **** 		OLED_DrawPixel(x0 + y, y0 - x);
 2268              		.loc 1 466 3 view .LVU579
 2269 00ee AAEB0404 		sub	r4, r10, r4
 2270 00f2 E4B2     		uxtb	r4, r4
 2271 00f4 2146     		mov	r1, r4
 2272 00f6 3846     		mov	r0, r7
ARM GAS  /tmp/cc6puPNO.s 			page 87


 2273 00f8 FFF7FEFF 		bl	OLED_DrawPixel
 2274              	.LVL227:
 467:display/OLED.c **** 		OLED_DrawPixel(x0 - y, y0 - x);
 2275              		.loc 1 467 3 view .LVU580
 2276 00fc 2146     		mov	r1, r4
 2277 00fe 3046     		mov	r0, r6
 2278 0100 FFF7FEFF 		bl	OLED_DrawPixel
 2279              	.LVL228:
 2280              	.L152:
 447:display/OLED.c **** 	{
 2281              		.loc 1 447 7 view .LVU581
 2282 0104 019B     		ldr	r3, [sp, #4]
 2283 0106 009A     		ldr	r2, [sp]
 2284 0108 9342     		cmp	r3, r2
 2285 010a 02DA     		bge	.L156
 449:display/OLED.c **** 		{
 2286              		.loc 1 449 3 view .LVU582
 449:display/OLED.c **** 		{
 2287              		.loc 1 449 6 is_stmt 0 view .LVU583
 2288 010c 002D     		cmp	r5, #0
 2289 010e A4DA     		bge	.L157
 2290 0110 AEE7     		b	.L153
 2291              	.L156:
 468:display/OLED.c **** 	}
 469:display/OLED.c **** }
 2292              		.loc 1 469 1 view .LVU584
 2293 0112 05B0     		add	sp, sp, #20
 2294              	.LCFI28:
 2295              		.cfi_def_cfa_offset 36
 2296              	.LVL229:
 2297              		.loc 1 469 1 view .LVU585
 2298              		@ sp needed
 2299 0114 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2300              		.loc 1 469 1 view .LVU586
 2301              		.cfi_endproc
 2302              	.LFE789:
 2304              		.section	.text.OLED_DrawLine,"ax",%progbits
 2305              		.align	1
 2306              		.global	OLED_DrawLine
 2307              		.syntax unified
 2308              		.thumb
 2309              		.thumb_func
 2311              	OLED_DrawLine:
 2312              	.LVL230:
 2313              	.LFB791:
 470:display/OLED.c **** 
 471:display/OLED.c **** //---------------------------------------------------------------------//
 472:display/OLED.c **** void OLED_DrawCircleFill(int16_t x0, int16_t y0, int16_t r)
 473:display/OLED.c **** {
 474:display/OLED.c **** 	int16_t f = 1 - r;
 475:display/OLED.c **** 	int16_t ddF_x = 1;
 476:display/OLED.c **** 	int16_t ddF_y = -2 * r;
 477:display/OLED.c **** 	int16_t x = 0;
 478:display/OLED.c **** 	int16_t y = r;
 479:display/OLED.c **** 
 480:display/OLED.c **** 	OLED_DrawPixel(x0, y0 + r);
 481:display/OLED.c **** 	OLED_DrawPixel(x0, y0 - r);
ARM GAS  /tmp/cc6puPNO.s 			page 88


 482:display/OLED.c **** 	OLED_DrawPixel(x0 + r, y0);
 483:display/OLED.c **** 	OLED_DrawPixel(x0 - r, y0);
 484:display/OLED.c **** 	OLED_DrawLine(x0 - r, y0, x0 + r, y0);
 485:display/OLED.c **** 
 486:display/OLED.c **** 	while (x < y) 
 487:display/OLED.c **** 	{
 488:display/OLED.c **** 		if (f >= 0) 
 489:display/OLED.c **** 		{
 490:display/OLED.c **** 			y--;
 491:display/OLED.c **** 			ddF_y += 2;
 492:display/OLED.c **** 			f += ddF_y;
 493:display/OLED.c **** 		}
 494:display/OLED.c **** 		x++;
 495:display/OLED.c **** 		ddF_x += 2;
 496:display/OLED.c **** 		f += ddF_x;
 497:display/OLED.c **** 
 498:display/OLED.c **** 		OLED_DrawLine(x0 - x, y0 + y, x0 + x, y0 + y);
 499:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 500:display/OLED.c **** 
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 + x, x0 - y, y0 + x);
 502:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 503:display/OLED.c **** 	}
 504:display/OLED.c **** }
 505:display/OLED.c **** 
 506:display/OLED.c **** //---------------------------------------------------------------------//
 507:display/OLED.c **** void OLED_DrawLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1)
 508:display/OLED.c **** {
 2314              		.loc 1 508 1 is_stmt 1 view -0
 2315              		.cfi_startproc
 2316              		@ args = 0, pretend = 0, frame = 8
 2317              		@ frame_needed = 0, uses_anonymous_args = 0
 2318              		.loc 1 508 1 is_stmt 0 view .LVU588
 2319 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2320              	.LCFI29:
 2321              		.cfi_def_cfa_offset 36
 2322              		.cfi_offset 4, -36
 2323              		.cfi_offset 5, -32
 2324              		.cfi_offset 6, -28
 2325              		.cfi_offset 7, -24
 2326              		.cfi_offset 8, -20
 2327              		.cfi_offset 9, -16
 2328              		.cfi_offset 10, -12
 2329              		.cfi_offset 11, -8
 2330              		.cfi_offset 14, -4
 2331 0004 83B0     		sub	sp, sp, #12
 2332              	.LCFI30:
 2333              		.cfi_def_cfa_offset 48
 2334 0006 0F46     		mov	r7, r1
 2335 0008 1646     		mov	r6, r2
 2336 000a 1C46     		mov	r4, r3
 509:display/OLED.c **** 	uint16_t curr_dx = ABS(x1 - x0);
 2337              		.loc 1 509 2 is_stmt 1 view .LVU589
 2338              		.loc 1 509 21 is_stmt 0 view .LVU590
 2339 000c A2EB0008 		sub	r8, r2, r0
 2340 0010 B8F1000F 		cmp	r8, #0
 2341 0014 B8BF     		it	lt
 2342 0016 C8F10008 		rsblt	r8, r8, #0
ARM GAS  /tmp/cc6puPNO.s 			page 89


 2343              		.loc 1 509 11 view .LVU591
 2344 001a 1FFA88F8 		uxth	r8, r8
 2345              	.LVL231:
 510:display/OLED.c **** 	uint16_t curr_dy = ABS(y1 - y0);
 2346              		.loc 1 510 2 is_stmt 1 view .LVU592
 2347              		.loc 1 510 21 is_stmt 0 view .LVU593
 2348 001e A3EB0109 		sub	r9, r3, r1
 2349 0022 B9F1000F 		cmp	r9, #0
 2350 0026 B8BF     		it	lt
 2351 0028 C9F10009 		rsblt	r9, r9, #0
 2352              		.loc 1 510 11 view .LVU594
 2353 002c 1FFA89F9 		uxth	r9, r9
 2354              	.LVL232:
 511:display/OLED.c **** 	uint8_t step = curr_dy > curr_dx;
 2355              		.loc 1 511 2 is_stmt 1 view .LVU595
 512:display/OLED.c **** 
 513:display/OLED.c **** 	if (step)
 2356              		.loc 1 513 2 view .LVU596
 2357              		.loc 1 513 5 is_stmt 0 view .LVU597
 2358 0030 C845     		cmp	r8, r9
 2359 0032 14D3     		bcc	.L167
 510:display/OLED.c **** 	uint8_t step = curr_dy > curr_dx;
 2360              		.loc 1 510 11 view .LVU598
 2361 0034 CA46     		mov	r10, r9
 509:display/OLED.c **** 	uint16_t curr_dy = ABS(y1 - y0);
 2362              		.loc 1 509 11 view .LVU599
 2363 0036 C346     		mov	fp, r8
 2364              		.loc 1 513 5 view .LVU600
 2365 0038 1446     		mov	r4, r2
 2366 003a 1E46     		mov	r6, r3
 2367 003c 0746     		mov	r7, r0
 2368 003e 0846     		mov	r0, r1
 2369              	.LVL233:
 2370              	.L159:
 514:display/OLED.c **** 	{
 515:display/OLED.c **** 		SWAP(x0, y0);
 516:display/OLED.c **** 		SWAP(x1, y1);
 517:display/OLED.c **** 		SWAP(curr_dx, curr_dy);
 2371              		.loc 1 517 25 is_stmt 1 discriminator 1 view .LVU601
 518:display/OLED.c **** 	}
 519:display/OLED.c **** 
 520:display/OLED.c **** 	if (x0 > x1)
 2372              		.loc 1 520 2 discriminator 1 view .LVU602
 2373              		.loc 1 520 5 is_stmt 0 discriminator 1 view .LVU603
 2374 0040 A742     		cmp	r7, r4
 2375 0042 05DC     		bgt	.L160
 2376              		.loc 1 520 5 view .LVU604
 2377 0044 3346     		mov	r3, r6
 2378 0046 0646     		mov	r6, r0
 2379              	.LVL234:
 2380              		.loc 1 520 5 view .LVU605
 2381 0048 1846     		mov	r0, r3
 2382              	.LVL235:
 2383              		.loc 1 520 5 view .LVU606
 2384 004a 2346     		mov	r3, r4
 2385 004c 3C46     		mov	r4, r7
 2386              	.LVL236:
ARM GAS  /tmp/cc6puPNO.s 			page 90


 2387              		.loc 1 520 5 view .LVU607
 2388 004e 1F46     		mov	r7, r3
 2389              	.LVL237:
 2390              	.L160:
 521:display/OLED.c **** 	{
 522:display/OLED.c **** 		SWAP(x0, x1);
 523:display/OLED.c **** 		SWAP(y0, y1);
 2391              		.loc 1 523 15 is_stmt 1 discriminator 1 view .LVU608
 524:display/OLED.c **** 	}
 525:display/OLED.c **** 
 526:display/OLED.c **** 	int16_t y_step = (y0 < y1) ? 1 : -1;
 2392              		.loc 1 526 2 discriminator 1 view .LVU609
 2393              		.loc 1 526 10 is_stmt 0 discriminator 1 view .LVU610
 2394 0050 8642     		cmp	r6, r0
 2395 0052 07DA     		bge	.L168
 2396              		.loc 1 526 10 view .LVU611
 2397 0054 0123     		movs	r3, #1
 2398 0056 0193     		str	r3, [sp, #4]
 2399              	.L161:
 2400              	.LVL238:
 527:display/OLED.c **** 	int16_t err = curr_dx >> 1;
 2401              		.loc 1 527 2 is_stmt 1 discriminator 4 view .LVU612
 2402              		.loc 1 527 10 is_stmt 0 discriminator 4 view .LVU613
 2403 0058 4FEA5B05 		lsr	r5, fp, #1
 2404              	.LVL239:
 528:display/OLED.c **** 
 529:display/OLED.c **** 	for ( ; x0 <= x1; x0++)
 2405              		.loc 1 529 2 is_stmt 1 discriminator 4 view .LVU614
 2406 005c 12E0     		b	.L162
 2407              	.LVL240:
 2408              	.L167:
 517:display/OLED.c **** 	}
 2409              		.loc 1 517 3 is_stmt 0 view .LVU615
 2410 005e C246     		mov	r10, r8
 2411 0060 CB46     		mov	fp, r9
 2412 0062 EDE7     		b	.L159
 2413              	.LVL241:
 2414              	.L168:
 526:display/OLED.c **** 	int16_t err = curr_dx >> 1;
 2415              		.loc 1 526 10 view .LVU616
 2416 0064 4FF0FF33 		mov	r3, #-1
 2417 0068 0193     		str	r3, [sp, #4]
 2418 006a F5E7     		b	.L161
 2419              	.LVL242:
 2420              	.L163:
 530:display/OLED.c **** 	{
 531:display/OLED.c **** 		if (step)	
 532:display/OLED.c **** 		{	OLED_DrawPixel(y0, x0);	}
 533:display/OLED.c **** 		else		
 534:display/OLED.c **** 		{	OLED_DrawPixel(x0, y0);	}
 2421              		.loc 1 534 5 is_stmt 1 view .LVU617
 2422 006c F1B2     		uxtb	r1, r6
 2423 006e E0B2     		uxtb	r0, r4
 2424 0070 FFF7FEFF 		bl	OLED_DrawPixel
 2425              	.LVL243:
 2426              	.L164:
 535:display/OLED.c **** 		
ARM GAS  /tmp/cc6puPNO.s 			page 91


 536:display/OLED.c **** 		err -= curr_dy;
 2427              		.loc 1 536 3 view .LVU618
 2428              		.loc 1 536 7 is_stmt 0 view .LVU619
 2429 0074 A5EB0A05 		sub	r5, r5, r10
 2430              	.LVL244:
 2431              		.loc 1 536 7 view .LVU620
 2432 0078 ABB2     		uxth	r3, r5
 2433 007a 2DB2     		sxth	r5, r5
 2434              	.LVL245:
 537:display/OLED.c **** 		if (err < 0)
 2435              		.loc 1 537 3 is_stmt 1 view .LVU621
 2436              		.loc 1 537 6 is_stmt 0 view .LVU622
 2437 007c 002D     		cmp	r5, #0
 2438 007e 0ADB     		blt	.L170
 2439              	.L165:
 529:display/OLED.c **** 	{
 2440              		.loc 1 529 20 is_stmt 1 view .LVU623
 529:display/OLED.c **** 	{
 2441              		.loc 1 529 22 is_stmt 0 view .LVU624
 2442 0080 0134     		adds	r4, r4, #1
 2443              	.LVL246:
 529:display/OLED.c **** 	{
 2444              		.loc 1 529 22 view .LVU625
 2445 0082 24B2     		sxth	r4, r4
 2446              	.LVL247:
 2447              	.L162:
 529:display/OLED.c **** 	{
 2448              		.loc 1 529 10 is_stmt 1 discriminator 1 view .LVU626
 529:display/OLED.c **** 	{
 2449              		.loc 1 529 2 is_stmt 0 discriminator 1 view .LVU627
 2450 0084 BC42     		cmp	r4, r7
 2451 0086 0CDC     		bgt	.L171
 531:display/OLED.c **** 		{	OLED_DrawPixel(y0, x0);	}
 2452              		.loc 1 531 3 is_stmt 1 view .LVU628
 531:display/OLED.c **** 		{	OLED_DrawPixel(y0, x0);	}
 2453              		.loc 1 531 6 is_stmt 0 view .LVU629
 2454 0088 C845     		cmp	r8, r9
 2455 008a EFD2     		bcs	.L163
 532:display/OLED.c **** 		else		
 2456              		.loc 1 532 5 is_stmt 1 view .LVU630
 2457 008c E1B2     		uxtb	r1, r4
 2458 008e F0B2     		uxtb	r0, r6
 2459 0090 FFF7FEFF 		bl	OLED_DrawPixel
 2460              	.LVL248:
 2461 0094 EEE7     		b	.L164
 2462              	.L170:
 538:display/OLED.c **** 		{
 539:display/OLED.c **** 			y0 += y_step;
 2463              		.loc 1 539 4 view .LVU631
 2464              		.loc 1 539 7 is_stmt 0 view .LVU632
 2465 0096 019A     		ldr	r2, [sp, #4]
 2466 0098 1644     		add	r6, r6, r2
 2467              	.LVL249:
 2468              		.loc 1 539 7 view .LVU633
 2469 009a 36B2     		sxth	r6, r6
 2470              	.LVL250:
 540:display/OLED.c **** 			err += curr_dx;
ARM GAS  /tmp/cc6puPNO.s 			page 92


 2471              		.loc 1 540 4 is_stmt 1 view .LVU634
 2472              		.loc 1 540 8 is_stmt 0 view .LVU635
 2473 009c 5B44     		add	r3, r3, fp
 2474 009e 1DB2     		sxth	r5, r3
 2475              	.LVL251:
 2476              		.loc 1 540 8 view .LVU636
 2477 00a0 EEE7     		b	.L165
 2478              	.L171:
 541:display/OLED.c **** 		}
 542:display/OLED.c **** 	}
 543:display/OLED.c **** }
 2479              		.loc 1 543 1 view .LVU637
 2480 00a2 03B0     		add	sp, sp, #12
 2481              	.LCFI31:
 2482              		.cfi_def_cfa_offset 36
 2483              		@ sp needed
 2484 00a4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2485              		.loc 1 543 1 view .LVU638
 2486              		.cfi_endproc
 2487              	.LFE791:
 2489              		.section	.text.OLED_DrawTriangle,"ax",%progbits
 2490              		.align	1
 2491              		.global	OLED_DrawTriangle
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2496              	OLED_DrawTriangle:
 2497              	.LVL252:
 2498              	.LFB787:
 359:display/OLED.c **** 	OLED_DrawLine(x1, y1, x2, y2);
 2499              		.loc 1 359 1 is_stmt 1 view -0
 2500              		.cfi_startproc
 2501              		@ args = 8, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 359:display/OLED.c **** 	OLED_DrawLine(x1, y1, x2, y2);
 2503              		.loc 1 359 1 is_stmt 0 view .LVU640
 2504 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2505              	.LCFI32:
 2506              		.cfi_def_cfa_offset 32
 2507              		.cfi_offset 3, -32
 2508              		.cfi_offset 4, -28
 2509              		.cfi_offset 5, -24
 2510              		.cfi_offset 6, -20
 2511              		.cfi_offset 7, -16
 2512              		.cfi_offset 8, -12
 2513              		.cfi_offset 9, -8
 2514              		.cfi_offset 14, -4
 2515 0004 0446     		mov	r4, r0
 2516 0006 0D46     		mov	r5, r1
 2517 0008 1646     		mov	r6, r2
 2518 000a 1F46     		mov	r7, r3
 2519 000c BDF92080 		ldrsh	r8, [sp, #32]
 2520 0010 BDF92490 		ldrsh	r9, [sp, #36]
 360:display/OLED.c **** 	OLED_DrawLine(x2, y2, x3, y3);
 2521              		.loc 1 360 2 is_stmt 1 view .LVU641
 2522 0014 FFF7FEFF 		bl	OLED_DrawLine
 2523              	.LVL253:
ARM GAS  /tmp/cc6puPNO.s 			page 93


 361:display/OLED.c **** 	OLED_DrawLine(x3, y3, x1, y1);
 2524              		.loc 1 361 2 view .LVU642
 2525 0018 4B46     		mov	r3, r9
 2526 001a 4246     		mov	r2, r8
 2527 001c 3946     		mov	r1, r7
 2528 001e 3046     		mov	r0, r6
 2529 0020 FFF7FEFF 		bl	OLED_DrawLine
 2530              	.LVL254:
 362:display/OLED.c **** }
 2531              		.loc 1 362 2 view .LVU643
 2532 0024 2B46     		mov	r3, r5
 2533 0026 2246     		mov	r2, r4
 2534 0028 4946     		mov	r1, r9
 2535 002a 4046     		mov	r0, r8
 2536 002c FFF7FEFF 		bl	OLED_DrawLine
 2537              	.LVL255:
 363:display/OLED.c **** 
 2538              		.loc 1 363 1 is_stmt 0 view .LVU644
 2539 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 363:display/OLED.c **** 
 2540              		.loc 1 363 1 view .LVU645
 2541              		.cfi_endproc
 2542              	.LFE787:
 2544              		.section	.text.OLED_DrawTriangleFill,"ax",%progbits
 2545              		.align	1
 2546              		.global	OLED_DrawTriangleFill
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2551              	OLED_DrawTriangleFill:
 2552              	.LVL256:
 2553              	.LFB788:
 367:display/OLED.c **** 	int16_t delta_x = 0, delta_y = 0;
 2554              		.loc 1 367 1 is_stmt 1 view -0
 2555              		.cfi_startproc
 2556              		@ args = 8, pretend = 0, frame = 16
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 367:display/OLED.c **** 	int16_t delta_x = 0, delta_y = 0;
 2558              		.loc 1 367 1 is_stmt 0 view .LVU647
 2559 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2560              	.LCFI33:
 2561              		.cfi_def_cfa_offset 36
 2562              		.cfi_offset 4, -36
 2563              		.cfi_offset 5, -32
 2564              		.cfi_offset 6, -28
 2565              		.cfi_offset 7, -24
 2566              		.cfi_offset 8, -20
 2567              		.cfi_offset 9, -16
 2568              		.cfi_offset 10, -12
 2569              		.cfi_offset 11, -8
 2570              		.cfi_offset 14, -4
 2571 0004 85B0     		sub	sp, sp, #20
 2572              	.LCFI34:
 2573              		.cfi_def_cfa_offset 56
 2574 0006 0446     		mov	r4, r0
 2575 0008 0D46     		mov	r5, r1
 2576 000a BDF93810 		ldrsh	r1, [sp, #56]
ARM GAS  /tmp/cc6puPNO.s 			page 94


 2577              	.LVL257:
 367:display/OLED.c **** 	int16_t delta_x = 0, delta_y = 0;
 2578              		.loc 1 367 1 view .LVU648
 2579 000e 0091     		str	r1, [sp]
 2580 0010 BDF93C10 		ldrsh	r1, [sp, #60]
 2581 0014 0191     		str	r1, [sp, #4]
 368:display/OLED.c **** 	int16_t	x = 0, y = 0, x_inc_1 = 0, x_inc_2 = 0, y_inc_1 = 0, y_inc_2 = 0;
 2582              		.loc 1 368 2 is_stmt 1 view .LVU649
 2583              	.LVL258:
 369:display/OLED.c **** 	int16_t	den = 0, num = 0, num_add = 0, num_pixels = 0;
 2584              		.loc 1 369 2 view .LVU650
 370:display/OLED.c **** 
 2585              		.loc 1 370 2 view .LVU651
 372:display/OLED.c **** 	delta_y = ABS(y2 - y1);
 2586              		.loc 1 372 2 view .LVU652
 372:display/OLED.c **** 	delta_y = ABS(y2 - y1);
 2587              		.loc 1 372 12 is_stmt 0 view .LVU653
 2588 0016 A2EB0008 		sub	r8, r2, r0
 2589 001a B8F1000F 		cmp	r8, #0
 2590 001e B8BF     		it	lt
 2591 0020 C8F10008 		rsblt	r8, r8, #0
 372:display/OLED.c **** 	delta_y = ABS(y2 - y1);
 2592              		.loc 1 372 10 view .LVU654
 2593 0024 0FFA88F8 		sxth	r8, r8
 2594              	.LVL259:
 373:display/OLED.c **** 	x = x1;
 2595              		.loc 1 373 2 is_stmt 1 view .LVU655
 373:display/OLED.c **** 	x = x1;
 2596              		.loc 1 373 12 is_stmt 0 view .LVU656
 2597 0028 A3EB0509 		sub	r9, r3, r5
 2598 002c B9F1000F 		cmp	r9, #0
 2599 0030 B8BF     		it	lt
 2600 0032 C9F10009 		rsblt	r9, r9, #0
 373:display/OLED.c **** 	x = x1;
 2601              		.loc 1 373 10 view .LVU657
 2602 0036 0FFA89F9 		sxth	r9, r9
 2603              	.LVL260:
 374:display/OLED.c **** 	y = y1;
 2604              		.loc 1 374 2 is_stmt 1 view .LVU658
 375:display/OLED.c **** 
 2605              		.loc 1 375 2 view .LVU659
 377:display/OLED.c **** 	{	
 2606              		.loc 1 377 2 view .LVU660
 377:display/OLED.c **** 	{	
 2607              		.loc 1 377 5 is_stmt 0 view .LVU661
 2608 003a 8242     		cmp	r2, r0
 2609 003c 12DB     		blt	.L182
 379:display/OLED.c **** 		x_inc_2 = 1;	
 2610              		.loc 1 379 11 view .LVU662
 2611 003e 0122     		movs	r2, #1
 2612              	.LVL261:
 379:display/OLED.c **** 		x_inc_2 = 1;	
 2613              		.loc 1 379 11 view .LVU663
 2614 0040 0292     		str	r2, [sp, #8]
 2615              	.L175:
 2616              	.LVL262:
 388:display/OLED.c **** 	{	
ARM GAS  /tmp/cc6puPNO.s 			page 95


 2617              		.loc 1 388 2 is_stmt 1 view .LVU664
 388:display/OLED.c **** 	{	
 2618              		.loc 1 388 5 is_stmt 0 view .LVU665
 2619 0042 AB42     		cmp	r3, r5
 2620 0044 12DB     		blt	.L183
 390:display/OLED.c **** 		y_inc_2 = 1;	
 2621              		.loc 1 390 11 view .LVU666
 2622 0046 0123     		movs	r3, #1
 2623              	.LVL263:
 390:display/OLED.c **** 		y_inc_2 = 1;	
 2624              		.loc 1 390 11 view .LVU667
 2625 0048 0393     		str	r3, [sp, #12]
 2626              	.L176:
 2627              	.LVL264:
 399:display/OLED.c **** 	{
 2628              		.loc 1 399 2 is_stmt 1 view .LVU668
 399:display/OLED.c **** 	{
 2629              		.loc 1 399 5 is_stmt 0 view .LVU669
 2630 004a C845     		cmp	r8, r9
 2631 004c 12DB     		blt	.L177
 401:display/OLED.c **** 		y_inc_2 = 0;
 2632              		.loc 1 401 3 is_stmt 1 view .LVU670
 2633              	.LVL265:
 402:display/OLED.c **** 		den = delta_x;
 2634              		.loc 1 402 3 view .LVU671
 403:display/OLED.c **** 		num = delta_x / 2;
 2635              		.loc 1 403 3 view .LVU672
 404:display/OLED.c **** 		num_add = delta_y;
 2636              		.loc 1 404 3 view .LVU673
 404:display/OLED.c **** 		num_add = delta_y;
 2637              		.loc 1 404 7 is_stmt 0 view .LVU674
 2638 004e 08EBD876 		add	r6, r8, r8, lsr #31
 2639 0052 46F34F06 		sbfx	r6, r6, #1, #16
 2640              	.LVL266:
 405:display/OLED.c **** 		num_pixels = delta_x;
 2641              		.loc 1 405 3 is_stmt 1 view .LVU675
 406:display/OLED.c **** 	}
 2642              		.loc 1 406 3 view .LVU676
 406:display/OLED.c **** 	}
 2643              		.loc 1 406 3 is_stmt 0 view .LVU677
 2644 0056 DDF808A0 		ldr	r10, [sp, #8]
 402:display/OLED.c **** 		den = delta_x;
 2645              		.loc 1 402 11 view .LVU678
 2646 005a 0023     		movs	r3, #0
 2647 005c 0293     		str	r3, [sp, #8]
 2648              	.LVL267:
 401:display/OLED.c **** 		y_inc_2 = 0;
 2649              		.loc 1 401 11 view .LVU679
 2650 005e 9B46     		mov	fp, r3
 2651              	.LVL268:
 2652              	.L178:
 418:display/OLED.c **** 	{
 2653              		.loc 1 418 2 is_stmt 1 view .LVU680
 2654              	.LBB74:
 418:display/OLED.c **** 	{
 2655              		.loc 1 418 7 view .LVU681
 418:display/OLED.c **** 	{
ARM GAS  /tmp/cc6puPNO.s 			page 96


 2656              		.loc 1 418 15 is_stmt 0 view .LVU682
 2657 0060 0027     		movs	r7, #0
 418:display/OLED.c **** 	{
 2658              		.loc 1 418 2 view .LVU683
 2659 0062 1AE0     		b	.L179
 2660              	.LVL269:
 2661              	.L182:
 418:display/OLED.c **** 	{
 2662              		.loc 1 418 2 view .LVU684
 2663              	.LBE74:
 384:display/OLED.c **** 		x_inc_2 = -1;	
 2664              		.loc 1 384 11 view .LVU685
 2665 0064 4FF0FF32 		mov	r2, #-1
 2666              	.LVL270:
 384:display/OLED.c **** 		x_inc_2 = -1;	
 2667              		.loc 1 384 11 view .LVU686
 2668 0068 0292     		str	r2, [sp, #8]
 2669 006a EAE7     		b	.L175
 2670              	.LVL271:
 2671              	.L183:
 395:display/OLED.c **** 		y_inc_2 = -1;	
 2672              		.loc 1 395 11 view .LVU687
 2673 006c 4FF0FF33 		mov	r3, #-1
 2674              	.LVL272:
 395:display/OLED.c **** 		y_inc_2 = -1;	
 2675              		.loc 1 395 11 view .LVU688
 2676 0070 0393     		str	r3, [sp, #12]
 2677 0072 EAE7     		b	.L176
 2678              	.LVL273:
 2679              	.L177:
 410:display/OLED.c **** 		y_inc_1 = 0;
 2680              		.loc 1 410 3 is_stmt 1 view .LVU689
 411:display/OLED.c **** 		den = delta_y;
 2681              		.loc 1 411 3 view .LVU690
 412:display/OLED.c **** 		num = delta_y / 2;
 2682              		.loc 1 412 3 view .LVU691
 413:display/OLED.c **** 		num_add = delta_x;
 2683              		.loc 1 413 3 view .LVU692
 413:display/OLED.c **** 		num_add = delta_x;
 2684              		.loc 1 413 7 is_stmt 0 view .LVU693
 2685 0074 09EBD976 		add	r6, r9, r9, lsr #31
 2686 0078 46F34F06 		sbfx	r6, r6, #1, #16
 2687              	.LVL274:
 414:display/OLED.c **** 		num_pixels = delta_y;
 2688              		.loc 1 414 3 is_stmt 1 view .LVU694
 415:display/OLED.c **** 	}
 2689              		.loc 1 415 3 view .LVU695
 413:display/OLED.c **** 		num_add = delta_x;
 2690              		.loc 1 413 7 is_stmt 0 view .LVU696
 2691 007c 4346     		mov	r3, r8
 412:display/OLED.c **** 		num = delta_y / 2;
 2692              		.loc 1 412 7 view .LVU697
 2693 007e C846     		mov	r8, r9
 2694              	.LVL275:
 414:display/OLED.c **** 		num_pixels = delta_y;
 2695              		.loc 1 414 11 view .LVU698
 2696 0080 9946     		mov	r9, r3
ARM GAS  /tmp/cc6puPNO.s 			page 97


 2697              	.LVL276:
 413:display/OLED.c **** 		num_add = delta_x;
 2698              		.loc 1 413 7 view .LVU699
 2699 0082 DDF80CB0 		ldr	fp, [sp, #12]
 411:display/OLED.c **** 		den = delta_y;
 2700              		.loc 1 411 11 view .LVU700
 2701 0086 0023     		movs	r3, #0
 2702              	.LVL277:
 411:display/OLED.c **** 		den = delta_y;
 2703              		.loc 1 411 11 view .LVU701
 2704 0088 0393     		str	r3, [sp, #12]
 2705              	.LVL278:
 410:display/OLED.c **** 		y_inc_1 = 0;
 2706              		.loc 1 410 11 view .LVU702
 2707 008a 9A46     		mov	r10, r3
 2708 008c E8E7     		b	.L178
 2709              	.LVL279:
 2710              	.L180:
 2711              	.LBB75:
 428:display/OLED.c **** 		y += y_inc_2;
 2712              		.loc 1 428 3 is_stmt 1 discriminator 2 view .LVU703
 428:display/OLED.c **** 		y += y_inc_2;
 2713              		.loc 1 428 5 is_stmt 0 discriminator 2 view .LVU704
 2714 008e 5444     		add	r4, r4, r10
 2715              	.LVL280:
 428:display/OLED.c **** 		y += y_inc_2;
 2716              		.loc 1 428 5 discriminator 2 view .LVU705
 2717 0090 24B2     		sxth	r4, r4
 2718              	.LVL281:
 429:display/OLED.c **** 	}
 2719              		.loc 1 429 3 is_stmt 1 discriminator 2 view .LVU706
 429:display/OLED.c **** 	}
 2720              		.loc 1 429 5 is_stmt 0 discriminator 2 view .LVU707
 2721 0092 5D44     		add	r5, r5, fp
 2722              	.LVL282:
 429:display/OLED.c **** 	}
 2723              		.loc 1 429 5 discriminator 2 view .LVU708
 2724 0094 2DB2     		sxth	r5, r5
 2725              	.LVL283:
 418:display/OLED.c **** 	{
 2726              		.loc 1 418 55 is_stmt 1 discriminator 2 view .LVU709
 418:display/OLED.c **** 	{
 2727              		.loc 1 418 64 is_stmt 0 discriminator 2 view .LVU710
 2728 0096 0137     		adds	r7, r7, #1
 2729              	.LVL284:
 418:display/OLED.c **** 	{
 2730              		.loc 1 418 64 discriminator 2 view .LVU711
 2731 0098 3FB2     		sxth	r7, r7
 2732              	.LVL285:
 2733              	.L179:
 418:display/OLED.c **** 	{
 2734              		.loc 1 418 30 is_stmt 1 discriminator 1 view .LVU712
 418:display/OLED.c **** 	{
 2735              		.loc 1 418 2 is_stmt 0 discriminator 1 view .LVU713
 2736 009a B845     		cmp	r8, r7
 2737 009c 14DB     		blt	.L185
 420:display/OLED.c **** 		num += num_add;
ARM GAS  /tmp/cc6puPNO.s 			page 98


 2738              		.loc 1 420 3 is_stmt 1 view .LVU714
 2739 009e 019B     		ldr	r3, [sp, #4]
 2740 00a0 009A     		ldr	r2, [sp]
 2741 00a2 2946     		mov	r1, r5
 2742 00a4 2046     		mov	r0, r4
 2743 00a6 FFF7FEFF 		bl	OLED_DrawLine
 2744              	.LVL286:
 421:display/OLED.c **** 		if (num >= den)
 2745              		.loc 1 421 3 view .LVU715
 421:display/OLED.c **** 		if (num >= den)
 2746              		.loc 1 421 7 is_stmt 0 view .LVU716
 2747 00aa 4E44     		add	r6, r6, r9
 2748              	.LVL287:
 421:display/OLED.c **** 		if (num >= den)
 2749              		.loc 1 421 7 view .LVU717
 2750 00ac B3B2     		uxth	r3, r6
 2751 00ae 36B2     		sxth	r6, r6
 2752              	.LVL288:
 422:display/OLED.c **** 		{
 2753              		.loc 1 422 3 is_stmt 1 view .LVU718
 422:display/OLED.c **** 		{
 2754              		.loc 1 422 6 is_stmt 0 view .LVU719
 2755 00b0 B045     		cmp	r8, r6
 2756 00b2 ECDC     		bgt	.L180
 424:display/OLED.c **** 			x += x_inc_1;
 2757              		.loc 1 424 4 is_stmt 1 view .LVU720
 424:display/OLED.c **** 			x += x_inc_1;
 2758              		.loc 1 424 8 is_stmt 0 view .LVU721
 2759 00b4 A3EB0803 		sub	r3, r3, r8
 2760 00b8 1EB2     		sxth	r6, r3
 2761              	.LVL289:
 425:display/OLED.c **** 			y += y_inc_1;
 2762              		.loc 1 425 4 is_stmt 1 view .LVU722
 425:display/OLED.c **** 			y += y_inc_1;
 2763              		.loc 1 425 6 is_stmt 0 view .LVU723
 2764 00ba 029B     		ldr	r3, [sp, #8]
 2765 00bc 1C44     		add	r4, r4, r3
 2766              	.LVL290:
 425:display/OLED.c **** 			y += y_inc_1;
 2767              		.loc 1 425 6 view .LVU724
 2768 00be 24B2     		sxth	r4, r4
 2769              	.LVL291:
 426:display/OLED.c **** 		}
 2770              		.loc 1 426 4 is_stmt 1 view .LVU725
 426:display/OLED.c **** 		}
 2771              		.loc 1 426 6 is_stmt 0 view .LVU726
 2772 00c0 039B     		ldr	r3, [sp, #12]
 2773 00c2 1D44     		add	r5, r5, r3
 2774              	.LVL292:
 426:display/OLED.c **** 		}
 2775              		.loc 1 426 6 view .LVU727
 2776 00c4 2DB2     		sxth	r5, r5
 2777              	.LVL293:
 426:display/OLED.c **** 		}
 2778              		.loc 1 426 6 view .LVU728
 2779 00c6 E2E7     		b	.L180
 2780              	.L185:
ARM GAS  /tmp/cc6puPNO.s 			page 99


 426:display/OLED.c **** 		}
 2781              		.loc 1 426 6 view .LVU729
 2782              	.LBE75:
 431:display/OLED.c **** 
 2783              		.loc 1 431 1 view .LVU730
 2784 00c8 05B0     		add	sp, sp, #20
 2785              	.LCFI35:
 2786              		.cfi_def_cfa_offset 36
 2787              		@ sp needed
 2788 00ca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 431:display/OLED.c **** 
 2789              		.loc 1 431 1 view .LVU731
 2790              		.cfi_endproc
 2791              	.LFE788:
 2793              		.section	.text.OLED_DrawCircleFill,"ax",%progbits
 2794              		.align	1
 2795              		.global	OLED_DrawCircleFill
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2800              	OLED_DrawCircleFill:
 2801              	.LVL294:
 2802              	.LFB790:
 473:display/OLED.c **** 	int16_t f = 1 - r;
 2803              		.loc 1 473 1 is_stmt 1 view -0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 16
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 473:display/OLED.c **** 	int16_t f = 1 - r;
 2807              		.loc 1 473 1 is_stmt 0 view .LVU733
 2808 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2809              	.LCFI36:
 2810              		.cfi_def_cfa_offset 36
 2811              		.cfi_offset 4, -36
 2812              		.cfi_offset 5, -32
 2813              		.cfi_offset 6, -28
 2814              		.cfi_offset 7, -24
 2815              		.cfi_offset 8, -20
 2816              		.cfi_offset 9, -16
 2817              		.cfi_offset 10, -12
 2818              		.cfi_offset 11, -8
 2819              		.cfi_offset 14, -4
 2820 0004 85B0     		sub	sp, sp, #20
 2821              	.LCFI37:
 2822              		.cfi_def_cfa_offset 56
 2823 0006 8346     		mov	fp, r0
 2824 0008 8946     		mov	r9, r1
 2825 000a 0391     		str	r1, [sp, #12]
 2826 000c 0092     		str	r2, [sp]
 474:display/OLED.c **** 	int16_t ddF_x = 1;
 2827              		.loc 1 474 2 is_stmt 1 view .LVU734
 474:display/OLED.c **** 	int16_t ddF_x = 1;
 2828              		.loc 1 474 16 is_stmt 0 view .LVU735
 2829 000e 94B2     		uxth	r4, r2
 2830 0010 C4F10105 		rsb	r5, r4, #1
 474:display/OLED.c **** 	int16_t ddF_x = 1;
 2831              		.loc 1 474 10 view .LVU736
ARM GAS  /tmp/cc6puPNO.s 			page 100


 2832 0014 2DB2     		sxth	r5, r5
 2833              	.LVL295:
 475:display/OLED.c **** 	int16_t ddF_y = -2 * r;
 2834              		.loc 1 475 2 is_stmt 1 view .LVU737
 476:display/OLED.c **** 	int16_t x = 0;
 2835              		.loc 1 476 2 view .LVU738
 476:display/OLED.c **** 	int16_t x = 0;
 2836              		.loc 1 476 21 is_stmt 0 view .LVU739
 2837 0016 C4EBC433 		rsb	r3, r4, r4, lsl #15
 2838 001a 5B00     		lsls	r3, r3, #1
 476:display/OLED.c **** 	int16_t x = 0;
 2839              		.loc 1 476 10 view .LVU740
 2840 001c 1BB2     		sxth	r3, r3
 2841 001e 0293     		str	r3, [sp, #8]
 2842              	.LVL296:
 477:display/OLED.c **** 	int16_t y = r;
 2843              		.loc 1 477 2 is_stmt 1 view .LVU741
 478:display/OLED.c **** 
 2844              		.loc 1 478 2 view .LVU742
 480:display/OLED.c **** 	OLED_DrawPixel(x0, y0 - r);
 2845              		.loc 1 480 2 view .LVU743
 2846 0020 C6B2     		uxtb	r6, r0
 2847 0022 CFB2     		uxtb	r7, r1
 2848 0024 5FFA82F8 		uxtb	r8, r2
 2849 0028 07EB0801 		add	r1, r7, r8
 2850              	.LVL297:
 480:display/OLED.c **** 	OLED_DrawPixel(x0, y0 - r);
 2851              		.loc 1 480 2 is_stmt 0 view .LVU744
 2852 002c C9B2     		uxtb	r1, r1
 2853 002e 3046     		mov	r0, r6
 2854              	.LVL298:
 480:display/OLED.c **** 	OLED_DrawPixel(x0, y0 - r);
 2855              		.loc 1 480 2 view .LVU745
 2856 0030 FFF7FEFF 		bl	OLED_DrawPixel
 2857              	.LVL299:
 481:display/OLED.c **** 	OLED_DrawPixel(x0 + r, y0);
 2858              		.loc 1 481 2 is_stmt 1 view .LVU746
 2859 0034 A7EB0801 		sub	r1, r7, r8
 2860 0038 C9B2     		uxtb	r1, r1
 2861 003a 3046     		mov	r0, r6
 2862 003c FFF7FEFF 		bl	OLED_DrawPixel
 2863              	.LVL300:
 482:display/OLED.c **** 	OLED_DrawPixel(x0 - r, y0);
 2864              		.loc 1 482 2 view .LVU747
 2865 0040 06EB0800 		add	r0, r6, r8
 2866 0044 3946     		mov	r1, r7
 2867 0046 C0B2     		uxtb	r0, r0
 2868 0048 FFF7FEFF 		bl	OLED_DrawPixel
 2869              	.LVL301:
 483:display/OLED.c **** 	OLED_DrawLine(x0 - r, y0, x0 + r, y0);
 2870              		.loc 1 483 2 view .LVU748
 2871 004c A6EB0800 		sub	r0, r6, r8
 2872 0050 3946     		mov	r1, r7
 2873 0052 C0B2     		uxtb	r0, r0
 2874 0054 FFF7FEFF 		bl	OLED_DrawPixel
 2875              	.LVL302:
 484:display/OLED.c **** 
ARM GAS  /tmp/cc6puPNO.s 			page 101


 2876              		.loc 1 484 2 view .LVU749
 484:display/OLED.c **** 
 2877              		.loc 1 484 19 is_stmt 0 view .LVU750
 2878 0058 1FFA8BFB 		uxth	fp, fp
 2879 005c ABEB0400 		sub	r0, fp, r4
 484:display/OLED.c **** 
 2880              		.loc 1 484 31 view .LVU751
 2881 0060 04EB0B02 		add	r2, r4, fp
 484:display/OLED.c **** 
 2882              		.loc 1 484 2 view .LVU752
 2883 0064 4B46     		mov	r3, r9
 2884 0066 12B2     		sxth	r2, r2
 2885 0068 4946     		mov	r1, r9
 2886 006a 00B2     		sxth	r0, r0
 2887 006c FFF7FEFF 		bl	OLED_DrawLine
 2888              	.LVL303:
 486:display/OLED.c **** 	{
 2889              		.loc 1 486 2 is_stmt 1 view .LVU753
 477:display/OLED.c **** 	int16_t y = r;
 2890              		.loc 1 477 10 is_stmt 0 view .LVU754
 2891 0070 0027     		movs	r7, #0
 475:display/OLED.c **** 	int16_t ddF_y = -2 * r;
 2892              		.loc 1 475 10 view .LVU755
 2893 0072 0123     		movs	r3, #1
 2894 0074 0193     		str	r3, [sp, #4]
 486:display/OLED.c **** 	{
 2895              		.loc 1 486 8 view .LVU756
 2896 0076 46E0     		b	.L187
 2897              	.LVL304:
 2898              	.L192:
 490:display/OLED.c **** 			ddF_y += 2;
 2899              		.loc 1 490 4 is_stmt 1 view .LVU757
 490:display/OLED.c **** 			ddF_y += 2;
 2900              		.loc 1 490 5 is_stmt 0 view .LVU758
 2901 0078 009B     		ldr	r3, [sp]
 2902 007a 013B     		subs	r3, r3, #1
 2903 007c 1BB2     		sxth	r3, r3
 2904 007e 0093     		str	r3, [sp]
 2905              	.LVL305:
 491:display/OLED.c **** 			f += ddF_y;
 2906              		.loc 1 491 4 is_stmt 1 view .LVU759
 491:display/OLED.c **** 			f += ddF_y;
 2907              		.loc 1 491 10 is_stmt 0 view .LVU760
 2908 0080 029A     		ldr	r2, [sp, #8]
 2909 0082 0232     		adds	r2, r2, #2
 2910 0084 93B2     		uxth	r3, r2
 2911 0086 12B2     		sxth	r2, r2
 2912 0088 0292     		str	r2, [sp, #8]
 2913              	.LVL306:
 492:display/OLED.c **** 		}
 2914              		.loc 1 492 4 is_stmt 1 view .LVU761
 492:display/OLED.c **** 		}
 2915              		.loc 1 492 6 is_stmt 0 view .LVU762
 2916 008a 1D44     		add	r5, r5, r3
 2917              	.LVL307:
 492:display/OLED.c **** 		}
 2918              		.loc 1 492 6 view .LVU763
ARM GAS  /tmp/cc6puPNO.s 			page 102


 2919 008c 2DB2     		sxth	r5, r5
 2920              	.LVL308:
 2921              	.L188:
 494:display/OLED.c **** 		ddF_x += 2;
 2922              		.loc 1 494 3 is_stmt 1 view .LVU764
 494:display/OLED.c **** 		ddF_x += 2;
 2923              		.loc 1 494 4 is_stmt 0 view .LVU765
 2924 008e 0137     		adds	r7, r7, #1
 2925              	.LVL309:
 494:display/OLED.c **** 		ddF_x += 2;
 2926              		.loc 1 494 4 view .LVU766
 2927 0090 1FFA87F8 		uxth	r8, r7
 2928 0094 3FB2     		sxth	r7, r7
 2929              	.LVL310:
 495:display/OLED.c **** 		f += ddF_x;
 2930              		.loc 1 495 3 is_stmt 1 view .LVU767
 495:display/OLED.c **** 		f += ddF_x;
 2931              		.loc 1 495 9 is_stmt 0 view .LVU768
 2932 0096 019A     		ldr	r2, [sp, #4]
 2933 0098 0232     		adds	r2, r2, #2
 2934 009a 93B2     		uxth	r3, r2
 2935 009c 12B2     		sxth	r2, r2
 2936 009e 0192     		str	r2, [sp, #4]
 2937              	.LVL311:
 496:display/OLED.c **** 
 2938              		.loc 1 496 3 is_stmt 1 view .LVU769
 496:display/OLED.c **** 
 2939              		.loc 1 496 5 is_stmt 0 view .LVU770
 2940 00a0 1D44     		add	r5, r5, r3
 2941              	.LVL312:
 496:display/OLED.c **** 
 2942              		.loc 1 496 5 view .LVU771
 2943 00a2 2DB2     		sxth	r5, r5
 2944              	.LVL313:
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2945              		.loc 1 498 3 is_stmt 1 view .LVU772
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2946              		.loc 1 498 20 is_stmt 0 view .LVU773
 2947 00a4 ABEB080A 		sub	r10, fp, r8
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2948              		.loc 1 498 3 view .LVU774
 2949 00a8 0FFA8AFA 		sxth	r10, r10
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2950              		.loc 1 498 28 view .LVU775
 2951 00ac BDF80C40 		ldrh	r4, [sp, #12]
 2952 00b0 BDF80060 		ldrh	r6, [sp]
 2953 00b4 A119     		adds	r1, r4, r6
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2954              		.loc 1 498 3 view .LVU776
 2955 00b6 09B2     		sxth	r1, r1
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2956              		.loc 1 498 36 view .LVU777
 2957 00b8 0BEB0809 		add	r9, fp, r8
 498:display/OLED.c **** 		OLED_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y);
 2958              		.loc 1 498 3 view .LVU778
 2959 00bc 0FFA89F9 		sxth	r9, r9
 2960 00c0 0B46     		mov	r3, r1
ARM GAS  /tmp/cc6puPNO.s 			page 103


 2961 00c2 4A46     		mov	r2, r9
 2962 00c4 5046     		mov	r0, r10
 2963 00c6 FFF7FEFF 		bl	OLED_DrawLine
 2964              	.LVL314:
 499:display/OLED.c **** 
 2965              		.loc 1 499 3 is_stmt 1 view .LVU779
 499:display/OLED.c **** 
 2966              		.loc 1 499 28 is_stmt 0 view .LVU780
 2967 00ca A11B     		subs	r1, r4, r6
 499:display/OLED.c **** 
 2968              		.loc 1 499 3 view .LVU781
 2969 00cc 09B2     		sxth	r1, r1
 2970 00ce 0B46     		mov	r3, r1
 2971 00d0 5246     		mov	r2, r10
 2972 00d2 4846     		mov	r0, r9
 2973 00d4 FFF7FEFF 		bl	OLED_DrawLine
 2974              	.LVL315:
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2975              		.loc 1 501 3 is_stmt 1 view .LVU782
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2976              		.loc 1 501 20 is_stmt 0 view .LVU783
 2977 00d8 0BEB0609 		add	r9, fp, r6
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2978              		.loc 1 501 3 view .LVU784
 2979 00dc 0FFA89F9 		sxth	r9, r9
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2980              		.loc 1 501 28 view .LVU785
 2981 00e0 08EB0401 		add	r1, r8, r4
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2982              		.loc 1 501 3 view .LVU786
 2983 00e4 09B2     		sxth	r1, r1
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2984              		.loc 1 501 36 view .LVU787
 2985 00e6 ABEB0606 		sub	r6, fp, r6
 501:display/OLED.c **** 		OLED_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x);
 2986              		.loc 1 501 3 view .LVU788
 2987 00ea 36B2     		sxth	r6, r6
 2988 00ec 0B46     		mov	r3, r1
 2989 00ee 3246     		mov	r2, r6
 2990 00f0 4846     		mov	r0, r9
 2991 00f2 FFF7FEFF 		bl	OLED_DrawLine
 2992              	.LVL316:
 502:display/OLED.c **** 	}
 2993              		.loc 1 502 3 is_stmt 1 view .LVU789
 502:display/OLED.c **** 	}
 2994              		.loc 1 502 28 is_stmt 0 view .LVU790
 2995 00f6 A4EB0801 		sub	r1, r4, r8
 502:display/OLED.c **** 	}
 2996              		.loc 1 502 3 view .LVU791
 2997 00fa 09B2     		sxth	r1, r1
 2998 00fc 0B46     		mov	r3, r1
 2999 00fe 3246     		mov	r2, r6
 3000 0100 4846     		mov	r0, r9
 3001 0102 FFF7FEFF 		bl	OLED_DrawLine
 3002              	.LVL317:
 3003              	.L187:
 486:display/OLED.c **** 	{
ARM GAS  /tmp/cc6puPNO.s 			page 104


 3004              		.loc 1 486 8 is_stmt 1 view .LVU792
 3005 0106 009B     		ldr	r3, [sp]
 3006 0108 9F42     		cmp	r7, r3
 3007 010a 02DA     		bge	.L191
 488:display/OLED.c **** 		{
 3008              		.loc 1 488 3 view .LVU793
 488:display/OLED.c **** 		{
 3009              		.loc 1 488 6 is_stmt 0 view .LVU794
 3010 010c 002D     		cmp	r5, #0
 3011 010e B3DA     		bge	.L192
 3012 0110 BDE7     		b	.L188
 3013              	.L191:
 504:display/OLED.c **** 
 3014              		.loc 1 504 1 view .LVU795
 3015 0112 05B0     		add	sp, sp, #20
 3016              	.LCFI38:
 3017              		.cfi_def_cfa_offset 36
 3018              	.LVL318:
 504:display/OLED.c **** 
 3019              		.loc 1 504 1 view .LVU796
 3020              		@ sp needed
 3021 0114 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 504:display/OLED.c **** 
 3022              		.loc 1 504 1 view .LVU797
 3023              		.cfi_endproc
 3024              	.LFE790:
 3026              		.section	.text.OLED_UpdateScreen,"ax",%progbits
 3027              		.align	1
 3028              		.global	OLED_UpdateScreen
 3029              		.syntax unified
 3030              		.thumb
 3031              		.thumb_func
 3033              	OLED_UpdateScreen:
 3034              	.LFB792:
 544:display/OLED.c **** 
 545:display/OLED.c **** /**********************************************************************************/
 546:display/OLED.c **** /*                           U P D A T E   S C R E E N                            */
 547:display/OLED.c **** /**********************************************************************************/
 548:display/OLED.c **** //---------------------------------------------------------------------//
 549:display/OLED.c **** void OLED_UpdateScreen()
 550:display/OLED.c **** {
 3035              		.loc 1 550 1 is_stmt 1 view -0
 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 0
 3038              		@ frame_needed = 0, uses_anonymous_args = 0
 3039 0000 38B5     		push	{r3, r4, r5, lr}
 3040              	.LCFI39:
 3041              		.cfi_def_cfa_offset 16
 3042              		.cfi_offset 3, -16
 3043              		.cfi_offset 4, -12
 3044              		.cfi_offset 5, -8
 3045              		.cfi_offset 14, -4
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3046              		.loc 1 551 2 view .LVU799
 3047              	.LBB76:
 3048              		.loc 1 551 7 view .LVU800
 3049              	.LVL319:
ARM GAS  /tmp/cc6puPNO.s 			page 105


 3050              		.loc 1 551 15 is_stmt 0 view .LVU801
 3051 0002 0025     		movs	r5, #0
 3052              		.loc 1 551 2 view .LVU802
 3053 0004 0BE0     		b	.L194
 3054              	.LVL320:
 3055              	.L196:
 3056              	.LBB77:
 552:display/OLED.c **** 	{
 553:display/OLED.c **** 		OLED_SendCommand(0x00 | (oled_start_column & 0x0F));	// lo tetrad starting column address
 554:display/OLED.c **** 		OLED_SendCommand(0x10 | (oled_start_column >> 4));		// hi tetrad starting column address
 555:display/OLED.c **** 
 556:display/OLED.c **** 		OLED_SendCommand(0xB0 | page_number);					// starting address of the page
 557:display/OLED.c **** 
 558:display/OLED.c **** 		for (int16_t j = 0; j < OLED_WIDTH; j++)
 559:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3057              		.loc 1 559 5 is_stmt 1 discriminator 3 view .LVU803
 3058              		.loc 1 559 56 is_stmt 0 discriminator 3 view .LVU804
 3059 0006 04EBC513 		add	r3, r4, r5, lsl #7
 3060              		.loc 1 559 5 discriminator 3 view .LVU805
 3061 000a 0C4A     		ldr	r2, .L200
 3062 000c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3063 000e FFF7FEFF 		bl	OLED_SendData
 3064              	.LVL321:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3065              		.loc 1 558 39 is_stmt 1 discriminator 3 view .LVU806
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3066              		.loc 1 558 40 is_stmt 0 discriminator 3 view .LVU807
 3067 0012 0134     		adds	r4, r4, #1
 3068              	.LVL322:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3069              		.loc 1 558 40 discriminator 3 view .LVU808
 3070 0014 24B2     		sxth	r4, r4
 3071              	.LVL323:
 3072              	.L195:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3073              		.loc 1 558 23 is_stmt 1 discriminator 1 view .LVU809
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3074              		.loc 1 558 3 is_stmt 0 discriminator 1 view .LVU810
 3075 0016 7F2C     		cmp	r4, #127
 3076 0018 F5DD     		ble	.L196
 3077              	.LBE77:
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3078              		.loc 1 551 57 is_stmt 1 discriminator 2 view .LVU811
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3079              		.loc 1 551 68 is_stmt 0 discriminator 2 view .LVU812
 3080 001a 0135     		adds	r5, r5, #1
 3081              	.LVL324:
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3082              		.loc 1 551 68 discriminator 2 view .LVU813
 3083 001c EDB2     		uxtb	r5, r5
 3084              	.LVL325:
 3085              	.L194:
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3086              		.loc 1 551 32 is_stmt 1 discriminator 1 view .LVU814
 551:display/OLED.c **** 	for (uint8_t page_number = 0; page_number < NUMB_PAGE; page_number++)
 3087              		.loc 1 551 2 is_stmt 0 discriminator 1 view .LVU815
 3088 001e 072D     		cmp	r5, #7
ARM GAS  /tmp/cc6puPNO.s 			page 106


 3089 0020 0BD8     		bhi	.L199
 553:display/OLED.c **** 		OLED_SendCommand(0x10 | (oled_start_column >> 4));		// hi tetrad starting column address
 3090              		.loc 1 553 3 is_stmt 1 view .LVU816
 3091 0022 0020     		movs	r0, #0
 3092 0024 FFF7FEFF 		bl	OLED_SendCommand
 3093              	.LVL326:
 554:display/OLED.c **** 
 3094              		.loc 1 554 3 view .LVU817
 3095 0028 1020     		movs	r0, #16
 3096 002a FFF7FEFF 		bl	OLED_SendCommand
 3097              	.LVL327:
 556:display/OLED.c **** 
 3098              		.loc 1 556 3 view .LVU818
 3099 002e 45F0B000 		orr	r0, r5, #176
 3100 0032 FFF7FEFF 		bl	OLED_SendCommand
 3101              	.LVL328:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3102              		.loc 1 558 3 view .LVU819
 3103              	.LBB78:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3104              		.loc 1 558 8 view .LVU820
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3105              		.loc 1 558 16 is_stmt 0 view .LVU821
 3106 0036 0024     		movs	r4, #0
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3107              		.loc 1 558 3 view .LVU822
 3108 0038 EDE7     		b	.L195
 3109              	.LVL329:
 3110              	.L199:
 558:display/OLED.c **** 		{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]); }
 3111              		.loc 1 558 3 view .LVU823
 3112              	.LBE78:
 3113              	.LBE76:
 560:display/OLED.c **** 	}
 561:display/OLED.c **** }
 3114              		.loc 1 561 1 view .LVU824
 3115 003a 38BD     		pop	{r3, r4, r5, pc}
 3116              	.LVL330:
 3117              	.L201:
 3118              		.loc 1 561 1 view .LVU825
 3119              		.align	2
 3120              	.L200:
 3121 003c 00000000 		.word	.LANCHOR0
 3122              		.cfi_endproc
 3123              	.LFE792:
 3125              		.section	.text.OLED_init,"ax",%progbits
 3126              		.align	1
 3127              		.global	OLED_init
 3128              		.syntax unified
 3129              		.thumb
 3130              		.thumb_func
 3132              	OLED_init:
 3133              	.LFB766:
  47:display/OLED.c **** 	LCD_RST(OFF);
 3134              		.loc 1 47 1 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6puPNO.s 			page 107


 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138 0000 38B5     		push	{r3, r4, r5, lr}
 3139              	.LCFI40:
 3140              		.cfi_def_cfa_offset 16
 3141              		.cfi_offset 3, -16
 3142              		.cfi_offset 4, -12
 3143              		.cfi_offset 5, -8
 3144              		.cfi_offset 14, -4
  48:display/OLED.c **** 	delay_us (3);	
 3145              		.loc 1 48 2 view .LVU827
 3146              	.LVL331:
 3147              	.LBB79:
 3148              	.LBI79:
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 3149              		.loc 2 832 22 view .LVU828
 3150              	.LBB80:
 3151              		.loc 2 834 3 view .LVU829
 3152 0002 2F4C     		ldr	r4, .L204
 3153 0004 0425     		movs	r5, #4
 3154 0006 6561     		str	r5, [r4, #20]
 3155              	.LVL332:
 3156              		.loc 2 834 3 is_stmt 0 view .LVU830
 3157              	.LBE80:
 3158              	.LBE79:
  48:display/OLED.c **** 	delay_us (3);	
 3159              		.loc 1 48 14 is_stmt 1 view .LVU831
  49:display/OLED.c ****   	LCD_RST(ON);
 3160              		.loc 1 49 2 view .LVU832
 3161 0008 0320     		movs	r0, #3
 3162 000a FFF7FEFF 		bl	delay_us
 3163              	.LVL333:
  50:display/OLED.c ****   	delay_us (3);	
 3164              		.loc 1 50 4 view .LVU833
 3165              	.LBB81:
 3166              	.LBI81:
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 3167              		.loc 2 803 22 view .LVU834
 3168              	.LBB82:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 3169              		.loc 2 805 3 view .LVU835
 3170 000e 2561     		str	r5, [r4, #16]
 3171              	.LVL334:
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 3172              		.loc 2 805 3 is_stmt 0 view .LVU836
 3173              	.LBE82:
 3174              	.LBE81:
  50:display/OLED.c ****   	delay_us (3);	
 3175              		.loc 1 50 15 is_stmt 1 view .LVU837
  51:display/OLED.c **** 	
 3176              		.loc 1 51 4 view .LVU838
 3177 0010 0320     		movs	r0, #3
 3178 0012 FFF7FEFF 		bl	delay_us
 3179              	.LVL335:
  53:display/OLED.c **** 	OLED_SendCommand(OLED_SET_DISPLAY_CLOCK_DIV_RATIO);
 3180              		.loc 1 53 2 view .LVU839
 3181 0016 AE20     		movs	r0, #174
 3182 0018 FFF7FEFF 		bl	OLED_SendCommand
ARM GAS  /tmp/cc6puPNO.s 			page 108


 3183              	.LVL336:
  54:display/OLED.c **** 	OLED_SendCommand(0x80);
 3184              		.loc 1 54 2 view .LVU840
 3185 001c D520     		movs	r0, #213
 3186 001e FFF7FEFF 		bl	OLED_SendCommand
 3187              	.LVL337:
  55:display/OLED.c **** 	
 3188              		.loc 1 55 2 view .LVU841
 3189 0022 8020     		movs	r0, #128
 3190 0024 FFF7FEFF 		bl	OLED_SendCommand
 3191              	.LVL338:
  57:display/OLED.c **** 	OLED_SendCommand(0x3F);
 3192              		.loc 1 57 2 view .LVU842
 3193 0028 A820     		movs	r0, #168
 3194 002a FFF7FEFF 		bl	OLED_SendCommand
 3195              	.LVL339:
  58:display/OLED.c **** 	
 3196              		.loc 1 58 2 view .LVU843
 3197 002e 3F20     		movs	r0, #63
 3198 0030 FFF7FEFF 		bl	OLED_SendCommand
 3199              	.LVL340:
  60:display/OLED.c **** 	OLED_SendCommand(0x0);
 3200              		.loc 1 60 2 view .LVU844
 3201 0034 D320     		movs	r0, #211
 3202 0036 FFF7FEFF 		bl	OLED_SendCommand
 3203              	.LVL341:
  61:display/OLED.c **** 	
 3204              		.loc 1 61 2 view .LVU845
 3205 003a 0020     		movs	r0, #0
 3206 003c FFF7FEFF 		bl	OLED_SendCommand
 3207              	.LVL342:
  63:display/OLED.c **** 	
 3208              		.loc 1 63 2 view .LVU846
 3209 0040 4020     		movs	r0, #64
 3210 0042 FFF7FEFF 		bl	OLED_SendCommand
 3211              	.LVL343:
  65:display/OLED.c **** 	OLED_SendCommand(0x14);
 3212              		.loc 1 65 2 view .LVU847
 3213 0046 8D20     		movs	r0, #141
 3214 0048 FFF7FEFF 		bl	OLED_SendCommand
 3215              	.LVL344:
  66:display/OLED.c **** 	
 3216              		.loc 1 66 2 view .LVU848
 3217 004c 1420     		movs	r0, #20
 3218 004e FFF7FEFF 		bl	OLED_SendCommand
 3219              	.LVL345:
  68:display/OLED.c **** 	OLED_SendCommand(0x00);
 3220              		.loc 1 68 2 view .LVU849
 3221 0052 2020     		movs	r0, #32
 3222 0054 FFF7FEFF 		bl	OLED_SendCommand
 3223              	.LVL346:
  69:display/OLED.c **** 	
 3224              		.loc 1 69 2 view .LVU850
 3225 0058 0020     		movs	r0, #0
 3226 005a FFF7FEFF 		bl	OLED_SendCommand
 3227              	.LVL347:
  71:display/OLED.c **** 	OLED_SendCommand(OLED_COM_SCAN_DIR_DEC);
ARM GAS  /tmp/cc6puPNO.s 			page 109


 3228              		.loc 1 71 2 view .LVU851
 3229 005e A020     		movs	r0, #160
 3230 0060 FFF7FEFF 		bl	OLED_SendCommand
 3231              	.LVL348:
  72:display/OLED.c **** 	OLED_SendCommand(OLED_SET_COM_PINS);
 3232              		.loc 1 72 2 view .LVU852
 3233 0064 C820     		movs	r0, #200
 3234 0066 FFF7FEFF 		bl	OLED_SendCommand
 3235              	.LVL349:
  73:display/OLED.c **** 	OLED_SendCommand(0x12);
 3236              		.loc 1 73 2 view .LVU853
 3237 006a DA20     		movs	r0, #218
 3238 006c FFF7FEFF 		bl	OLED_SendCommand
 3239              	.LVL350:
  74:display/OLED.c **** 	
 3240              		.loc 1 74 2 view .LVU854
 3241 0070 1220     		movs	r0, #18
 3242 0072 FFF7FEFF 		bl	OLED_SendCommand
 3243              	.LVL351:
  76:display/OLED.c **** 	OLED_SendCommand(0xFF);
 3244              		.loc 1 76 2 view .LVU855
 3245 0076 8120     		movs	r0, #129
 3246 0078 FFF7FEFF 		bl	OLED_SendCommand
 3247              	.LVL352:
  77:display/OLED.c **** 	
 3248              		.loc 1 77 2 view .LVU856
 3249 007c FF20     		movs	r0, #255
 3250 007e FFF7FEFF 		bl	OLED_SendCommand
 3251              	.LVL353:
  79:display/OLED.c **** 	OLED_SendCommand(0xF1);
 3252              		.loc 1 79 2 view .LVU857
 3253 0082 D920     		movs	r0, #217
 3254 0084 FFF7FEFF 		bl	OLED_SendCommand
 3255              	.LVL354:
  80:display/OLED.c **** 	
 3256              		.loc 1 80 2 view .LVU858
 3257 0088 F120     		movs	r0, #241
 3258 008a FFF7FEFF 		bl	OLED_SendCommand
 3259              	.LVL355:
  82:display/OLED.c **** 	OLED_SendCommand(0x40);
 3260              		.loc 1 82 2 view .LVU859
 3261 008e DB20     		movs	r0, #219
 3262 0090 FFF7FEFF 		bl	OLED_SendCommand
 3263              	.LVL356:
  83:display/OLED.c **** 	
 3264              		.loc 1 83 2 view .LVU860
 3265 0094 4020     		movs	r0, #64
 3266 0096 FFF7FEFF 		bl	OLED_SendCommand
 3267              	.LVL357:
  85:display/OLED.c **** 	OLED_SendCommand(OLED_NORMAL_DISPLAY);
 3268              		.loc 1 85 2 view .LVU861
 3269 009a A420     		movs	r0, #164
 3270 009c FFF7FEFF 		bl	OLED_SendCommand
 3271              	.LVL358:
  86:display/OLED.c **** 	OLED_SendCommand(OLED_DISPLAY_ON);  // Display On
 3272              		.loc 1 86 2 view .LVU862
 3273 00a0 A620     		movs	r0, #166
ARM GAS  /tmp/cc6puPNO.s 			page 110


 3274 00a2 FFF7FEFF 		bl	OLED_SendCommand
 3275              	.LVL359:
  87:display/OLED.c **** 
 3276              		.loc 1 87 2 view .LVU863
 3277 00a6 AF20     		movs	r0, #175
 3278 00a8 FFF7FEFF 		bl	OLED_SendCommand
 3279              	.LVL360:
  89:display/OLED.c **** 	OLED_Clear(NONE_INVERTED);
 3280              		.loc 1 89 2 view .LVU864
 3281 00ac 0020     		movs	r0, #0
 3282 00ae FFF7FEFF 		bl	OLED_Invert
 3283              	.LVL361:
  90:display/OLED.c **** 	OLED_UpdateScreen();
 3284              		.loc 1 90 2 view .LVU865
 3285 00b2 0020     		movs	r0, #0
 3286 00b4 FFF7FEFF 		bl	OLED_Clear
 3287              	.LVL362:
  91:display/OLED.c **** 	return 1;
 3288              		.loc 1 91 2 view .LVU866
 3289 00b8 FFF7FEFF 		bl	OLED_UpdateScreen
 3290              	.LVL363:
  92:display/OLED.c **** }
 3291              		.loc 1 92 2 view .LVU867
  93:display/OLED.c **** 
 3292              		.loc 1 93 1 is_stmt 0 view .LVU868
 3293 00bc 0120     		movs	r0, #1
 3294 00be 38BD     		pop	{r3, r4, r5, pc}
 3295              	.L205:
 3296              		.align	2
 3297              	.L204:
 3298 00c0 00080140 		.word	1073809408
 3299              		.cfi_endproc
 3300              	.LFE766:
 3302              		.section	.text.OLED_UpdateOnePage,"ax",%progbits
 3303              		.align	1
 3304              		.global	OLED_UpdateOnePage
 3305              		.syntax unified
 3306              		.thumb
 3307              		.thumb_func
 3309              	OLED_UpdateOnePage:
 3310              	.LVL364:
 3311              	.LFB793:
 562:display/OLED.c **** 
 563:display/OLED.c **** //---------------------------------------------------------------------//
 564:display/OLED.c **** void OLED_UpdateOnePage(uint8_t page_number)
 565:display/OLED.c **** {
 3312              		.loc 1 565 1 is_stmt 1 view -0
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 0
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316              		.loc 1 565 1 is_stmt 0 view .LVU870
 3317 0000 38B5     		push	{r3, r4, r5, lr}
 3318              	.LCFI41:
 3319              		.cfi_def_cfa_offset 16
 3320              		.cfi_offset 3, -16
 3321              		.cfi_offset 4, -12
 3322              		.cfi_offset 5, -8
ARM GAS  /tmp/cc6puPNO.s 			page 111


 3323              		.cfi_offset 14, -4
 3324 0002 0546     		mov	r5, r0
 566:display/OLED.c **** 	OLED_SendCommand(0x00 | (oled_start_column & 0x0F));	// lo tetrad starting column address
 3325              		.loc 1 566 2 is_stmt 1 view .LVU871
 3326 0004 0020     		movs	r0, #0
 3327              	.LVL365:
 3328              		.loc 1 566 2 is_stmt 0 view .LVU872
 3329 0006 FFF7FEFF 		bl	OLED_SendCommand
 3330              	.LVL366:
 567:display/OLED.c **** 	OLED_SendCommand(0x10 | (oled_start_column >> 4));		// hi tetrad starting column address
 3331              		.loc 1 567 2 is_stmt 1 view .LVU873
 3332 000a 1020     		movs	r0, #16
 3333 000c FFF7FEFF 		bl	OLED_SendCommand
 3334              	.LVL367:
 568:display/OLED.c **** 
 569:display/OLED.c **** 	OLED_SendCommand(0xB0 | page_number);					// starting address of the page
 3335              		.loc 1 569 2 view .LVU874
 3336 0010 45F0B000 		orr	r0, r5, #176
 3337 0014 FFF7FEFF 		bl	OLED_SendCommand
 3338              	.LVL368:
 570:display/OLED.c **** 
 571:display/OLED.c **** 	for (int16_t j = 0; j < OLED_WIDTH; j++)
 3339              		.loc 1 571 2 view .LVU875
 3340              	.LBB83:
 3341              		.loc 1 571 7 view .LVU876
 3342              		.loc 1 571 15 is_stmt 0 view .LVU877
 3343 0018 0024     		movs	r4, #0
 3344              		.loc 1 571 2 view .LVU878
 3345 001a 07E0     		b	.L207
 3346              	.LVL369:
 3347              	.L208:
 572:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3348              		.loc 1 572 4 is_stmt 1 discriminator 3 view .LVU879
 3349              		.loc 1 572 55 is_stmt 0 discriminator 3 view .LVU880
 3350 001c 04EBC513 		add	r3, r4, r5, lsl #7
 3351              		.loc 1 572 4 discriminator 3 view .LVU881
 3352 0020 044A     		ldr	r2, .L210
 3353 0022 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3354 0024 FFF7FEFF 		bl	OLED_SendData
 3355              	.LVL370:
 571:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3356              		.loc 1 571 38 is_stmt 1 discriminator 3 view .LVU882
 571:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3357              		.loc 1 571 39 is_stmt 0 discriminator 3 view .LVU883
 3358 0028 0134     		adds	r4, r4, #1
 3359              	.LVL371:
 571:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3360              		.loc 1 571 39 discriminator 3 view .LVU884
 3361 002a 24B2     		sxth	r4, r4
 3362              	.LVL372:
 3363              	.L207:
 571:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3364              		.loc 1 571 22 is_stmt 1 discriminator 1 view .LVU885
 571:display/OLED.c **** 	{	OLED_SendData(oled_buffer[page_number * OLED_WIDTH + j]);	}
 3365              		.loc 1 571 2 is_stmt 0 discriminator 1 view .LVU886
 3366 002c 7F2C     		cmp	r4, #127
 3367 002e F5DD     		ble	.L208
ARM GAS  /tmp/cc6puPNO.s 			page 112


 3368              	.LBE83:
 573:display/OLED.c **** }
 3369              		.loc 1 573 1 view .LVU887
 3370 0030 38BD     		pop	{r3, r4, r5, pc}
 3371              	.LVL373:
 3372              	.L211:
 3373              		.loc 1 573 1 view .LVU888
 3374 0032 00BF     		.align	2
 3375              	.L210:
 3376 0034 00000000 		.word	.LANCHOR0
 3377              		.cfi_endproc
 3378              	.LFE793:
 3380              		.section	.bss.oled_buffer,"aw",%nobits
 3381              		.align	2
 3382              		.set	.LANCHOR0,. + 0
 3385              	oled_buffer:
 3386 0000 00000000 		.space	1024
 3386      00000000 
 3386      00000000 
 3386      00000000 
 3386      00000000 
 3387              		.text
 3388              	.Letext0:
 3389              		.file 4 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/m
 3390              		.file 5 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 3391              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3392              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 3393              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
 3394              		.file 9 "display/OLED_Fonts.h"
 3395              		.file 10 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/
 3396              		.file 11 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/
 3397              		.file 12 "Core/Inc/tim.h"
ARM GAS  /tmp/cc6puPNO.s 			page 113


DEFINED SYMBOLS
                            *ABS*:0000000000000000 OLED.c
     /tmp/cc6puPNO.s:18     .text.OLED_ClearBuffer:0000000000000000 $t
     /tmp/cc6puPNO.s:24     .text.OLED_ClearBuffer:0000000000000000 OLED_ClearBuffer
     /tmp/cc6puPNO.s:64     .text.OLED_ClearBuffer:0000000000000014 $d
     /tmp/cc6puPNO.s:69     .text.OLED_SendCommand:0000000000000000 $t
     /tmp/cc6puPNO.s:75     .text.OLED_SendCommand:0000000000000000 OLED_SendCommand
     /tmp/cc6puPNO.s:162    .text.OLED_SendCommand:0000000000000024 $d
     /tmp/cc6puPNO.s:168    .text.OLED_SendData:0000000000000000 $t
     /tmp/cc6puPNO.s:174    .text.OLED_SendData:0000000000000000 OLED_SendData
     /tmp/cc6puPNO.s:259    .text.OLED_SendData:0000000000000024 $d
     /tmp/cc6puPNO.s:265    .text.OLED_Clear:0000000000000000 $t
     /tmp/cc6puPNO.s:271    .text.OLED_Clear:0000000000000000 OLED_Clear
     /tmp/cc6puPNO.s:310    .text.OLED_Invert:0000000000000000 $t
     /tmp/cc6puPNO.s:316    .text.OLED_Invert:0000000000000000 OLED_Invert
     /tmp/cc6puPNO.s:355    .text.OLED_SetContrast:0000000000000000 $t
     /tmp/cc6puPNO.s:361    .text.OLED_SetContrast:0000000000000000 OLED_SetContrast
     /tmp/cc6puPNO.s:391    .text.OLED_GetWidthStr:0000000000000000 $t
     /tmp/cc6puPNO.s:397    .text.OLED_GetWidthStr:0000000000000000 OLED_GetWidthStr
     /tmp/cc6puPNO.s:474    .text.OLED_GetWidthStr:0000000000000038 $d
     /tmp/cc6puPNO.s:479    .rodata.OLED_GetWidthNum.str1.4:0000000000000000 $d
     /tmp/cc6puPNO.s:483    .text.OLED_GetWidthNum:0000000000000000 $t
     /tmp/cc6puPNO.s:489    .text.OLED_GetWidthNum:0000000000000000 OLED_GetWidthNum
     /tmp/cc6puPNO.s:527    .text.OLED_GetWidthNum:000000000000001c $d
     /tmp/cc6puPNO.s:532    .text.OLED_DrawPixelStatus:0000000000000000 $t
     /tmp/cc6puPNO.s:538    .text.OLED_DrawPixelStatus:0000000000000000 OLED_DrawPixelStatus
     /tmp/cc6puPNO.s:601    .text.OLED_DrawPixelStatus:0000000000000040 $d
     /tmp/cc6puPNO.s:606    .text.OLED_DrawCharSetMode:0000000000000000 $t
     /tmp/cc6puPNO.s:612    .text.OLED_DrawCharSetMode:0000000000000000 OLED_DrawCharSetMode
     /tmp/cc6puPNO.s:756    .text.OLED_DrawCharSetMode:000000000000009c $d
     /tmp/cc6puPNO.s:761    .text.OLED_DrawStrSetMode:0000000000000000 $t
     /tmp/cc6puPNO.s:767    .text.OLED_DrawStrSetMode:0000000000000000 OLED_DrawStrSetMode
     /tmp/cc6puPNO.s:916    .text.OLED_DrawStrSetMode:0000000000000090 $d
     /tmp/cc6puPNO.s:921    .text.OLED_DrawNumSetMode:0000000000000000 $t
     /tmp/cc6puPNO.s:927    .text.OLED_DrawNumSetMode:0000000000000000 OLED_DrawNumSetMode
     /tmp/cc6puPNO.s:977    .text.OLED_DrawNumSetMode:0000000000000024 $d
     /tmp/cc6puPNO.s:982    .text.OLED_DrawChar:0000000000000000 $t
     /tmp/cc6puPNO.s:988    .text.OLED_DrawChar:0000000000000000 OLED_DrawChar
     /tmp/cc6puPNO.s:1124   .text.OLED_DrawChar:000000000000008c $d
     /tmp/cc6puPNO.s:1129   .text.OLED_DrawStr:0000000000000000 $t
     /tmp/cc6puPNO.s:1135   .text.OLED_DrawStr:0000000000000000 OLED_DrawStr
     /tmp/cc6puPNO.s:1280   .text.OLED_DrawStr:000000000000008c $d
     /tmp/cc6puPNO.s:1285   .text.OLED_DrawNum:0000000000000000 $t
     /tmp/cc6puPNO.s:1291   .text.OLED_DrawNum:0000000000000000 OLED_DrawNum
     /tmp/cc6puPNO.s:1338   .text.OLED_DrawNum:0000000000000020 $d
     /tmp/cc6puPNO.s:1343   .text.OLED_DrawBuffer:0000000000000000 $t
     /tmp/cc6puPNO.s:1349   .text.OLED_DrawBuffer:0000000000000000 OLED_DrawBuffer
     /tmp/cc6puPNO.s:1454   .text.OLED_DrawPixel:0000000000000000 $t
     /tmp/cc6puPNO.s:1460   .text.OLED_DrawPixel:0000000000000000 OLED_DrawPixel
     /tmp/cc6puPNO.s:1497   .text.OLED_DrawPixel:0000000000000024 $d
     /tmp/cc6puPNO.s:1502   .text.OLED_DrawBitmap:0000000000000000 $t
     /tmp/cc6puPNO.s:1508   .text.OLED_DrawBitmap:0000000000000000 OLED_DrawBitmap
     /tmp/cc6puPNO.s:1628   .text.OLED_DrawXBM:0000000000000000 $t
     /tmp/cc6puPNO.s:1634   .text.OLED_DrawXBM:0000000000000000 OLED_DrawXBM
     /tmp/cc6puPNO.s:1787   .text.OLED_DrawVLine:0000000000000000 $t
     /tmp/cc6puPNO.s:1793   .text.OLED_DrawVLine:0000000000000000 OLED_DrawVLine
     /tmp/cc6puPNO.s:1848   .text.OLED_DrawHLine:0000000000000000 $t
ARM GAS  /tmp/cc6puPNO.s 			page 114


     /tmp/cc6puPNO.s:1854   .text.OLED_DrawHLine:0000000000000000 OLED_DrawHLine
     /tmp/cc6puPNO.s:1911   .text.OLED_DrawRectangle:0000000000000000 $t
     /tmp/cc6puPNO.s:1917   .text.OLED_DrawRectangle:0000000000000000 OLED_DrawRectangle
     /tmp/cc6puPNO.s:1988   .text.OLED_DrawRectangleFill:0000000000000000 $t
     /tmp/cc6puPNO.s:1994   .text.OLED_DrawRectangleFill:0000000000000000 OLED_DrawRectangleFill
     /tmp/cc6puPNO.s:2086   .text.OLED_DrawCircle:0000000000000000 $t
     /tmp/cc6puPNO.s:2092   .text.OLED_DrawCircle:0000000000000000 OLED_DrawCircle
     /tmp/cc6puPNO.s:2305   .text.OLED_DrawLine:0000000000000000 $t
     /tmp/cc6puPNO.s:2311   .text.OLED_DrawLine:0000000000000000 OLED_DrawLine
     /tmp/cc6puPNO.s:2490   .text.OLED_DrawTriangle:0000000000000000 $t
     /tmp/cc6puPNO.s:2496   .text.OLED_DrawTriangle:0000000000000000 OLED_DrawTriangle
     /tmp/cc6puPNO.s:2545   .text.OLED_DrawTriangleFill:0000000000000000 $t
     /tmp/cc6puPNO.s:2551   .text.OLED_DrawTriangleFill:0000000000000000 OLED_DrawTriangleFill
     /tmp/cc6puPNO.s:2794   .text.OLED_DrawCircleFill:0000000000000000 $t
     /tmp/cc6puPNO.s:2800   .text.OLED_DrawCircleFill:0000000000000000 OLED_DrawCircleFill
     /tmp/cc6puPNO.s:3027   .text.OLED_UpdateScreen:0000000000000000 $t
     /tmp/cc6puPNO.s:3033   .text.OLED_UpdateScreen:0000000000000000 OLED_UpdateScreen
     /tmp/cc6puPNO.s:3121   .text.OLED_UpdateScreen:000000000000003c $d
     /tmp/cc6puPNO.s:3126   .text.OLED_init:0000000000000000 $t
     /tmp/cc6puPNO.s:3132   .text.OLED_init:0000000000000000 OLED_init
     /tmp/cc6puPNO.s:3298   .text.OLED_init:00000000000000c0 $d
     /tmp/cc6puPNO.s:3303   .text.OLED_UpdateOnePage:0000000000000000 $t
     /tmp/cc6puPNO.s:3309   .text.OLED_UpdateOnePage:0000000000000000 OLED_UpdateOnePage
     /tmp/cc6puPNO.s:3376   .text.OLED_UpdateOnePage:0000000000000034 $d
     /tmp/cc6puPNO.s:3381   .bss.oled_buffer:0000000000000000 $d
     /tmp/cc6puPNO.s:3385   .bss.oled_buffer:0000000000000000 oled_buffer

UNDEFINED SYMBOLS
strlen
Font
sprintf
delay_us
